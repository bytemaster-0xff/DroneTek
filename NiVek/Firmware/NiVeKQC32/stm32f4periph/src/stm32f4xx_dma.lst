ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3	@ Tag_ABI_HardFP_use
   4              		.eabi_attribute 28, 1	@ Tag_ABI_VFP_args
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   7              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   8              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   9              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
  10              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
  11              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  12              		.eabi_attribute 30, 4	@ Tag_ABI_optimization_goals
  13              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  14              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  15              		.file	"stm32f4xx_dma.c"
  16              	@ GNU C (Sourcery CodeBench Lite 2012.09-63) version 4.7.2 (arm-none-eabi)
  17              	@	compiled by GNU C version 4.3.2, GMP version 5.0.5, MPFR version 3.1.1-p2, MPC version 1.0.1
  18              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  19              	@ options passed:  -I . -I \STMSPINCDDIR -I .\stm32f4periph\inc
  20              	@ -I .\CMSIS\Include -I .\inc\commo\usb -I .\inc\commo -I .\inc\common
  21              	@ -I .\inc -imultilib thumb2
  22              	@ -iprefix k:\electronics\gcc\bin\../lib/gcc/arm-none-eabi/4.7.2/
  23              	@ -isysroot k:\electronics\gcc\bin\../arm-none-eabi
  24              	@ -MD .\stm32f4periph\src\stm32f4xx_dma.d -MF .dep\stm32f4xx_dma.o.d -MP
  25              	@ -MQ .\stm32f4periph\src\stm32f4xx_dma.o -D__USES_INITFINI__ -D STM32F0XX
  26              	@ -D USE_STDPERIPH_DRIVER -D RUN_FROM_FLASH=1
  27              	@ -D __CS_SOURCERYGXX_MAJ__=2012 -D __CS_SOURCERYGXX_MIN__=9
  28              	@ -D __CS_SOURCERYGXX_REV__=63 .\stm32f4periph\src\stm32f4xx_dma.c
  29              	@ -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -mthumb
  30              	@ -auxbase-strip .\stm32f4periph\src\stm32f4xx_dma.o -gdwarf-2 -Os -Wall
  31              	@ -Wstrict-prototypes -std=gnu99 -fomit-frame-pointer -fverbose-asm
  32              	@ options enabled:  -fauto-inc-dec -fbranch-count-reg -fcaller-saves
  33              	@ -fcombine-stack-adjustments -fcommon -fcompare-elim -fcprop-registers
  34              	@ -fcrossjumping -fcse-follow-jumps -fdebug-types-section -fdefer-pop
  35              	@ -fdelete-null-pointer-checks -fdevirtualize -fdwarf2-cfi-asm
  36              	@ -fearly-inlining -feliminate-unused-debug-types -fexpensive-optimizations
  37              	@ -fextension-elimination -fforward-propagate -ffunction-cse -fgcse
  38              	@ -fgcse-lm -fgnu-runtime -fguess-branch-probability -fident
  39              	@ -fif-conversion -fif-conversion2 -findirect-inlining -finline
  40              	@ -finline-atomics -finline-functions -finline-functions-called-once
  41              	@ -finline-small-functions -fipa-cp -fipa-profile -fipa-pure-const
  42              	@ -fipa-reference -fipa-sra -fira-share-save-slots -fira-share-spill-slots
  43              	@ -fivopts -fkeep-static-consts -fleading-underscore -fmath-errno
  44              	@ -fmerge-constants -fmerge-debug-strings -fmove-loop-invariants
  45              	@ -fomit-frame-pointer -foptimize-register-move -foptimize-sibling-calls
  46              	@ -fpartial-inlining -fpeephole -fpeephole2 -fprefetch-loop-arrays
  47              	@ -freg-struct-return -fregmove -freorder-blocks -freorder-functions
  48              	@ -frerun-cse-after-loop -fsched-critical-path-heuristic
  49              	@ -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
  50              	@ -fsched-last-insn-heuristic -fsched-rank-heuristic -fsched-spec
  51              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fschedule-insns2
  52              	@ -fsection-anchors -fshow-column -fshrink-wrap -fsigned-zeros
  53              	@ -fsplit-ivs-in-unroller -fsplit-wide-types -fstrict-aliasing
  54              	@ -fstrict-overflow -fstrict-volatile-bitfields -fthread-jumps
  55              	@ -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp -ftree-builtin-call-dce
  56              	@ -ftree-ccp -ftree-ch -ftree-copy-prop -ftree-copyrename -ftree-cselim
  57              	@ -ftree-dce -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 2


  58              	@ -ftree-if-to-switch-conversion -ftree-loop-if-convert -ftree-loop-im
  59              	@ -ftree-loop-ivcanon -ftree-loop-optimize -ftree-parallelize-loops=
  60              	@ -ftree-phiprop -ftree-pre -ftree-pta -ftree-reassoc -ftree-scev-cprop
  61              	@ -ftree-sink -ftree-slp-vectorize -ftree-sra -ftree-switch-conversion
  62              	@ -ftree-tail-merge -ftree-ter -ftree-vect-loop-version -ftree-vrp
  63              	@ -funit-at-a-time -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  64              	@ -fzero-initialized-in-bss -mlittle-endian -msched-prolog -mthumb
  65              	@ -munaligned-access -mvectorize-with-neon-quad
  66              	
  67              		.text
  68              	.Ltext0:
  69              		.cfi_sections	.debug_frame
  70              		.align	1
  71              		.global	DMA_DeInit
  72              		.thumb
  73              		.thumb_func
  74              		.type	DMA_DeInit, %function
  75              	DMA_DeInit:
  76              	.LFB110:
  77              		.file 1 ".\\stm32f4periph\\src\\stm32f4xx_dma.c"
   1:.\stm32f4periph\src/stm32f4xx_dma.c **** /**
   2:.\stm32f4periph\src/stm32f4xx_dma.c ****   ******************************************************************************
   3:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @file    stm32f4xx_dma.c
   4:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @author  MCD Application Team
   5:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @version V1.0.2
   6:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @date    05-March-2012
   7:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @brief   This file provides firmware functions to manage the following 
   8:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          functionalities of the Direct Memory Access controller (DMA):           
   9:.\stm32f4periph\src/stm32f4xx_dma.c ****   *           - Initialization and Configuration
  10:.\stm32f4periph\src/stm32f4xx_dma.c ****   *           - Data Counter
  11:.\stm32f4periph\src/stm32f4xx_dma.c ****   *           - Double Buffer mode configuration and command  
  12:.\stm32f4periph\src/stm32f4xx_dma.c ****   *           - Interrupts and flags management
  13:.\stm32f4periph\src/stm32f4xx_dma.c ****   *           
  14:.\stm32f4periph\src/stm32f4xx_dma.c ****   *  @verbatim
  15:.\stm32f4periph\src/stm32f4xx_dma.c ****   *      
  16:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          ===================================================================      
  17:.\stm32f4periph\src/stm32f4xx_dma.c ****   *                                 How to use this driver
  18:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          =================================================================== 
  19:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          1. Enable The DMA controller clock using RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_DMA1, E
  20:.\stm32f4periph\src/stm32f4xx_dma.c ****   *             function for DMA1 or using RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_DMA2, ENABLE)
  21:.\stm32f4periph\src/stm32f4xx_dma.c ****   *             function for DMA2.
  22:.\stm32f4periph\src/stm32f4xx_dma.c ****   *
  23:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          2. Enable and configure the peripheral to be connected to the DMA Stream
  24:.\stm32f4periph\src/stm32f4xx_dma.c ****   *             (except for internal SRAM / FLASH memories: no initialization is 
  25:.\stm32f4periph\src/stm32f4xx_dma.c ****   *             necessary). 
  26:.\stm32f4periph\src/stm32f4xx_dma.c ****   *        
  27:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          3. For a given Stream, program the required configuration through following parameters
  28:.\stm32f4periph\src/stm32f4xx_dma.c ****   *             Source and Destination addresses, Transfer Direction, Transfer size, Source and Des
  29:.\stm32f4periph\src/stm32f4xx_dma.c ****   *             data formats, Circular or Normal mode, Stream Priority level, Source and Destinatio
  30:.\stm32f4periph\src/stm32f4xx_dma.c ****   *             Incrementation mode, FIFO mode and its Threshold (if needed), Burst mode for Source
  31:.\stm32f4periph\src/stm32f4xx_dma.c ****   *             Destination (if needed) using the DMA_Init() function.
  32:.\stm32f4periph\src/stm32f4xx_dma.c ****   *             To avoid filling un-nesecessary fields, you can call DMA_StructInit() function
  33:.\stm32f4periph\src/stm32f4xx_dma.c ****   *             to initialize a given structure with default values (reset values), the modify
  34:.\stm32f4periph\src/stm32f4xx_dma.c ****   *             only necessary fields (ie. Source and Destination addresses, Transfer size and Data
  35:.\stm32f4periph\src/stm32f4xx_dma.c ****   *
  36:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          4. Enable the NVIC and the corresponding interrupt(s) using the function 
  37:.\stm32f4periph\src/stm32f4xx_dma.c ****   *             DMA_ITConfig() if you need to use DMA interrupts. 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 3


  38:.\stm32f4periph\src/stm32f4xx_dma.c ****   *
  39:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          5. Optionally, if the Circular mode is enabled, you can use the Double buffer mode by 
  40:.\stm32f4periph\src/stm32f4xx_dma.c ****   *             the second Memory address and the first Memory to be used through the function 
  41:.\stm32f4periph\src/stm32f4xx_dma.c ****   *             DMA_DoubleBufferModeConfig(). Then enable the Double buffer mode through the functi
  42:.\stm32f4periph\src/stm32f4xx_dma.c ****   *             DMA_DoubleBufferModeCmd(). These operations must be done before step 6.
  43:.\stm32f4periph\src/stm32f4xx_dma.c ****   *    
  44:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          6. Enable the DMA stream using the DMA_Cmd() function. 
  45:.\stm32f4periph\src/stm32f4xx_dma.c ****   *                
  46:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          7. Activate the needed Stream Request using PPP_DMACmd() function for
  47:.\stm32f4periph\src/stm32f4xx_dma.c ****   *             any PPP peripheral except internal SRAM and FLASH (ie. SPI, USART ...)
  48:.\stm32f4periph\src/stm32f4xx_dma.c ****   *             The function allowing this operation is provided in each PPP peripheral
  49:.\stm32f4periph\src/stm32f4xx_dma.c ****   *             driver (ie. SPI_DMACmd for SPI peripheral).
  50:.\stm32f4periph\src/stm32f4xx_dma.c ****   *             Once the Stream is enabled, it is not possible to modify its configuration
  51:.\stm32f4periph\src/stm32f4xx_dma.c ****   *             unless the stream is stopped and disabled.
  52:.\stm32f4periph\src/stm32f4xx_dma.c ****   *             After enabling the Stream, it is advised to monitor the EN bit status using
  53:.\stm32f4periph\src/stm32f4xx_dma.c ****   *             the function DMA_GetCmdStatus(). In case of configuration errors or bus errors
  54:.\stm32f4periph\src/stm32f4xx_dma.c ****   *             this bit will remain reset and all transfers on this Stream will remain on hold.   
  55:.\stm32f4periph\src/stm32f4xx_dma.c ****   *
  56:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          8. Optionally, you can configure the number of data to be transferred
  57:.\stm32f4periph\src/stm32f4xx_dma.c ****   *             when the Stream is disabled (ie. after each Transfer Complete event
  58:.\stm32f4periph\src/stm32f4xx_dma.c ****   *             or when a Transfer Error occurs) using the function DMA_SetCurrDataCounter().
  59:.\stm32f4periph\src/stm32f4xx_dma.c ****   *             And you can get the number of remaining data to be transferred using 
  60:.\stm32f4periph\src/stm32f4xx_dma.c ****   *             the function DMA_GetCurrDataCounter() at run time (when the DMA Stream is
  61:.\stm32f4periph\src/stm32f4xx_dma.c ****   *             enabled and running).  
  62:.\stm32f4periph\src/stm32f4xx_dma.c ****   *                   
  63:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          9. To control DMA events you can use one of the following 
  64:.\stm32f4periph\src/stm32f4xx_dma.c ****   *              two methods:
  65:.\stm32f4periph\src/stm32f4xx_dma.c ****   *               a- Check on DMA Stream flags using the function DMA_GetFlagStatus().  
  66:.\stm32f4periph\src/stm32f4xx_dma.c ****   *               b- Use DMA interrupts through the function DMA_ITConfig() at initialization
  67:.\stm32f4periph\src/stm32f4xx_dma.c ****   *                  phase and DMA_GetITStatus() function into interrupt routines in
  68:.\stm32f4periph\src/stm32f4xx_dma.c ****   *                  communication phase.  
  69:.\stm32f4periph\src/stm32f4xx_dma.c ****   *              After checking on a flag you should clear it using DMA_ClearFlag()
  70:.\stm32f4periph\src/stm32f4xx_dma.c ****   *              function. And after checking on an interrupt event you should 
  71:.\stm32f4periph\src/stm32f4xx_dma.c ****   *              clear it using DMA_ClearITPendingBit() function.    
  72:.\stm32f4periph\src/stm32f4xx_dma.c ****   *              
  73:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          10. Optionally, if Circular mode and Double Buffer mode are enabled, you can modify
  74:.\stm32f4periph\src/stm32f4xx_dma.c ****   *              the Memory Addresses using the function DMA_MemoryTargetConfig(). Make sure that
  75:.\stm32f4periph\src/stm32f4xx_dma.c ****   *              the Memory Address to be modified is not the one currently in use by DMA Stream.
  76:.\stm32f4periph\src/stm32f4xx_dma.c ****   *              This condition can be monitored using the function DMA_GetCurrentMemoryTarget().
  77:.\stm32f4periph\src/stm32f4xx_dma.c ****   *              
  78:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          11. Optionally, Pause-Resume operations may be performed:
  79:.\stm32f4periph\src/stm32f4xx_dma.c ****   *              The DMA_Cmd() function may be used to perform Pause-Resume operation. When a 
  80:.\stm32f4periph\src/stm32f4xx_dma.c ****   *              transfer is ongoing, calling this function to disable the Stream will cause the 
  81:.\stm32f4periph\src/stm32f4xx_dma.c ****   *              transfer to be paused. All configuration registers and the number of remaining 
  82:.\stm32f4periph\src/stm32f4xx_dma.c ****   *              data will be preserved. When calling again this function to re-enable the Stream, 
  83:.\stm32f4periph\src/stm32f4xx_dma.c ****   *              the transfer will be resumed from the point where it was paused.          
  84:.\stm32f4periph\src/stm32f4xx_dma.c ****   *                 
  85:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @note   Memory-to-Memory transfer is possible by setting the address of the memory into
  86:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         the Peripheral registers. In this mode, Circular mode and Double Buffer mode
  87:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         are not allowed.
  88:.\stm32f4periph\src/stm32f4xx_dma.c ****   *  
  89:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @note   The FIFO is used mainly to reduce bus usage and to allow data packing/unpacking: it is
  90:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         possible to set different Data Sizes for the Peripheral and the Memory (ie. you can set
  91:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         Half-Word data size for the peripheral to access its data register and set Word data si
  92:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         for the Memory to gain in access time. Each two Half-words will be packed and written i
  93:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         a single access to a Word in the Memory).
  94:.\stm32f4periph\src/stm32f4xx_dma.c ****   *    
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 4


  95:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @note  When FIFO is disabled, it is not allowed to configure different Data Sizes for Source
  96:.\stm32f4periph\src/stm32f4xx_dma.c ****   *        and Destination. In this case the Peripheral Data Size will be applied to both Source
  97:.\stm32f4periph\src/stm32f4xx_dma.c ****   *        and Destination.               
  98:.\stm32f4periph\src/stm32f4xx_dma.c ****   *
  99:.\stm32f4periph\src/stm32f4xx_dma.c ****   *  @endverbatim
 100:.\stm32f4periph\src/stm32f4xx_dma.c ****   *                                  
 101:.\stm32f4periph\src/stm32f4xx_dma.c ****   ******************************************************************************
 102:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @attention
 103:.\stm32f4periph\src/stm32f4xx_dma.c ****   *
 104:.\stm32f4periph\src/stm32f4xx_dma.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
 105:.\stm32f4periph\src/stm32f4xx_dma.c ****   *
 106:.\stm32f4periph\src/stm32f4xx_dma.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
 107:.\stm32f4periph\src/stm32f4xx_dma.c ****   * You may not use this file except in compliance with the License.
 108:.\stm32f4periph\src/stm32f4xx_dma.c ****   * You may obtain a copy of the License at:
 109:.\stm32f4periph\src/stm32f4xx_dma.c ****   *
 110:.\stm32f4periph\src/stm32f4xx_dma.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
 111:.\stm32f4periph\src/stm32f4xx_dma.c ****   *
 112:.\stm32f4periph\src/stm32f4xx_dma.c ****   * Unless required by applicable law or agreed to in writing, software 
 113:.\stm32f4periph\src/stm32f4xx_dma.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
 114:.\stm32f4periph\src/stm32f4xx_dma.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 115:.\stm32f4periph\src/stm32f4xx_dma.c ****   * See the License for the specific language governing permissions and
 116:.\stm32f4periph\src/stm32f4xx_dma.c ****   * limitations under the License.
 117:.\stm32f4periph\src/stm32f4xx_dma.c ****   *
 118:.\stm32f4periph\src/stm32f4xx_dma.c ****   ******************************************************************************
 119:.\stm32f4periph\src/stm32f4xx_dma.c ****   */ 
 120:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 121:.\stm32f4periph\src/stm32f4xx_dma.c **** /* Includes ------------------------------------------------------------------*/
 122:.\stm32f4periph\src/stm32f4xx_dma.c **** #include "stm32f4xx_dma.h"
 123:.\stm32f4periph\src/stm32f4xx_dma.c **** #include "stm32f4xx_rcc.h"
 124:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 125:.\stm32f4periph\src/stm32f4xx_dma.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 126:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @{
 127:.\stm32f4periph\src/stm32f4xx_dma.c ****   */
 128:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 129:.\stm32f4periph\src/stm32f4xx_dma.c **** /** @defgroup DMA 
 130:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @brief DMA driver modules
 131:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @{
 132:.\stm32f4periph\src/stm32f4xx_dma.c ****   */ 
 133:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 134:.\stm32f4periph\src/stm32f4xx_dma.c **** /* Private typedef -----------------------------------------------------------*/
 135:.\stm32f4periph\src/stm32f4xx_dma.c **** /* Private define ------------------------------------------------------------*/
 136:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 137:.\stm32f4periph\src/stm32f4xx_dma.c **** /* Masks Definition */
 138:.\stm32f4periph\src/stm32f4xx_dma.c **** #define TRANSFER_IT_ENABLE_MASK (uint32_t)(DMA_SxCR_TCIE | DMA_SxCR_HTIE | \
 139:.\stm32f4periph\src/stm32f4xx_dma.c ****                                            DMA_SxCR_TEIE | DMA_SxCR_DMEIE)
 140:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 141:.\stm32f4periph\src/stm32f4xx_dma.c **** #define DMA_Stream0_IT_MASK     (uint32_t)(DMA_LISR_FEIF0 | DMA_LISR_DMEIF0 | \
 142:.\stm32f4periph\src/stm32f4xx_dma.c ****                                            DMA_LISR_TEIF0 | DMA_LISR_HTIF0 | \
 143:.\stm32f4periph\src/stm32f4xx_dma.c ****                                            DMA_LISR_TCIF0)
 144:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 145:.\stm32f4periph\src/stm32f4xx_dma.c **** #define DMA_Stream1_IT_MASK     (uint32_t)(DMA_Stream0_IT_MASK << 6)
 146:.\stm32f4periph\src/stm32f4xx_dma.c **** #define DMA_Stream2_IT_MASK     (uint32_t)(DMA_Stream0_IT_MASK << 16)
 147:.\stm32f4periph\src/stm32f4xx_dma.c **** #define DMA_Stream3_IT_MASK     (uint32_t)(DMA_Stream0_IT_MASK << 22)
 148:.\stm32f4periph\src/stm32f4xx_dma.c **** #define DMA_Stream4_IT_MASK     (uint32_t)(DMA_Stream0_IT_MASK | (uint32_t)0x20000000)
 149:.\stm32f4periph\src/stm32f4xx_dma.c **** #define DMA_Stream5_IT_MASK     (uint32_t)(DMA_Stream1_IT_MASK | (uint32_t)0x20000000)
 150:.\stm32f4periph\src/stm32f4xx_dma.c **** #define DMA_Stream6_IT_MASK     (uint32_t)(DMA_Stream2_IT_MASK | (uint32_t)0x20000000)
 151:.\stm32f4periph\src/stm32f4xx_dma.c **** #define DMA_Stream7_IT_MASK     (uint32_t)(DMA_Stream3_IT_MASK | (uint32_t)0x20000000)
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 5


 152:.\stm32f4periph\src/stm32f4xx_dma.c **** #define TRANSFER_IT_MASK        (uint32_t)0x0F3C0F3C
 153:.\stm32f4periph\src/stm32f4xx_dma.c **** #define HIGH_ISR_MASK           (uint32_t)0x20000000
 154:.\stm32f4periph\src/stm32f4xx_dma.c **** #define RESERVED_MASK           (uint32_t)0x0F7D0F7D  
 155:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 156:.\stm32f4periph\src/stm32f4xx_dma.c **** /* Private macro -------------------------------------------------------------*/
 157:.\stm32f4periph\src/stm32f4xx_dma.c **** /* Private variables ---------------------------------------------------------*/
 158:.\stm32f4periph\src/stm32f4xx_dma.c **** /* Private function prototypes -----------------------------------------------*/
 159:.\stm32f4periph\src/stm32f4xx_dma.c **** /* Private functions ---------------------------------------------------------*/
 160:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 161:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 162:.\stm32f4periph\src/stm32f4xx_dma.c **** /** @defgroup DMA_Private_Functions
 163:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @{
 164:.\stm32f4periph\src/stm32f4xx_dma.c ****   */
 165:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 166:.\stm32f4periph\src/stm32f4xx_dma.c **** /** @defgroup DMA_Group1 Initialization and Configuration functions
 167:.\stm32f4periph\src/stm32f4xx_dma.c ****  *  @brief   Initialization and Configuration functions
 168:.\stm32f4periph\src/stm32f4xx_dma.c ****  *
 169:.\stm32f4periph\src/stm32f4xx_dma.c **** @verbatim   
 170:.\stm32f4periph\src/stm32f4xx_dma.c ****  ===============================================================================
 171:.\stm32f4periph\src/stm32f4xx_dma.c ****                  Initialization and Configuration functions
 172:.\stm32f4periph\src/stm32f4xx_dma.c ****  ===============================================================================  
 173:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 174:.\stm32f4periph\src/stm32f4xx_dma.c ****   This subsection provides functions allowing to initialize the DMA Stream source
 175:.\stm32f4periph\src/stm32f4xx_dma.c ****   and destination addresses, incrementation and data sizes, transfer direction, 
 176:.\stm32f4periph\src/stm32f4xx_dma.c ****   buffer size, circular/normal mode selection, memory-to-memory mode selection 
 177:.\stm32f4periph\src/stm32f4xx_dma.c ****   and Stream priority value.
 178:.\stm32f4periph\src/stm32f4xx_dma.c ****   
 179:.\stm32f4periph\src/stm32f4xx_dma.c ****   The DMA_Init() function follows the DMA configuration procedures as described in
 180:.\stm32f4periph\src/stm32f4xx_dma.c ****   reference manual (RM0090) except the first point: waiting on EN bit to be reset.
 181:.\stm32f4periph\src/stm32f4xx_dma.c ****   This condition should be checked by user application using the function DMA_GetCmdStatus()
 182:.\stm32f4periph\src/stm32f4xx_dma.c ****   before calling the DMA_Init() function.
 183:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 184:.\stm32f4periph\src/stm32f4xx_dma.c **** @endverbatim
 185:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @{
 186:.\stm32f4periph\src/stm32f4xx_dma.c ****   */
 187:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 188:.\stm32f4periph\src/stm32f4xx_dma.c **** /**
 189:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @brief  Deinitialize the DMAy Streamx registers to their default reset values.
 190:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 191:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         to 7 to select the DMA Stream.
 192:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @retval None
 193:.\stm32f4periph\src/stm32f4xx_dma.c ****   */
 194:.\stm32f4periph\src/stm32f4xx_dma.c **** void DMA_DeInit(DMA_Stream_TypeDef* DMAy_Streamx)
 195:.\stm32f4periph\src/stm32f4xx_dma.c **** {
  78              		.loc 1 195 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83              	.LVL0:
 196:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Check the parameters */
 197:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 198:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 199:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Disable the selected DMAy Streamx */
 200:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMAy_Streamx->CR &= ~((uint32_t)DMA_SxCR_EN);
  84              		.loc 1 200 0
  85 0000 0368     		ldr	r3, [r0, #0]	@ D.7540, DMAy_Streamx_1(D)->CR
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 6


  86 0002 23F00103 		bic	r3, r3, #1	@ D.7541, D.7540,
  87 0006 0360     		str	r3, [r0, #0]	@ D.7541, DMAy_Streamx_1(D)->CR
 201:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 202:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Reset DMAy Streamx control register */
 203:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMAy_Streamx->CR  = 0;
  88              		.loc 1 203 0
  89 0008 0023     		movs	r3, #0	@ tmp137,
  90 000a 0360     		str	r3, [r0, #0]	@ tmp137, DMAy_Streamx_1(D)->CR
 204:.\stm32f4periph\src/stm32f4xx_dma.c ****   
 205:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Reset DMAy Streamx Number of Data to Transfer register */
 206:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMAy_Streamx->NDTR = 0;
  91              		.loc 1 206 0
  92 000c 4360     		str	r3, [r0, #4]	@ tmp137, DMAy_Streamx_1(D)->NDTR
 207:.\stm32f4periph\src/stm32f4xx_dma.c ****   
 208:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Reset DMAy Streamx peripheral address register */
 209:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMAy_Streamx->PAR  = 0;
  93              		.loc 1 209 0
  94 000e 8360     		str	r3, [r0, #8]	@ tmp137, DMAy_Streamx_1(D)->PAR
 210:.\stm32f4periph\src/stm32f4xx_dma.c ****   
 211:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Reset DMAy Streamx memory 0 address register */
 212:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMAy_Streamx->M0AR = 0;
  95              		.loc 1 212 0
  96 0010 C360     		str	r3, [r0, #12]	@ tmp137, DMAy_Streamx_1(D)->M0AR
 213:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 214:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Reset DMAy Streamx memory 1 address register */
 215:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMAy_Streamx->M1AR = 0;
  97              		.loc 1 215 0
  98 0012 0361     		str	r3, [r0, #16]	@ tmp137, DMAy_Streamx_1(D)->M1AR
 216:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 217:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Reset DMAy Streamx FIFO control register */
 218:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMAy_Streamx->FCR = (uint32_t)0x00000021; 
  99              		.loc 1 218 0
 100 0014 2123     		movs	r3, #33	@ tmp142,
 101 0016 4361     		str	r3, [r0, #20]	@ tmp142, DMAy_Streamx_1(D)->FCR
 219:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 220:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Reset interrupt pending bits for the selected stream */
 221:.\stm32f4periph\src/stm32f4xx_dma.c ****   if (DMAy_Streamx == DMA1_Stream0)
 102              		.loc 1 221 0
 103 0018 2D4B     		ldr	r3, .L26	@ tmp143,
 104 001a 9842     		cmp	r0, r3	@ DMAy_Streamx, tmp143
 105 001c 00D1     		bne	.L2	@,
 106 001e 1EE0     		b	.L18	@
 107              	.L2:
 222:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 223:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA1 Stream0 */
 224:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMA1->LIFCR = DMA_Stream0_IT_MASK;
 225:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
 226:.\stm32f4periph\src/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA1_Stream1)
 108              		.loc 1 226 0
 109 0020 2C4B     		ldr	r3, .L26+4	@ tmp146,
 110 0022 9842     		cmp	r0, r3	@ DMAy_Streamx, tmp146
 111 0024 00D1     		bne	.L4	@,
 112 0026 21E0     		b	.L19	@
 113              	.L4:
 227:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 228:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA1 Stream1 */
 229:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMA1->LIFCR = DMA_Stream1_IT_MASK;
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 7


 230:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
 231:.\stm32f4periph\src/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA1_Stream2)
 114              		.loc 1 231 0
 115 0028 2B4B     		ldr	r3, .L26+8	@ tmp149,
 116 002a 9842     		cmp	r0, r3	@ DMAy_Streamx, tmp149
 117 002c 00D1     		bne	.L5	@,
 118 002e 25E0     		b	.L20	@
 119              	.L5:
 232:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 233:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA1 Stream2 */
 234:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMA1->LIFCR = DMA_Stream2_IT_MASK;
 235:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
 236:.\stm32f4periph\src/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA1_Stream3)
 120              		.loc 1 236 0
 121 0030 2A4B     		ldr	r3, .L26+12	@ tmp152,
 122 0032 9842     		cmp	r0, r3	@ DMAy_Streamx, tmp152
 123 0034 00D1     		bne	.L6	@,
 124 0036 29E0     		b	.L21	@
 125              	.L6:
 237:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 238:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA1 Stream3 */
 239:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMA1->LIFCR = DMA_Stream3_IT_MASK;
 240:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
 241:.\stm32f4periph\src/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA1_Stream4)
 126              		.loc 1 241 0
 127 0038 294B     		ldr	r3, .L26+16	@ tmp155,
 128 003a 9842     		cmp	r0, r3	@ DMAy_Streamx, tmp155
 129 003c 00D1     		bne	.L7	@,
 130 003e 2DE0     		b	.L22	@
 131              	.L7:
 242:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 243:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA1 Stream4 */
 244:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMA1->HIFCR = DMA_Stream4_IT_MASK;
 245:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
 246:.\stm32f4periph\src/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA1_Stream5)
 132              		.loc 1 246 0
 133 0040 284B     		ldr	r3, .L26+20	@ tmp158,
 134 0042 9842     		cmp	r0, r3	@ DMAy_Streamx, tmp158
 135 0044 00D1     		bne	.L8	@,
 136 0046 30E0     		b	.L23	@
 137              	.L8:
 247:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 248:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA1 Stream5 */
 249:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMA1->HIFCR = DMA_Stream5_IT_MASK;
 250:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
 251:.\stm32f4periph\src/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA1_Stream6)
 138              		.loc 1 251 0
 139 0048 274B     		ldr	r3, .L26+24	@ tmp161,
 140 004a 9842     		cmp	r0, r3	@ DMAy_Streamx, tmp161
 141 004c 00D1     		bne	.L9	@,
 142 004e 33E0     		b	.L24	@
 143              	.L9:
 252:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 253:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA1 Stream6 */
 254:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMA1->HIFCR = (uint32_t)DMA_Stream6_IT_MASK;
 255:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
 256:.\stm32f4periph\src/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA1_Stream7)
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 8


 144              		.loc 1 256 0
 145 0050 264B     		ldr	r3, .L26+28	@ tmp164,
 146 0052 9842     		cmp	r0, r3	@ DMAy_Streamx, tmp164
 147 0054 00D1     		bne	.L10	@,
 148 0056 36E0     		b	.L25	@
 149              	.L10:
 257:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 258:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA1 Stream7 */
 259:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMA1->HIFCR = DMA_Stream7_IT_MASK;
 260:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
 261:.\stm32f4periph\src/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA2_Stream0)
 150              		.loc 1 261 0
 151 0058 254B     		ldr	r3, .L26+32	@ tmp167,
 152 005a 9842     		cmp	r0, r3	@ DMAy_Streamx, tmp167
 153 005c 03D1     		bne	.L11	@,
 154              	.L18:
 262:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 263:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA2 Stream0 */
 264:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMA2->LIFCR = DMA_Stream0_IT_MASK;
 155              		.loc 1 264 0
 156 005e 3D22     		movs	r2, #61	@ tmp169,
 157 0060 43F8082C 		str	r2, [r3, #-8]	@ tmp169,
 158 0064 7047     		bx	lr	@
 159              	.L11:
 265:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
 266:.\stm32f4periph\src/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA2_Stream1)
 160              		.loc 1 266 0
 161 0066 234B     		ldr	r3, .L26+36	@ tmp170,
 162 0068 9842     		cmp	r0, r3	@ DMAy_Streamx, tmp170
 163 006a 04D1     		bne	.L12	@,
 164              	.L19:
 267:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 268:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA2 Stream1 */
 269:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMA2->LIFCR = DMA_Stream1_IT_MASK;
 165              		.loc 1 269 0
 166 006c 4FF47462 		mov	r2, #3904	@ tmp172,
 167 0070 43F8202C 		str	r2, [r3, #-32]	@ tmp172,
 168 0074 7047     		bx	lr	@
 169              	.L12:
 270:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
 271:.\stm32f4periph\src/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA2_Stream2)
 170              		.loc 1 271 0
 171 0076 204B     		ldr	r3, .L26+40	@ tmp173,
 172 0078 9842     		cmp	r0, r3	@ DMAy_Streamx, tmp173
 173 007a 04D1     		bne	.L13	@,
 174              	.L20:
 272:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 273:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA2 Stream2 */
 274:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMA2->LIFCR = DMA_Stream2_IT_MASK;
 175              		.loc 1 274 0
 176 007c 4FF47412 		mov	r2, #3997696	@ tmp175,
 177 0080 43F8382C 		str	r2, [r3, #-56]	@ tmp175,
 178 0084 7047     		bx	lr	@
 179              	.L13:
 275:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
 276:.\stm32f4periph\src/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA2_Stream3)
 180              		.loc 1 276 0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 9


 181 0086 1D4B     		ldr	r3, .L26+44	@ tmp176,
 182 0088 9842     		cmp	r0, r3	@ DMAy_Streamx, tmp176
 183 008a 04D1     		bne	.L14	@,
 184              	.L21:
 277:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 278:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA2 Stream3 */
 279:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMA2->LIFCR = DMA_Stream3_IT_MASK;
 185              		.loc 1 279 0
 186 008c 4FF07462 		mov	r2, #255852544	@ tmp178,
 187 0090 43F8502C 		str	r2, [r3, #-80]	@ tmp178,
 188 0094 7047     		bx	lr	@
 189              	.L14:
 280:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
 281:.\stm32f4periph\src/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA2_Stream4)
 190              		.loc 1 281 0
 191 0096 1A4B     		ldr	r3, .L26+48	@ tmp179,
 192 0098 9842     		cmp	r0, r3	@ DMAy_Streamx, tmp179
 193 009a 03D1     		bne	.L15	@,
 194              	.L22:
 282:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 283:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA2 Stream4 */
 284:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMA2->HIFCR = DMA_Stream4_IT_MASK;
 195              		.loc 1 284 0
 196 009c 194A     		ldr	r2, .L26+52	@ tmp181,
 197 009e 43F8642C 		str	r2, [r3, #-100]	@ tmp181,
 198 00a2 7047     		bx	lr	@
 199              	.L15:
 285:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
 286:.\stm32f4periph\src/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA2_Stream5)
 200              		.loc 1 286 0
 201 00a4 184B     		ldr	r3, .L26+56	@ tmp182,
 202 00a6 9842     		cmp	r0, r3	@ DMAy_Streamx, tmp182
 203 00a8 03D1     		bne	.L16	@,
 204              	.L23:
 287:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 288:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA2 Stream5 */
 289:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMA2->HIFCR = DMA_Stream5_IT_MASK;
 205              		.loc 1 289 0
 206 00aa 184A     		ldr	r2, .L26+60	@ tmp184,
 207 00ac 43F87C2C 		str	r2, [r3, #-124]	@ tmp184,
 208 00b0 7047     		bx	lr	@
 209              	.L16:
 290:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
 291:.\stm32f4periph\src/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA2_Stream6)
 210              		.loc 1 291 0
 211 00b2 174B     		ldr	r3, .L26+64	@ tmp185,
 212 00b4 9842     		cmp	r0, r3	@ DMAy_Streamx, tmp185
 213 00b6 03D1     		bne	.L17	@,
 214              	.L24:
 292:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 293:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA2 Stream6 */
 294:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMA2->HIFCR = DMA_Stream6_IT_MASK;
 215              		.loc 1 294 0
 216 00b8 164A     		ldr	r2, .L26+68	@ tmp187,
 217 00ba 43F8942C 		str	r2, [r3, #-148]	@ tmp187,
 218 00be 7047     		bx	lr	@
 219              	.L17:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 10


 295:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
 296:.\stm32f4periph\src/stm32f4xx_dma.c ****   else 
 297:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 298:.\stm32f4periph\src/stm32f4xx_dma.c ****     if (DMAy_Streamx == DMA2_Stream7)
 220              		.loc 1 298 0
 221 00c0 154B     		ldr	r3, .L26+72	@ tmp188,
 222 00c2 9842     		cmp	r0, r3	@ DMAy_Streamx, tmp188
 223 00c4 03D1     		bne	.L1	@,
 224              	.L25:
 299:.\stm32f4periph\src/stm32f4xx_dma.c ****     {
 300:.\stm32f4periph\src/stm32f4xx_dma.c ****       /* Reset interrupt pending bits for DMA2 Stream7 */
 301:.\stm32f4periph\src/stm32f4xx_dma.c ****       DMA2->HIFCR = DMA_Stream7_IT_MASK;
 225              		.loc 1 301 0
 226 00c6 4FF03D52 		mov	r2, #792723456	@ tmp190,
 227 00ca 43F8AC2C 		str	r2, [r3, #-172]	@ tmp190,
 228              	.L1:
 229 00ce 7047     		bx	lr	@
 230              	.L27:
 231              		.align	2
 232              	.L26:
 233 00d0 10600240 		.word	1073897488
 234 00d4 28600240 		.word	1073897512
 235 00d8 40600240 		.word	1073897536
 236 00dc 58600240 		.word	1073897560
 237 00e0 70600240 		.word	1073897584
 238 00e4 88600240 		.word	1073897608
 239 00e8 A0600240 		.word	1073897632
 240 00ec B8600240 		.word	1073897656
 241 00f0 10640240 		.word	1073898512
 242 00f4 28640240 		.word	1073898536
 243 00f8 40640240 		.word	1073898560
 244 00fc 58640240 		.word	1073898584
 245 0100 70640240 		.word	1073898608
 246 0104 3D000020 		.word	536870973
 247 0108 88640240 		.word	1073898632
 248 010c 400F0020 		.word	536874816
 249 0110 A0640240 		.word	1073898656
 250 0114 00003D20 		.word	540868608
 251 0118 B8640240 		.word	1073898680
 252              		.cfi_endproc
 253              	.LFE110:
 254              		.size	DMA_DeInit, .-DMA_DeInit
 255              		.align	1
 256              		.global	DMA_Init
 257              		.thumb
 258              		.thumb_func
 259              		.type	DMA_Init, %function
 260              	DMA_Init:
 261              	.LFB111:
 302:.\stm32f4periph\src/stm32f4xx_dma.c ****     }
 303:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
 304:.\stm32f4periph\src/stm32f4xx_dma.c **** }
 305:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 306:.\stm32f4periph\src/stm32f4xx_dma.c **** /**
 307:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @brief  Initializes the DMAy Streamx according to the specified parameters in 
 308:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         the DMA_InitStruct structure.
 309:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @note   Before calling this function, it is recommended to check that the Stream 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 11


 310:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         is actually disabled using the function DMA_GetCmdStatus().  
 311:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 312:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         to 7 to select the DMA Stream.
 313:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  DMA_InitStruct: pointer to a DMA_InitTypeDef structure that contains
 314:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         the configuration information for the specified DMA Stream.  
 315:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @retval None
 316:.\stm32f4periph\src/stm32f4xx_dma.c ****   */
 317:.\stm32f4periph\src/stm32f4xx_dma.c **** void DMA_Init(DMA_Stream_TypeDef* DMAy_Streamx, DMA_InitTypeDef* DMA_InitStruct)
 318:.\stm32f4periph\src/stm32f4xx_dma.c **** {
 262              		.loc 1 318 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              	.LVL1:
 319:.\stm32f4periph\src/stm32f4xx_dma.c ****   uint32_t tmpreg = 0;
 320:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 321:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Check the parameters */
 322:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 323:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_CHANNEL(DMA_InitStruct->DMA_Channel));
 324:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_DIRECTION(DMA_InitStruct->DMA_DIR));
 325:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DMA_InitStruct->DMA_BufferSize));
 326:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_PERIPHERAL_INC_STATE(DMA_InitStruct->DMA_PeripheralInc));
 327:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_MEMORY_INC_STATE(DMA_InitStruct->DMA_MemoryInc));
 328:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(DMA_InitStruct->DMA_PeripheralDataSize));
 329:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_MEMORY_DATA_SIZE(DMA_InitStruct->DMA_MemoryDataSize));
 330:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_MODE(DMA_InitStruct->DMA_Mode));
 331:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_PRIORITY(DMA_InitStruct->DMA_Priority));
 332:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_FIFO_MODE_STATE(DMA_InitStruct->DMA_FIFOMode));
 333:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_FIFO_THRESHOLD(DMA_InitStruct->DMA_FIFOThreshold));
 334:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_MEMORY_BURST(DMA_InitStruct->DMA_MemoryBurst));
 335:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_PERIPHERAL_BURST(DMA_InitStruct->DMA_PeripheralBurst));
 336:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 337:.\stm32f4periph\src/stm32f4xx_dma.c ****   /*------------------------- DMAy Streamx CR Configuration ------------------*/
 338:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Get the DMAy_Streamx CR value */
 339:.\stm32f4periph\src/stm32f4xx_dma.c ****   tmpreg = DMAy_Streamx->CR;
 267              		.loc 1 339 0
 268 011c 0268     		ldr	r2, [r0, #0]	@ tmpreg, DMAy_Streamx_2(D)->CR
 269              	.LVL2:
 340:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 341:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC and DIR bits */
 342:.\stm32f4periph\src/stm32f4xx_dma.c ****   tmpreg &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 270              		.loc 1 342 0
 271 011e 134B     		ldr	r3, .L29	@ tmpreg,
 318:.\stm32f4periph\src/stm32f4xx_dma.c **** {
 272              		.loc 1 318 0
 273 0120 10B5     		push	{r4, lr}	@
 274              	.LCFI0:
 275              		.cfi_def_cfa_offset 8
 276              		.cfi_offset 4, -8
 277              		.cfi_offset 14, -4
 278              		.loc 1 342 0
 279 0122 1340     		ands	r3, r3, r2	@, tmpreg, tmpreg, tmpreg
 280              	.LVL3:
 343:.\stm32f4periph\src/stm32f4xx_dma.c ****                          DMA_SxCR_PL | DMA_SxCR_MSIZE | DMA_SxCR_PSIZE | \
 344:.\stm32f4periph\src/stm32f4xx_dma.c ****                          DMA_SxCR_MINC | DMA_SxCR_PINC | DMA_SxCR_CIRC | \
 345:.\stm32f4periph\src/stm32f4xx_dma.c ****                          DMA_SxCR_DIR));
 346:.\stm32f4periph\src/stm32f4xx_dma.c **** 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 12


 347:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Configure DMAy Streamx: */
 348:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Set CHSEL bits according to DMA_CHSEL value */
 349:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Set DIR bits according to DMA_DIR value */
 350:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Set PINC bit according to DMA_PeripheralInc value */
 351:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Set MINC bit according to DMA_MemoryInc value */
 352:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Set PSIZE bits according to DMA_PeripheralDataSize value */
 353:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Set MSIZE bits according to DMA_MemoryDataSize value */
 354:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Set CIRC bit according to DMA_Mode value */
 355:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Set PL bits according to DMA_Priority value */
 356:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Set MBURST bits according to DMA_MemoryBurst value */
 357:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Set PBURST bits according to DMA_PeripheralBurst value */
 358:.\stm32f4periph\src/stm32f4xx_dma.c ****   tmpreg |= DMA_InitStruct->DMA_Channel | DMA_InitStruct->DMA_DIR |
 281              		.loc 1 358 0
 282 0124 CC68     		ldr	r4, [r1, #12]	@ DMA_InitStruct_5(D)->DMA_DIR, DMA_InitStruct_5(D)->DMA_DIR
 283 0126 0A68     		ldr	r2, [r1, #0]	@ DMA_InitStruct_5(D)->DMA_Channel, DMA_InitStruct_5(D)->DMA_Channel
 284 0128 1443     		orrs	r4, r4, r2	@, tmp168, DMA_InitStruct_5(D)->DMA_DIR, DMA_InitStruct_5(D)->DMA_Channel
 285 012a 4A69     		ldr	r2, [r1, #20]	@ DMA_InitStruct_5(D)->DMA_PeripheralInc, DMA_InitStruct_5(D)->DMA_PeripheralInc
 286 012c 1443     		orrs	r4, r4, r2	@, tmp171, tmp168, DMA_InitStruct_5(D)->DMA_PeripheralInc
 359:.\stm32f4periph\src/stm32f4xx_dma.c ****             DMA_InitStruct->DMA_PeripheralInc | DMA_InitStruct->DMA_MemoryInc |
 287              		.loc 1 359 0
 288 012e 8A69     		ldr	r2, [r1, #24]	@ DMA_InitStruct_5(D)->DMA_MemoryInc, DMA_InitStruct_5(D)->DMA_MemoryInc
 289 0130 1443     		orrs	r4, r4, r2	@, tmp173, tmp171, DMA_InitStruct_5(D)->DMA_MemoryInc
 290 0132 CA69     		ldr	r2, [r1, #28]	@ DMA_InitStruct_5(D)->DMA_PeripheralDataSize, DMA_InitStruct_5(D)->DMA_Peripher
 291 0134 1443     		orrs	r4, r4, r2	@, tmp175, tmp173, DMA_InitStruct_5(D)->DMA_PeripheralDataSize
 360:.\stm32f4periph\src/stm32f4xx_dma.c ****             DMA_InitStruct->DMA_PeripheralDataSize | DMA_InitStruct->DMA_MemoryDataSize |
 292              		.loc 1 360 0
 293 0136 0A6A     		ldr	r2, [r1, #32]	@ DMA_InitStruct_5(D)->DMA_MemoryDataSize, DMA_InitStruct_5(D)->DMA_MemoryDataSi
 294 0138 1443     		orrs	r4, r4, r2	@, tmp177, tmp175, DMA_InitStruct_5(D)->DMA_MemoryDataSize
 295 013a 4A6A     		ldr	r2, [r1, #36]	@ DMA_InitStruct_5(D)->DMA_Mode, DMA_InitStruct_5(D)->DMA_Mode
 296 013c 1443     		orrs	r4, r4, r2	@, tmp179, tmp177, DMA_InitStruct_5(D)->DMA_Mode
 361:.\stm32f4periph\src/stm32f4xx_dma.c ****             DMA_InitStruct->DMA_Mode | DMA_InitStruct->DMA_Priority |
 297              		.loc 1 361 0
 298 013e 8A6A     		ldr	r2, [r1, #40]	@ DMA_InitStruct_5(D)->DMA_Priority, DMA_InitStruct_5(D)->DMA_Priority
 299 0140 1443     		orrs	r4, r4, r2	@, tmp181, tmp179, DMA_InitStruct_5(D)->DMA_Priority
 300 0142 4A6B     		ldr	r2, [r1, #52]	@ DMA_InitStruct_5(D)->DMA_MemoryBurst, DMA_InitStruct_5(D)->DMA_MemoryBurst
 301 0144 1443     		orrs	r4, r4, r2	@, tmp183, tmp181, DMA_InitStruct_5(D)->DMA_MemoryBurst
 362:.\stm32f4periph\src/stm32f4xx_dma.c ****             DMA_InitStruct->DMA_MemoryBurst | DMA_InitStruct->DMA_PeripheralBurst;
 302              		.loc 1 362 0
 303 0146 8A6B     		ldr	r2, [r1, #56]	@ DMA_InitStruct_5(D)->DMA_PeripheralBurst, DMA_InitStruct_5(D)->DMA_PeripheralB
 304 0148 2243     		orrs	r2, r2, r4	@, tmp185, DMA_InitStruct_5(D)->DMA_PeripheralBurst, tmp183
 358:.\stm32f4periph\src/stm32f4xx_dma.c ****   tmpreg |= DMA_InitStruct->DMA_Channel | DMA_InitStruct->DMA_DIR |
 305              		.loc 1 358 0
 306 014a 1343     		orrs	r3, r3, r2	@, tmpreg, tmpreg, tmp185
 307              	.LVL4:
 363:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 364:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Write to DMAy Streamx CR register */
 365:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMAy_Streamx->CR = tmpreg;
 308              		.loc 1 365 0
 309 014c 0360     		str	r3, [r0, #0]	@ tmpreg, DMAy_Streamx_2(D)->CR
 366:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 367:.\stm32f4periph\src/stm32f4xx_dma.c ****   /*------------------------- DMAy Streamx FCR Configuration -----------------*/
 368:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Get the DMAy_Streamx FCR value */
 369:.\stm32f4periph\src/stm32f4xx_dma.c ****   tmpreg = DMAy_Streamx->FCR;
 310              		.loc 1 369 0
 311 014e 4469     		ldr	r4, [r0, #20]	@ tmpreg, DMAy_Streamx_2(D)->FCR
 312              	.LVL5:
 370:.\stm32f4periph\src/stm32f4xx_dma.c **** 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 13


 371:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Clear DMDIS and FTH bits */
 372:.\stm32f4periph\src/stm32f4xx_dma.c ****   tmpreg &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 373:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 374:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Configure DMAy Streamx FIFO: 
 375:.\stm32f4periph\src/stm32f4xx_dma.c ****     Set DMDIS bits according to DMA_FIFOMode value 
 376:.\stm32f4periph\src/stm32f4xx_dma.c ****     Set FTH bits according to DMA_FIFOThreshold value */
 377:.\stm32f4periph\src/stm32f4xx_dma.c ****   tmpreg |= DMA_InitStruct->DMA_FIFOMode | DMA_InitStruct->DMA_FIFOThreshold;
 313              		.loc 1 377 0
 314 0150 0A6B     		ldr	r2, [r1, #48]	@ DMA_InitStruct_5(D)->DMA_FIFOThreshold, DMA_InitStruct_5(D)->DMA_FIFOThreshold
 315 0152 CB6A     		ldr	r3, [r1, #44]	@ DMA_InitStruct_5(D)->DMA_FIFOMode, DMA_InitStruct_5(D)->DMA_FIFOMode
 372:.\stm32f4periph\src/stm32f4xx_dma.c ****   tmpreg &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 316              		.loc 1 372 0
 317 0154 24F00704 		bic	r4, r4, #7	@ tmpreg, tmpreg,
 318              	.LVL6:
 319              		.loc 1 377 0
 320 0158 1343     		orrs	r3, r3, r2	@, tmp187, DMA_InitStruct_5(D)->DMA_FIFOMode, DMA_InitStruct_5(D)->DMA_FIFOThresho
 321 015a 2343     		orrs	r3, r3, r4	@, tmpreg, tmp187, tmpreg
 322              	.LVL7:
 378:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 379:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Write to DMAy Streamx CR */
 380:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMAy_Streamx->FCR = tmpreg;
 323              		.loc 1 380 0
 324 015c 4361     		str	r3, [r0, #20]	@ tmpreg, DMAy_Streamx_2(D)->FCR
 381:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 382:.\stm32f4periph\src/stm32f4xx_dma.c ****   /*------------------------- DMAy Streamx NDTR Configuration ----------------*/
 383:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Write to DMAy Streamx NDTR register */
 384:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMAy_Streamx->NDTR = DMA_InitStruct->DMA_BufferSize;
 325              		.loc 1 384 0
 326 015e 0B69     		ldr	r3, [r1, #16]	@ D.7537, DMA_InitStruct_5(D)->DMA_BufferSize
 327              	.LVL8:
 328 0160 4360     		str	r3, [r0, #4]	@ D.7537, DMAy_Streamx_2(D)->NDTR
 385:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 386:.\stm32f4periph\src/stm32f4xx_dma.c ****   /*------------------------- DMAy Streamx PAR Configuration -----------------*/
 387:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Write to DMAy Streamx PAR */
 388:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMAy_Streamx->PAR = DMA_InitStruct->DMA_PeripheralBaseAddr;
 329              		.loc 1 388 0
 330 0162 4B68     		ldr	r3, [r1, #4]	@ D.7538, DMA_InitStruct_5(D)->DMA_PeripheralBaseAddr
 331 0164 8360     		str	r3, [r0, #8]	@ D.7538, DMAy_Streamx_2(D)->PAR
 389:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 390:.\stm32f4periph\src/stm32f4xx_dma.c ****   /*------------------------- DMAy Streamx M0AR Configuration ----------------*/
 391:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Write to DMAy Streamx M0AR */
 392:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMAy_Streamx->M0AR = DMA_InitStruct->DMA_Memory0BaseAddr;
 332              		.loc 1 392 0
 333 0166 8B68     		ldr	r3, [r1, #8]	@ D.7539, DMA_InitStruct_5(D)->DMA_Memory0BaseAddr
 334 0168 C360     		str	r3, [r0, #12]	@ D.7539, DMAy_Streamx_2(D)->M0AR
 335 016a 10BD     		pop	{r4, pc}	@
 336              	.L30:
 337              		.align	2
 338              	.L29:
 339 016c 3F801CF0 		.word	-266567617
 340              		.cfi_endproc
 341              	.LFE111:
 342              		.size	DMA_Init, .-DMA_Init
 343              		.align	1
 344              		.global	DMA_StructInit
 345              		.thumb
 346              		.thumb_func
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 14


 347              		.type	DMA_StructInit, %function
 348              	DMA_StructInit:
 349              	.LFB112:
 393:.\stm32f4periph\src/stm32f4xx_dma.c **** }
 394:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 395:.\stm32f4periph\src/stm32f4xx_dma.c **** /**
 396:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @brief  Fills each DMA_InitStruct member with its default value.
 397:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  DMA_InitStruct : pointer to a DMA_InitTypeDef structure which will 
 398:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         be initialized.
 399:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @retval None
 400:.\stm32f4periph\src/stm32f4xx_dma.c ****   */
 401:.\stm32f4periph\src/stm32f4xx_dma.c **** void DMA_StructInit(DMA_InitTypeDef* DMA_InitStruct)
 402:.\stm32f4periph\src/stm32f4xx_dma.c **** {
 350              		.loc 1 402 0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354              		@ link register save eliminated.
 355              	.LVL9:
 403:.\stm32f4periph\src/stm32f4xx_dma.c ****   /*-------------- Reset DMA init structure parameters values ----------------*/
 404:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Initialize the DMA_Channel member */
 405:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_Channel = 0;
 356              		.loc 1 405 0
 357 0170 0023     		movs	r3, #0	@ tmp135,
 358 0172 0360     		str	r3, [r0, #0]	@ tmp135, DMA_InitStruct_1(D)->DMA_Channel
 406:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 407:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Initialize the DMA_PeripheralBaseAddr member */
 408:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_PeripheralBaseAddr = 0;
 359              		.loc 1 408 0
 360 0174 4360     		str	r3, [r0, #4]	@ tmp135, DMA_InitStruct_1(D)->DMA_PeripheralBaseAddr
 409:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 410:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Initialize the DMA_Memory0BaseAddr member */
 411:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_Memory0BaseAddr = 0;
 361              		.loc 1 411 0
 362 0176 8360     		str	r3, [r0, #8]	@ tmp135, DMA_InitStruct_1(D)->DMA_Memory0BaseAddr
 412:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 413:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Initialize the DMA_DIR member */
 414:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_DIR = DMA_DIR_PeripheralToMemory;
 363              		.loc 1 414 0
 364 0178 C360     		str	r3, [r0, #12]	@ tmp135, DMA_InitStruct_1(D)->DMA_DIR
 415:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 416:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Initialize the DMA_BufferSize member */
 417:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_BufferSize = 0;
 365              		.loc 1 417 0
 366 017a 0361     		str	r3, [r0, #16]	@ tmp135, DMA_InitStruct_1(D)->DMA_BufferSize
 418:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 419:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Initialize the DMA_PeripheralInc member */
 420:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_PeripheralInc = DMA_PeripheralInc_Disable;
 367              		.loc 1 420 0
 368 017c 4361     		str	r3, [r0, #20]	@ tmp135, DMA_InitStruct_1(D)->DMA_PeripheralInc
 421:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 422:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Initialize the DMA_MemoryInc member */
 423:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_MemoryInc = DMA_MemoryInc_Disable;
 369              		.loc 1 423 0
 370 017e 8361     		str	r3, [r0, #24]	@ tmp135, DMA_InitStruct_1(D)->DMA_MemoryInc
 424:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 425:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Initialize the DMA_PeripheralDataSize member */
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 15


 426:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_PeripheralDataSize = DMA_PeripheralDataSize_Byte;
 371              		.loc 1 426 0
 372 0180 C361     		str	r3, [r0, #28]	@ tmp135, DMA_InitStruct_1(D)->DMA_PeripheralDataSize
 427:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 428:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Initialize the DMA_MemoryDataSize member */
 429:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_MemoryDataSize = DMA_MemoryDataSize_Byte;
 373              		.loc 1 429 0
 374 0182 0362     		str	r3, [r0, #32]	@ tmp135, DMA_InitStruct_1(D)->DMA_MemoryDataSize
 430:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 431:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Initialize the DMA_Mode member */
 432:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_Mode = DMA_Mode_Normal;
 375              		.loc 1 432 0
 376 0184 4362     		str	r3, [r0, #36]	@ tmp135, DMA_InitStruct_1(D)->DMA_Mode
 433:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 434:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Initialize the DMA_Priority member */
 435:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_Priority = DMA_Priority_Low;
 377              		.loc 1 435 0
 378 0186 8362     		str	r3, [r0, #40]	@ tmp135, DMA_InitStruct_1(D)->DMA_Priority
 436:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 437:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Initialize the DMA_FIFOMode member */
 438:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_FIFOMode = DMA_FIFOMode_Disable;
 379              		.loc 1 438 0
 380 0188 C362     		str	r3, [r0, #44]	@ tmp135, DMA_InitStruct_1(D)->DMA_FIFOMode
 439:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 440:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Initialize the DMA_FIFOThreshold member */
 441:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_FIFOThreshold = DMA_FIFOThreshold_1QuarterFull;
 381              		.loc 1 441 0
 382 018a 0363     		str	r3, [r0, #48]	@ tmp135, DMA_InitStruct_1(D)->DMA_FIFOThreshold
 442:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 443:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Initialize the DMA_MemoryBurst member */
 444:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_MemoryBurst = DMA_MemoryBurst_Single;
 383              		.loc 1 444 0
 384 018c 4363     		str	r3, [r0, #52]	@ tmp135, DMA_InitStruct_1(D)->DMA_MemoryBurst
 445:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 446:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Initialize the DMA_PeripheralBurst member */
 447:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_PeripheralBurst = DMA_PeripheralBurst_Single;
 385              		.loc 1 447 0
 386 018e 8363     		str	r3, [r0, #56]	@ tmp135, DMA_InitStruct_1(D)->DMA_PeripheralBurst
 387 0190 7047     		bx	lr	@
 388              		.cfi_endproc
 389              	.LFE112:
 390              		.size	DMA_StructInit, .-DMA_StructInit
 391              		.align	1
 392              		.global	DMA_Cmd
 393              		.thumb
 394              		.thumb_func
 395              		.type	DMA_Cmd, %function
 396              	DMA_Cmd:
 397              	.LFB113:
 448:.\stm32f4periph\src/stm32f4xx_dma.c **** }
 449:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 450:.\stm32f4periph\src/stm32f4xx_dma.c **** /**
 451:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @brief  Enables or disables the specified DMAy Streamx.
 452:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 453:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         to 7 to select the DMA Stream.
 454:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  NewState: new state of the DMAy Streamx. 
 455:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          This parameter can be: ENABLE or DISABLE.
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 16


 456:.\stm32f4periph\src/stm32f4xx_dma.c ****   *
 457:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @note  This function may be used to perform Pause-Resume operation. When a
 458:.\stm32f4periph\src/stm32f4xx_dma.c ****   *        transfer is ongoing, calling this function to disable the Stream will
 459:.\stm32f4periph\src/stm32f4xx_dma.c ****   *        cause the transfer to be paused. All configuration registers and the
 460:.\stm32f4periph\src/stm32f4xx_dma.c ****   *        number of remaining data will be preserved. When calling again this
 461:.\stm32f4periph\src/stm32f4xx_dma.c ****   *        function to re-enable the Stream, the transfer will be resumed from
 462:.\stm32f4periph\src/stm32f4xx_dma.c ****   *        the point where it was paused.          
 463:.\stm32f4periph\src/stm32f4xx_dma.c ****   *    
 464:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @note  After configuring the DMA Stream (DMA_Init() function) and enabling the
 465:.\stm32f4periph\src/stm32f4xx_dma.c ****   *        stream, it is recommended to check (or wait until) the DMA Stream is
 466:.\stm32f4periph\src/stm32f4xx_dma.c ****   *        effectively enabled. A Stream may remain disabled if a configuration 
 467:.\stm32f4periph\src/stm32f4xx_dma.c ****   *        parameter is wrong.
 468:.\stm32f4periph\src/stm32f4xx_dma.c ****   *        After disabling a DMA Stream, it is also recommended to check (or wait
 469:.\stm32f4periph\src/stm32f4xx_dma.c ****   *        until) the DMA Stream is effectively disabled. If a Stream is disabled 
 470:.\stm32f4periph\src/stm32f4xx_dma.c ****   *        while a data transfer is ongoing, the current data will be transferred
 471:.\stm32f4periph\src/stm32f4xx_dma.c ****   *        and the Stream will be effectively disabled only after the transfer of
 472:.\stm32f4periph\src/stm32f4xx_dma.c ****   *        this single data is finished.            
 473:.\stm32f4periph\src/stm32f4xx_dma.c ****   *    
 474:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @retval None
 475:.\stm32f4periph\src/stm32f4xx_dma.c ****   */
 476:.\stm32f4periph\src/stm32f4xx_dma.c **** void DMA_Cmd(DMA_Stream_TypeDef* DMAy_Streamx, FunctionalState NewState)
 477:.\stm32f4periph\src/stm32f4xx_dma.c **** {
 398              		.loc 1 477 0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 0
 401              		@ frame_needed = 0, uses_anonymous_args = 0
 402              		@ link register save eliminated.
 403              	.LVL10:
 478:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Check the parameters */
 479:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 480:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 481:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 482:.\stm32f4periph\src/stm32f4xx_dma.c ****   if (NewState != DISABLE)
 483:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 484:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Enable the selected DMAy Streamx by setting EN bit */
 485:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMAy_Streamx->CR |= (uint32_t)DMA_SxCR_EN;
 404              		.loc 1 485 0
 405 0192 0368     		ldr	r3, [r0, #0]	@ D.7510,* DMAy_Streamx
 482:.\stm32f4periph\src/stm32f4xx_dma.c ****   if (NewState != DISABLE)
 406              		.loc 1 482 0
 407 0194 11B1     		cbz	r1, .L33	@ NewState,
 408              		.loc 1 485 0
 409 0196 43F00103 		orr	r3, r3, #1	@ D.7511, D.7510,
 410 019a 01E0     		b	.L35	@
 411              	.L33:
 486:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
 487:.\stm32f4periph\src/stm32f4xx_dma.c ****   else
 488:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 489:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Disable the selected DMAy Streamx by clearing EN bit */
 490:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMAy_Streamx->CR &= ~(uint32_t)DMA_SxCR_EN;
 412              		.loc 1 490 0
 413 019c 23F00103 		bic	r3, r3, #1	@ D.7514, D.7513,
 414              	.L35:
 415 01a0 0360     		str	r3, [r0, #0]	@ D.7514,* DMAy_Streamx
 416 01a2 7047     		bx	lr	@
 417              		.cfi_endproc
 418              	.LFE113:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 17


 419              		.size	DMA_Cmd, .-DMA_Cmd
 420              		.align	1
 421              		.global	DMA_PeriphIncOffsetSizeConfig
 422              		.thumb
 423              		.thumb_func
 424              		.type	DMA_PeriphIncOffsetSizeConfig, %function
 425              	DMA_PeriphIncOffsetSizeConfig:
 426              	.LFB114:
 491:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
 492:.\stm32f4periph\src/stm32f4xx_dma.c **** }
 493:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 494:.\stm32f4periph\src/stm32f4xx_dma.c **** /**
 495:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @brief  Configures, when the PINC (Peripheral Increment address mode) bit is
 496:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         set, if the peripheral address should be incremented with the data 
 497:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         size (configured with PSIZE bits) or by a fixed offset equal to 4
 498:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         (32-bit aligned addresses).
 499:.\stm32f4periph\src/stm32f4xx_dma.c ****   *   
 500:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @note   This function has no effect if the Peripheral Increment mode is disabled.
 501:.\stm32f4periph\src/stm32f4xx_dma.c ****   *     
 502:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 503:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
 504:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  DMA_Pincos: specifies the Peripheral increment offset size.
 505:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          This parameter can be one of the following values:
 506:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_PINCOS_Psize: Peripheral address increment is done  
 507:.\stm32f4periph\src/stm32f4xx_dma.c ****   *                                   accordingly to PSIZE parameter.
 508:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_PINCOS_WordAligned: Peripheral address increment offset is 
 509:.\stm32f4periph\src/stm32f4xx_dma.c ****   *                                         fixed to 4 (32-bit aligned addresses). 
 510:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @retval None
 511:.\stm32f4periph\src/stm32f4xx_dma.c ****   */
 512:.\stm32f4periph\src/stm32f4xx_dma.c **** void DMA_PeriphIncOffsetSizeConfig(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_Pincos)
 513:.\stm32f4periph\src/stm32f4xx_dma.c **** {
 427              		.loc 1 513 0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 0
 430              		@ frame_needed = 0, uses_anonymous_args = 0
 431              		@ link register save eliminated.
 432              	.LVL11:
 514:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Check the parameters */
 515:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 516:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_PINCOS_SIZE(DMA_Pincos));
 517:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 518:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Check the needed Peripheral increment offset */
 519:.\stm32f4periph\src/stm32f4xx_dma.c ****   if(DMA_Pincos != DMA_PINCOS_Psize)
 520:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 521:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Configure DMA_SxCR_PINCOS bit with the input parameter */
 522:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMAy_Streamx->CR |= (uint32_t)DMA_SxCR_PINCOS;     
 433              		.loc 1 522 0
 434 01a4 0368     		ldr	r3, [r0, #0]	@ D.7503,* DMAy_Streamx
 519:.\stm32f4periph\src/stm32f4xx_dma.c ****   if(DMA_Pincos != DMA_PINCOS_Psize)
 435              		.loc 1 519 0
 436 01a6 11B1     		cbz	r1, .L37	@ DMA_Pincos,
 437              		.loc 1 522 0
 438 01a8 43F40043 		orr	r3, r3, #32768	@ D.7504, D.7503,
 439 01ac 01E0     		b	.L39	@
 440              	.L37:
 523:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
 524:.\stm32f4periph\src/stm32f4xx_dma.c ****   else
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 18


 525:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 526:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Clear the PINCOS bit: Peripheral address incremented according to PSIZE */
 527:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMAy_Streamx->CR &= ~(uint32_t)DMA_SxCR_PINCOS;    
 441              		.loc 1 527 0
 442 01ae 23F40043 		bic	r3, r3, #32768	@ D.7507, D.7506,
 443              	.L39:
 444 01b2 0360     		str	r3, [r0, #0]	@ D.7507,* DMAy_Streamx
 445 01b4 7047     		bx	lr	@
 446              		.cfi_endproc
 447              	.LFE114:
 448              		.size	DMA_PeriphIncOffsetSizeConfig, .-DMA_PeriphIncOffsetSizeConfig
 449              		.align	1
 450              		.global	DMA_FlowControllerConfig
 451              		.thumb
 452              		.thumb_func
 453              		.type	DMA_FlowControllerConfig, %function
 454              	DMA_FlowControllerConfig:
 455              	.LFB115:
 528:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
 529:.\stm32f4periph\src/stm32f4xx_dma.c **** }
 530:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 531:.\stm32f4periph\src/stm32f4xx_dma.c **** /**
 532:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @brief  Configures, when the DMAy Streamx is disabled, the flow controller for
 533:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         the next transactions (Peripheral or Memory).
 534:.\stm32f4periph\src/stm32f4xx_dma.c ****   *       
 535:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @note   Before enabling this feature, check if the used peripheral supports 
 536:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         the Flow Controller mode or not.    
 537:.\stm32f4periph\src/stm32f4xx_dma.c ****   *  
 538:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 539:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
 540:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  DMA_FlowCtrl: specifies the DMA flow controller.
 541:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          This parameter can be one of the following values:
 542:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_FlowCtrl_Memory: DMAy_Streamx transactions flow controller is 
 543:.\stm32f4periph\src/stm32f4xx_dma.c ****   *                                      the DMA controller.
 544:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_FlowCtrl_Peripheral: DMAy_Streamx transactions flow controller 
 545:.\stm32f4periph\src/stm32f4xx_dma.c ****   *                                          is the peripheral.    
 546:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @retval None
 547:.\stm32f4periph\src/stm32f4xx_dma.c ****   */
 548:.\stm32f4periph\src/stm32f4xx_dma.c **** void DMA_FlowControllerConfig(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_FlowCtrl)
 549:.\stm32f4periph\src/stm32f4xx_dma.c **** {
 456              		.loc 1 549 0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460              		@ link register save eliminated.
 461              	.LVL12:
 550:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Check the parameters */
 551:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 552:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_FLOW_CTRL(DMA_FlowCtrl));
 553:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 554:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Check the needed flow controller  */
 555:.\stm32f4periph\src/stm32f4xx_dma.c ****   if(DMA_FlowCtrl != DMA_FlowCtrl_Memory)
 556:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 557:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Configure DMA_SxCR_PFCTRL bit with the input parameter */
 558:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMAy_Streamx->CR |= (uint32_t)DMA_SxCR_PFCTRL;   
 462              		.loc 1 558 0
 463 01b6 0368     		ldr	r3, [r0, #0]	@ D.7496,* DMAy_Streamx
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 19


 555:.\stm32f4periph\src/stm32f4xx_dma.c ****   if(DMA_FlowCtrl != DMA_FlowCtrl_Memory)
 464              		.loc 1 555 0
 465 01b8 11B1     		cbz	r1, .L41	@ DMA_FlowCtrl,
 466              		.loc 1 558 0
 467 01ba 43F02003 		orr	r3, r3, #32	@ D.7497, D.7496,
 468 01be 01E0     		b	.L43	@
 469              	.L41:
 559:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
 560:.\stm32f4periph\src/stm32f4xx_dma.c ****   else
 561:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 562:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Clear the PFCTRL bit: Memory is the flow controller */
 563:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMAy_Streamx->CR &= ~(uint32_t)DMA_SxCR_PFCTRL;    
 470              		.loc 1 563 0
 471 01c0 23F02003 		bic	r3, r3, #32	@ D.7500, D.7499,
 472              	.L43:
 473 01c4 0360     		str	r3, [r0, #0]	@ D.7500,* DMAy_Streamx
 474 01c6 7047     		bx	lr	@
 475              		.cfi_endproc
 476              	.LFE115:
 477              		.size	DMA_FlowControllerConfig, .-DMA_FlowControllerConfig
 478              		.align	1
 479              		.global	DMA_SetCurrDataCounter
 480              		.thumb
 481              		.thumb_func
 482              		.type	DMA_SetCurrDataCounter, %function
 483              	DMA_SetCurrDataCounter:
 484              	.LFB116:
 564:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
 565:.\stm32f4periph\src/stm32f4xx_dma.c **** }
 566:.\stm32f4periph\src/stm32f4xx_dma.c **** /**
 567:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @}
 568:.\stm32f4periph\src/stm32f4xx_dma.c ****   */
 569:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 570:.\stm32f4periph\src/stm32f4xx_dma.c **** /** @defgroup DMA_Group2 Data Counter functions
 571:.\stm32f4periph\src/stm32f4xx_dma.c ****  *  @brief   Data Counter functions 
 572:.\stm32f4periph\src/stm32f4xx_dma.c ****  *
 573:.\stm32f4periph\src/stm32f4xx_dma.c **** @verbatim   
 574:.\stm32f4periph\src/stm32f4xx_dma.c ****  ===============================================================================
 575:.\stm32f4periph\src/stm32f4xx_dma.c ****                            Data Counter functions
 576:.\stm32f4periph\src/stm32f4xx_dma.c ****  ===============================================================================  
 577:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 578:.\stm32f4periph\src/stm32f4xx_dma.c ****   This subsection provides function allowing to configure and read the buffer size
 579:.\stm32f4periph\src/stm32f4xx_dma.c ****   (number of data to be transferred). 
 580:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 581:.\stm32f4periph\src/stm32f4xx_dma.c ****   The DMA data counter can be written only when the DMA Stream is disabled 
 582:.\stm32f4periph\src/stm32f4xx_dma.c ****   (ie. after transfer complete event).
 583:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 584:.\stm32f4periph\src/stm32f4xx_dma.c ****   The following function can be used to write the Stream data counter value:
 585:.\stm32f4periph\src/stm32f4xx_dma.c ****     - void DMA_SetCurrDataCounter(DMA_Stream_TypeDef* DMAy_Streamx, uint16_t Counter);
 586:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 587:.\stm32f4periph\src/stm32f4xx_dma.c **** @note It is advised to use this function rather than DMA_Init() in situations where
 588:.\stm32f4periph\src/stm32f4xx_dma.c ****       only the Data buffer needs to be reloaded.
 589:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 590:.\stm32f4periph\src/stm32f4xx_dma.c **** @note If the Source and Destination Data Sizes are different, then the value written in
 591:.\stm32f4periph\src/stm32f4xx_dma.c ****       data counter, expressing the number of transfers, is relative to the number of 
 592:.\stm32f4periph\src/stm32f4xx_dma.c ****       transfers from the Peripheral point of view.
 593:.\stm32f4periph\src/stm32f4xx_dma.c ****       ie. If Memory data size is Word, Peripheral data size is Half-Words, then the value
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 20


 594:.\stm32f4periph\src/stm32f4xx_dma.c ****       to be configured in the data counter is the number of Half-Words to be transferred
 595:.\stm32f4periph\src/stm32f4xx_dma.c ****       from/to the peripheral.
 596:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 597:.\stm32f4periph\src/stm32f4xx_dma.c ****   The DMA data counter can be read to indicate the number of remaining transfers for
 598:.\stm32f4periph\src/stm32f4xx_dma.c ****   the relative DMA Stream. This counter is decremented at the end of each data 
 599:.\stm32f4periph\src/stm32f4xx_dma.c ****   transfer and when the transfer is complete: 
 600:.\stm32f4periph\src/stm32f4xx_dma.c ****    - If Normal mode is selected: the counter is set to 0.
 601:.\stm32f4periph\src/stm32f4xx_dma.c ****    - If Circular mode is selected: the counter is reloaded with the initial value
 602:.\stm32f4periph\src/stm32f4xx_dma.c ****      (configured before enabling the DMA Stream)
 603:.\stm32f4periph\src/stm32f4xx_dma.c ****    
 604:.\stm32f4periph\src/stm32f4xx_dma.c ****   The following function can be used to read the Stream data counter value:
 605:.\stm32f4periph\src/stm32f4xx_dma.c ****      - uint16_t DMA_GetCurrDataCounter(DMA_Stream_TypeDef* DMAy_Streamx);
 606:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 607:.\stm32f4periph\src/stm32f4xx_dma.c **** @endverbatim
 608:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @{
 609:.\stm32f4periph\src/stm32f4xx_dma.c ****   */
 610:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 611:.\stm32f4periph\src/stm32f4xx_dma.c **** /**
 612:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @brief  Writes the number of data units to be transferred on the DMAy Streamx.
 613:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 614:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
 615:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  Counter: Number of data units to be transferred (from 0 to 65535) 
 616:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          Number of data items depends only on the Peripheral data format.
 617:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            
 618:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @note   If Peripheral data format is Bytes: number of data units is equal 
 619:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         to total number of bytes to be transferred.
 620:.\stm32f4periph\src/stm32f4xx_dma.c ****   *           
 621:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @note   If Peripheral data format is Half-Word: number of data units is  
 622:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         equal to total number of bytes to be transferred / 2.
 623:.\stm32f4periph\src/stm32f4xx_dma.c ****   *           
 624:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @note   If Peripheral data format is Word: number of data units is equal 
 625:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         to total  number of bytes to be transferred / 4.
 626:.\stm32f4periph\src/stm32f4xx_dma.c ****   *      
 627:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @note   In Memory-to-Memory transfer mode, the memory buffer pointed by 
 628:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         DMAy_SxPAR register is considered as Peripheral.
 629:.\stm32f4periph\src/stm32f4xx_dma.c ****   *      
 630:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @retval The number of remaining data units in the current DMAy Streamx transfer.
 631:.\stm32f4periph\src/stm32f4xx_dma.c ****   */
 632:.\stm32f4periph\src/stm32f4xx_dma.c **** void DMA_SetCurrDataCounter(DMA_Stream_TypeDef* DMAy_Streamx, uint16_t Counter)
 633:.\stm32f4periph\src/stm32f4xx_dma.c **** {
 485              		.loc 1 633 0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 0
 488              		@ frame_needed = 0, uses_anonymous_args = 0
 489              		@ link register save eliminated.
 490              	.LVL13:
 634:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Check the parameters */
 635:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 636:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 637:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Write the number of data units to be transferred */
 638:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMAy_Streamx->NDTR = (uint16_t)Counter;
 491              		.loc 1 638 0
 492 01c8 4160     		str	r1, [r0, #4]	@ Counter, DMAy_Streamx_3(D)->NDTR
 493 01ca 7047     		bx	lr	@
 494              		.cfi_endproc
 495              	.LFE116:
 496              		.size	DMA_SetCurrDataCounter, .-DMA_SetCurrDataCounter
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 21


 497              		.align	1
 498              		.global	DMA_GetCurrDataCounter
 499              		.thumb
 500              		.thumb_func
 501              		.type	DMA_GetCurrDataCounter, %function
 502              	DMA_GetCurrDataCounter:
 503              	.LFB117:
 639:.\stm32f4periph\src/stm32f4xx_dma.c **** }
 640:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 641:.\stm32f4periph\src/stm32f4xx_dma.c **** /**
 642:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @brief  Returns the number of remaining data units in the current DMAy Streamx transfer.
 643:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 644:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
 645:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @retval The number of remaining data units in the current DMAy Streamx transfer.
 646:.\stm32f4periph\src/stm32f4xx_dma.c ****   */
 647:.\stm32f4periph\src/stm32f4xx_dma.c **** uint16_t DMA_GetCurrDataCounter(DMA_Stream_TypeDef* DMAy_Streamx)
 648:.\stm32f4periph\src/stm32f4xx_dma.c **** {
 504              		.loc 1 648 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 509              	.LVL14:
 649:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Check the parameters */
 650:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 651:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 652:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Return the number of remaining data units for DMAy Streamx */
 653:.\stm32f4periph\src/stm32f4xx_dma.c ****   return ((uint16_t)(DMAy_Streamx->NDTR));
 510              		.loc 1 653 0
 511 01cc 4068     		ldr	r0, [r0, #4]	@ D.7491, DMAy_Streamx_1(D)->NDTR
 512              	.LVL15:
 654:.\stm32f4periph\src/stm32f4xx_dma.c **** }
 513              		.loc 1 654 0
 514 01ce 80B2     		uxth	r0, r0	@, D.7491
 515 01d0 7047     		bx	lr	@
 516              		.cfi_endproc
 517              	.LFE117:
 518              		.size	DMA_GetCurrDataCounter, .-DMA_GetCurrDataCounter
 519              		.align	1
 520              		.global	DMA_DoubleBufferModeConfig
 521              		.thumb
 522              		.thumb_func
 523              		.type	DMA_DoubleBufferModeConfig, %function
 524              	DMA_DoubleBufferModeConfig:
 525              	.LFB118:
 655:.\stm32f4periph\src/stm32f4xx_dma.c **** /**
 656:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @}
 657:.\stm32f4periph\src/stm32f4xx_dma.c ****   */
 658:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 659:.\stm32f4periph\src/stm32f4xx_dma.c **** /** @defgroup DMA_Group3 Double Buffer mode functions
 660:.\stm32f4periph\src/stm32f4xx_dma.c ****  *  @brief   Double Buffer mode functions 
 661:.\stm32f4periph\src/stm32f4xx_dma.c ****  *
 662:.\stm32f4periph\src/stm32f4xx_dma.c **** @verbatim   
 663:.\stm32f4periph\src/stm32f4xx_dma.c ****  ===============================================================================
 664:.\stm32f4periph\src/stm32f4xx_dma.c ****                          Double Buffer mode functions
 665:.\stm32f4periph\src/stm32f4xx_dma.c ****  ===============================================================================  
 666:.\stm32f4periph\src/stm32f4xx_dma.c **** 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 22


 667:.\stm32f4periph\src/stm32f4xx_dma.c ****   This subsection provides function allowing to configure and control the double 
 668:.\stm32f4periph\src/stm32f4xx_dma.c ****   buffer mode parameters.
 669:.\stm32f4periph\src/stm32f4xx_dma.c ****   
 670:.\stm32f4periph\src/stm32f4xx_dma.c ****   The Double Buffer mode can be used only when Circular mode is enabled.
 671:.\stm32f4periph\src/stm32f4xx_dma.c ****   The Double Buffer mode cannot be used when transferring data from Memory to Memory.
 672:.\stm32f4periph\src/stm32f4xx_dma.c ****   
 673:.\stm32f4periph\src/stm32f4xx_dma.c ****   The Double Buffer mode allows to set two different Memory addresses from/to which
 674:.\stm32f4periph\src/stm32f4xx_dma.c ****   the DMA controller will access alternatively (after completing transfer to/from target
 675:.\stm32f4periph\src/stm32f4xx_dma.c ****   memory 0, it will start transfer to/from target memory 1).
 676:.\stm32f4periph\src/stm32f4xx_dma.c ****   This allows to reduce software overhead for double buffering and reduce the CPU
 677:.\stm32f4periph\src/stm32f4xx_dma.c ****   access time.
 678:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 679:.\stm32f4periph\src/stm32f4xx_dma.c ****   Two functions must be called before calling the DMA_Init() function:
 680:.\stm32f4periph\src/stm32f4xx_dma.c ****    - void DMA_DoubleBufferModeConfig(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t Memory1BaseAddr,
 681:.\stm32f4periph\src/stm32f4xx_dma.c ****                                 uint32_t DMA_CurrentMemory);
 682:.\stm32f4periph\src/stm32f4xx_dma.c ****    - void DMA_DoubleBufferModeCmd(DMA_Stream_TypeDef* DMAy_Streamx, FunctionalState NewState);
 683:.\stm32f4periph\src/stm32f4xx_dma.c ****    
 684:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMA_DoubleBufferModeConfig() is called to configure the Memory 1 base address and the first
 685:.\stm32f4periph\src/stm32f4xx_dma.c ****   Memory target from/to which the transfer will start after enabling the DMA Stream.
 686:.\stm32f4periph\src/stm32f4xx_dma.c ****   Then DMA_DoubleBufferModeCmd() must be called to enable the Double Buffer mode (or disable 
 687:.\stm32f4periph\src/stm32f4xx_dma.c ****   it when it should not be used).
 688:.\stm32f4periph\src/stm32f4xx_dma.c ****   
 689:.\stm32f4periph\src/stm32f4xx_dma.c ****    
 690:.\stm32f4periph\src/stm32f4xx_dma.c ****   Two functions can be called dynamically when the transfer is ongoing (or when the DMA Stream is 
 691:.\stm32f4periph\src/stm32f4xx_dma.c ****   stopped) to modify on of the target Memories addresses or to check wich Memory target is currentl
 692:.\stm32f4periph\src/stm32f4xx_dma.c ****    used:
 693:.\stm32f4periph\src/stm32f4xx_dma.c ****     - void DMA_MemoryTargetConfig(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t MemoryBaseAddr,
 694:.\stm32f4periph\src/stm32f4xx_dma.c ****                             uint32_t DMA_MemoryTarget);
 695:.\stm32f4periph\src/stm32f4xx_dma.c ****     - uint32_t DMA_GetCurrentMemoryTarget(DMA_Stream_TypeDef* DMAy_Streamx);
 696:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 697:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMA_MemoryTargetConfig() can be called to modify the base address of one of the two target Memori
 698:.\stm32f4periph\src/stm32f4xx_dma.c ****   The Memory of which the base address will be modified must not be currently be used by the DMA St
 699:.\stm32f4periph\src/stm32f4xx_dma.c ****   (ie. if the DMA Stream is currently transferring from Memory 1 then you can only modify base addr
 700:.\stm32f4periph\src/stm32f4xx_dma.c ****   of target Memory 0 and vice versa).
 701:.\stm32f4periph\src/stm32f4xx_dma.c ****   To check this condition, it is recommended to use the function DMA_GetCurrentMemoryTarget() which
 702:.\stm32f4periph\src/stm32f4xx_dma.c ****   returns the index of the Memory target currently in use by the DMA Stream.
 703:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 704:.\stm32f4periph\src/stm32f4xx_dma.c **** @endverbatim
 705:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @{
 706:.\stm32f4periph\src/stm32f4xx_dma.c ****   */
 707:.\stm32f4periph\src/stm32f4xx_dma.c ****   
 708:.\stm32f4periph\src/stm32f4xx_dma.c **** /**
 709:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @brief  Configures, when the DMAy Streamx is disabled, the double buffer mode 
 710:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         and the current memory target.
 711:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 712:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
 713:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  Memory1BaseAddr: the base address of the second buffer (Memory 1)  
 714:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  DMA_CurrentMemory: specifies which memory will be first buffer for
 715:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         the transactions when the Stream will be enabled. 
 716:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          This parameter can be one of the following values:
 717:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_Memory_0: Memory 0 is the current buffer.
 718:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_Memory_1: Memory 1 is the current buffer.  
 719:.\stm32f4periph\src/stm32f4xx_dma.c ****   *       
 720:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @note   Memory0BaseAddr is set by the DMA structure configuration in DMA_Init().
 721:.\stm32f4periph\src/stm32f4xx_dma.c ****   *   
 722:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @retval None
 723:.\stm32f4periph\src/stm32f4xx_dma.c ****   */
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 23


 724:.\stm32f4periph\src/stm32f4xx_dma.c **** void DMA_DoubleBufferModeConfig(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t Memory1BaseAddr,
 725:.\stm32f4periph\src/stm32f4xx_dma.c ****                                 uint32_t DMA_CurrentMemory)
 726:.\stm32f4periph\src/stm32f4xx_dma.c **** {  
 526              		.loc 1 726 0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 0
 529              		@ frame_needed = 0, uses_anonymous_args = 0
 530              		@ link register save eliminated.
 531              	.LVL16:
 727:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Check the parameters */
 728:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 729:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_CURRENT_MEM(DMA_CurrentMemory));
 730:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 731:.\stm32f4periph\src/stm32f4xx_dma.c ****   if (DMA_CurrentMemory != DMA_Memory_0)
 732:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 733:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Set Memory 1 as current memory address */
 734:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMAy_Streamx->CR |= (uint32_t)(DMA_SxCR_CT);    
 532              		.loc 1 734 0
 533 01d2 0368     		ldr	r3, [r0, #0]	@ D.7485,* DMAy_Streamx
 731:.\stm32f4periph\src/stm32f4xx_dma.c ****   if (DMA_CurrentMemory != DMA_Memory_0)
 534              		.loc 1 731 0
 535 01d4 12B1     		cbz	r2, .L47	@ DMA_CurrentMemory,
 536              		.loc 1 734 0
 537 01d6 43F40023 		orr	r3, r3, #524288	@ D.7486, D.7485,
 538 01da 01E0     		b	.L49	@
 539              	.L47:
 735:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
 736:.\stm32f4periph\src/stm32f4xx_dma.c ****   else
 737:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 738:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Set Memory 0 as current memory address */
 739:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMAy_Streamx->CR &= ~(uint32_t)(DMA_SxCR_CT);    
 540              		.loc 1 739 0
 541 01dc 23F40023 		bic	r3, r3, #524288	@ D.7489, D.7488,
 542              	.L49:
 543 01e0 0360     		str	r3, [r0, #0]	@ D.7489,* DMAy_Streamx
 740:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
 741:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 742:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Write to DMAy Streamx M1AR */
 743:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMAy_Streamx->M1AR = Memory1BaseAddr;
 544              		.loc 1 743 0
 545 01e2 0161     		str	r1, [r0, #16]	@ Memory1BaseAddr, DMAy_Streamx_2(D)->M1AR
 546 01e4 7047     		bx	lr	@
 547              		.cfi_endproc
 548              	.LFE118:
 549              		.size	DMA_DoubleBufferModeConfig, .-DMA_DoubleBufferModeConfig
 550              		.align	1
 551              		.global	DMA_DoubleBufferModeCmd
 552              		.thumb
 553              		.thumb_func
 554              		.type	DMA_DoubleBufferModeCmd, %function
 555              	DMA_DoubleBufferModeCmd:
 556              	.LFB119:
 744:.\stm32f4periph\src/stm32f4xx_dma.c **** }
 745:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 746:.\stm32f4periph\src/stm32f4xx_dma.c **** /**
 747:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @brief  Enables or disables the double buffer mode for the selected DMA stream.
 748:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @note   This function can be called only when the DMA Stream is disabled.  
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 24


 749:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 750:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
 751:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  NewState: new state of the DMAy Streamx double buffer mode. 
 752:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          This parameter can be: ENABLE or DISABLE.
 753:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @retval None
 754:.\stm32f4periph\src/stm32f4xx_dma.c ****   */
 755:.\stm32f4periph\src/stm32f4xx_dma.c **** void DMA_DoubleBufferModeCmd(DMA_Stream_TypeDef* DMAy_Streamx, FunctionalState NewState)
 756:.\stm32f4periph\src/stm32f4xx_dma.c **** {  
 557              		.loc 1 756 0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 0
 560              		@ frame_needed = 0, uses_anonymous_args = 0
 561              		@ link register save eliminated.
 562              	.LVL17:
 757:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Check the parameters */
 758:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 759:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 760:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 761:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Configure the Double Buffer mode */
 762:.\stm32f4periph\src/stm32f4xx_dma.c ****   if (NewState != DISABLE)
 763:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 764:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Enable the Double buffer mode */
 765:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMAy_Streamx->CR |= (uint32_t)DMA_SxCR_DBM;
 563              		.loc 1 765 0
 564 01e6 0368     		ldr	r3, [r0, #0]	@ D.7478,* DMAy_Streamx
 762:.\stm32f4periph\src/stm32f4xx_dma.c ****   if (NewState != DISABLE)
 565              		.loc 1 762 0
 566 01e8 11B1     		cbz	r1, .L51	@ NewState,
 567              		.loc 1 765 0
 568 01ea 43F48023 		orr	r3, r3, #262144	@ D.7479, D.7478,
 569 01ee 01E0     		b	.L53	@
 570              	.L51:
 766:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
 767:.\stm32f4periph\src/stm32f4xx_dma.c ****   else
 768:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 769:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Disable the Double buffer mode */
 770:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMAy_Streamx->CR &= ~(uint32_t)DMA_SxCR_DBM;
 571              		.loc 1 770 0
 572 01f0 23F48023 		bic	r3, r3, #262144	@ D.7482, D.7481,
 573              	.L53:
 574 01f4 0360     		str	r3, [r0, #0]	@ D.7482,* DMAy_Streamx
 575 01f6 7047     		bx	lr	@
 576              		.cfi_endproc
 577              	.LFE119:
 578              		.size	DMA_DoubleBufferModeCmd, .-DMA_DoubleBufferModeCmd
 579              		.align	1
 580              		.global	DMA_MemoryTargetConfig
 581              		.thumb
 582              		.thumb_func
 583              		.type	DMA_MemoryTargetConfig, %function
 584              	DMA_MemoryTargetConfig:
 585              	.LFB120:
 771:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
 772:.\stm32f4periph\src/stm32f4xx_dma.c **** }
 773:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 774:.\stm32f4periph\src/stm32f4xx_dma.c **** /**
 775:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @brief  Configures the Memory address for the next buffer transfer in double
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 25


 776:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         buffer mode (for dynamic use). This function can be called when the
 777:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         DMA Stream is enabled and when the transfer is ongoing.  
 778:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 779:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
 780:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  MemoryBaseAddr: The base address of the target memory buffer
 781:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  DMA_MemoryTarget: Next memory target to be used. 
 782:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         This parameter can be one of the following values:
 783:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_Memory_0: To use the memory address 0
 784:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_Memory_1: To use the memory address 1
 785:.\stm32f4periph\src/stm32f4xx_dma.c ****   * 
 786:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @note    It is not allowed to modify the Base Address of a target Memory when
 787:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          this target is involved in the current transfer. ie. If the DMA Stream
 788:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          is currently transferring to/from Memory 1, then it not possible to
 789:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          modify Base address of Memory 1, but it is possible to modify Base
 790:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          address of Memory 0.
 791:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          To know which Memory is currently used, you can use the function
 792:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          DMA_GetCurrentMemoryTarget().             
 793:.\stm32f4periph\src/stm32f4xx_dma.c ****   *  
 794:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @retval None
 795:.\stm32f4periph\src/stm32f4xx_dma.c ****   */
 796:.\stm32f4periph\src/stm32f4xx_dma.c **** void DMA_MemoryTargetConfig(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t MemoryBaseAddr,
 797:.\stm32f4periph\src/stm32f4xx_dma.c ****                            uint32_t DMA_MemoryTarget)
 798:.\stm32f4periph\src/stm32f4xx_dma.c **** {
 586              		.loc 1 798 0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 0
 589              		@ frame_needed = 0, uses_anonymous_args = 0
 590              		@ link register save eliminated.
 591              	.LVL18:
 799:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Check the parameters */
 800:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 801:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_CURRENT_MEM(DMA_MemoryTarget));
 802:.\stm32f4periph\src/stm32f4xx_dma.c ****     
 803:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Check the Memory target to be configured */
 804:.\stm32f4periph\src/stm32f4xx_dma.c ****   if (DMA_MemoryTarget != DMA_Memory_0)
 592              		.loc 1 804 0
 593 01f8 0AB1     		cbz	r2, .L55	@ DMA_MemoryTarget,
 805:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 806:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Write to DMAy Streamx M1AR */
 807:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMAy_Streamx->M1AR = MemoryBaseAddr;    
 594              		.loc 1 807 0
 595 01fa 0161     		str	r1, [r0, #16]	@ MemoryBaseAddr, DMAy_Streamx_2(D)->M1AR
 596 01fc 7047     		bx	lr	@
 597              	.L55:
 808:.\stm32f4periph\src/stm32f4xx_dma.c ****   }  
 809:.\stm32f4periph\src/stm32f4xx_dma.c ****   else
 810:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 811:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Write to DMAy Streamx M0AR */
 812:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMAy_Streamx->M0AR = MemoryBaseAddr;  
 598              		.loc 1 812 0
 599 01fe C160     		str	r1, [r0, #12]	@ MemoryBaseAddr, DMAy_Streamx_2(D)->M0AR
 600 0200 7047     		bx	lr	@
 601              		.cfi_endproc
 602              	.LFE120:
 603              		.size	DMA_MemoryTargetConfig, .-DMA_MemoryTargetConfig
 604              		.align	1
 605              		.global	DMA_GetCurrentMemoryTarget
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 26


 606              		.thumb
 607              		.thumb_func
 608              		.type	DMA_GetCurrentMemoryTarget, %function
 609              	DMA_GetCurrentMemoryTarget:
 610              	.LFB121:
 813:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
 814:.\stm32f4periph\src/stm32f4xx_dma.c **** }
 815:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 816:.\stm32f4periph\src/stm32f4xx_dma.c **** /**
 817:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @brief  Returns the current memory target used by double buffer transfer.
 818:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 819:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
 820:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @retval The memory target number: 0 for Memory0 or 1 for Memory1. 
 821:.\stm32f4periph\src/stm32f4xx_dma.c ****   */
 822:.\stm32f4periph\src/stm32f4xx_dma.c **** uint32_t DMA_GetCurrentMemoryTarget(DMA_Stream_TypeDef* DMAy_Streamx)
 823:.\stm32f4periph\src/stm32f4xx_dma.c **** {
 611              		.loc 1 823 0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 615              		@ link register save eliminated.
 616              	.LVL19:
 824:.\stm32f4periph\src/stm32f4xx_dma.c ****   uint32_t tmp = 0;
 825:.\stm32f4periph\src/stm32f4xx_dma.c ****   
 826:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Check the parameters */
 827:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 828:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 829:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Get the current memory target */
 830:.\stm32f4periph\src/stm32f4xx_dma.c ****   if ((DMAy_Streamx->CR & DMA_SxCR_CT) != 0)
 617              		.loc 1 830 0
 618 0202 0068     		ldr	r0, [r0, #0]	@ D.7466, DMAy_Streamx_3(D)->CR
 619              	.LVL20:
 831:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 832:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Current memory buffer used is Memory 1 */
 833:.\stm32f4periph\src/stm32f4xx_dma.c ****     tmp = 1;
 834:.\stm32f4periph\src/stm32f4xx_dma.c ****   }  
 835:.\stm32f4periph\src/stm32f4xx_dma.c ****   else
 836:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 837:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Current memory buffer used is Memory 0 */
 838:.\stm32f4periph\src/stm32f4xx_dma.c ****     tmp = 0;    
 839:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
 840:.\stm32f4periph\src/stm32f4xx_dma.c ****   return tmp;
 841:.\stm32f4periph\src/stm32f4xx_dma.c **** }
 620              		.loc 1 841 0
 621 0204 C0F3C040 		ubfx	r0, r0, #19, #1	@, D.7466,,
 622              	.LVL21:
 623 0208 7047     		bx	lr	@
 624              		.cfi_endproc
 625              	.LFE121:
 626              		.size	DMA_GetCurrentMemoryTarget, .-DMA_GetCurrentMemoryTarget
 627              		.align	1
 628              		.global	DMA_GetCmdStatus
 629              		.thumb
 630              		.thumb_func
 631              		.type	DMA_GetCmdStatus, %function
 632              	DMA_GetCmdStatus:
 633              	.LFB122:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 27


 842:.\stm32f4periph\src/stm32f4xx_dma.c **** /**
 843:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @}
 844:.\stm32f4periph\src/stm32f4xx_dma.c ****   */
 845:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 846:.\stm32f4periph\src/stm32f4xx_dma.c **** /** @defgroup DMA_Group4 Interrupts and flags management functions
 847:.\stm32f4periph\src/stm32f4xx_dma.c ****  *  @brief   Interrupts and flags management functions 
 848:.\stm32f4periph\src/stm32f4xx_dma.c ****  *
 849:.\stm32f4periph\src/stm32f4xx_dma.c **** @verbatim   
 850:.\stm32f4periph\src/stm32f4xx_dma.c ****  ===============================================================================
 851:.\stm32f4periph\src/stm32f4xx_dma.c ****                   Interrupts and flags management functions
 852:.\stm32f4periph\src/stm32f4xx_dma.c ****  ===============================================================================  
 853:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 854:.\stm32f4periph\src/stm32f4xx_dma.c ****   This subsection provides functions allowing to
 855:.\stm32f4periph\src/stm32f4xx_dma.c ****    - Check the DMA enable status
 856:.\stm32f4periph\src/stm32f4xx_dma.c ****    - Check the FIFO status 
 857:.\stm32f4periph\src/stm32f4xx_dma.c ****    - Configure the DMA Interrupts sources and check or clear the flags or pending bits status.   
 858:.\stm32f4periph\src/stm32f4xx_dma.c ****    
 859:.\stm32f4periph\src/stm32f4xx_dma.c ****  1. DMA Enable status:
 860:.\stm32f4periph\src/stm32f4xx_dma.c ****    After configuring the DMA Stream (DMA_Init() function) and enabling the stream,
 861:.\stm32f4periph\src/stm32f4xx_dma.c ****    it is recommended to check (or wait until) the DMA Stream is effectively enabled.
 862:.\stm32f4periph\src/stm32f4xx_dma.c ****    A Stream may remain disabled if a configuration parameter is wrong.
 863:.\stm32f4periph\src/stm32f4xx_dma.c ****    After disabling a DMA Stream, it is also recommended to check (or wait until) the DMA
 864:.\stm32f4periph\src/stm32f4xx_dma.c ****    Stream is effectively disabled. If a Stream is disabled while a data transfer is ongoing, 
 865:.\stm32f4periph\src/stm32f4xx_dma.c ****    the current data will be transferred and the Stream will be effectively disabled only after
 866:.\stm32f4periph\src/stm32f4xx_dma.c ****    this data transfer completion.
 867:.\stm32f4periph\src/stm32f4xx_dma.c ****    To monitor this state it is possible to use the following function:
 868:.\stm32f4periph\src/stm32f4xx_dma.c ****      - FunctionalState DMA_GetCmdStatus(DMA_Stream_TypeDef* DMAy_Streamx); 
 869:.\stm32f4periph\src/stm32f4xx_dma.c ****  
 870:.\stm32f4periph\src/stm32f4xx_dma.c ****  2. FIFO Status:
 871:.\stm32f4periph\src/stm32f4xx_dma.c ****    It is possible to monitor the FIFO status when a transfer is ongoing using the following 
 872:.\stm32f4periph\src/stm32f4xx_dma.c ****    function:
 873:.\stm32f4periph\src/stm32f4xx_dma.c ****      - uint32_t DMA_GetFIFOStatus(DMA_Stream_TypeDef* DMAy_Streamx); 
 874:.\stm32f4periph\src/stm32f4xx_dma.c ****  
 875:.\stm32f4periph\src/stm32f4xx_dma.c ****  3. DMA Interrupts and Flags:
 876:.\stm32f4periph\src/stm32f4xx_dma.c ****   The user should identify which mode will be used in his application to manage the
 877:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMA controller events: Polling mode or Interrupt mode. 
 878:.\stm32f4periph\src/stm32f4xx_dma.c ****     
 879:.\stm32f4periph\src/stm32f4xx_dma.c ****   Polling Mode
 880:.\stm32f4periph\src/stm32f4xx_dma.c ****   =============
 881:.\stm32f4periph\src/stm32f4xx_dma.c ****     Each DMA stream can be managed through 4 event Flags:
 882:.\stm32f4periph\src/stm32f4xx_dma.c ****     (x : DMA Stream number )
 883:.\stm32f4periph\src/stm32f4xx_dma.c ****        1. DMA_FLAG_FEIFx  : to indicate that a FIFO Mode Transfer Error event occurred.
 884:.\stm32f4periph\src/stm32f4xx_dma.c ****        2. DMA_FLAG_DMEIFx : to indicate that a Direct Mode Transfer Error event occurred.
 885:.\stm32f4periph\src/stm32f4xx_dma.c ****        3. DMA_FLAG_TEIFx  : to indicate that a Transfer Error event occurred.
 886:.\stm32f4periph\src/stm32f4xx_dma.c ****        4. DMA_FLAG_HTIFx  : to indicate that a Half-Transfer Complete event occurred.
 887:.\stm32f4periph\src/stm32f4xx_dma.c ****        5. DMA_FLAG_TCIFx  : to indicate that a Transfer Complete event occurred .       
 888:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 889:.\stm32f4periph\src/stm32f4xx_dma.c ****    In this Mode it is advised to use the following functions:
 890:.\stm32f4periph\src/stm32f4xx_dma.c ****       - FlagStatus DMA_GetFlagStatus(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_FLAG);
 891:.\stm32f4periph\src/stm32f4xx_dma.c ****       - void DMA_ClearFlag(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_FLAG);
 892:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 893:.\stm32f4periph\src/stm32f4xx_dma.c ****   Interrupt Mode
 894:.\stm32f4periph\src/stm32f4xx_dma.c ****   ===============
 895:.\stm32f4periph\src/stm32f4xx_dma.c ****     Each DMA Stream can be managed through 4 Interrupts:
 896:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 897:.\stm32f4periph\src/stm32f4xx_dma.c ****     Interrupt Source
 898:.\stm32f4periph\src/stm32f4xx_dma.c ****     ----------------
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 28


 899:.\stm32f4periph\src/stm32f4xx_dma.c ****        1. DMA_IT_FEIFx  : specifies the interrupt source for the  FIFO Mode Transfer Error event.
 900:.\stm32f4periph\src/stm32f4xx_dma.c ****        2. DMA_IT_DMEIFx : specifies the interrupt source for the Direct Mode Transfer Error event.
 901:.\stm32f4periph\src/stm32f4xx_dma.c ****        3. DMA_IT_TEIFx  : specifies the interrupt source for the Transfer Error event.
 902:.\stm32f4periph\src/stm32f4xx_dma.c ****        4. DMA_IT_HTIFx  : specifies the interrupt source for the Half-Transfer Complete event.
 903:.\stm32f4periph\src/stm32f4xx_dma.c ****        5. DMA_IT_TCIFx  : specifies the interrupt source for the a Transfer Complete event. 
 904:.\stm32f4periph\src/stm32f4xx_dma.c ****      
 905:.\stm32f4periph\src/stm32f4xx_dma.c ****   In this Mode it is advised to use the following functions:
 906:.\stm32f4periph\src/stm32f4xx_dma.c ****      - void DMA_ITConfig(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_IT, FunctionalState NewStat
 907:.\stm32f4periph\src/stm32f4xx_dma.c ****      - ITStatus DMA_GetITStatus(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_IT);
 908:.\stm32f4periph\src/stm32f4xx_dma.c ****      - void DMA_ClearITPendingBit(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_IT);
 909:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 910:.\stm32f4periph\src/stm32f4xx_dma.c **** @endverbatim
 911:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @{
 912:.\stm32f4periph\src/stm32f4xx_dma.c ****   */
 913:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 914:.\stm32f4periph\src/stm32f4xx_dma.c **** /**
 915:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @brief  Returns the status of EN bit for the specified DMAy Streamx.
 916:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 917:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
 918:.\stm32f4periph\src/stm32f4xx_dma.c ****   *   
 919:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @note    After configuring the DMA Stream (DMA_Init() function) and enabling
 920:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          the stream, it is recommended to check (or wait until) the DMA Stream
 921:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          is effectively enabled. A Stream may remain disabled if a configuration
 922:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          parameter is wrong.
 923:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          After disabling a DMA Stream, it is also recommended to check (or wait 
 924:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          until) the DMA Stream is effectively disabled. If a Stream is disabled
 925:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          while a data transfer is ongoing, the current data will be transferred
 926:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          and the Stream will be effectively disabled only after the transfer
 927:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          of this single data is finished.  
 928:.\stm32f4periph\src/stm32f4xx_dma.c ****   *      
 929:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @retval Current state of the DMAy Streamx (ENABLE or DISABLE).
 930:.\stm32f4periph\src/stm32f4xx_dma.c ****   */
 931:.\stm32f4periph\src/stm32f4xx_dma.c **** FunctionalState DMA_GetCmdStatus(DMA_Stream_TypeDef* DMAy_Streamx)
 932:.\stm32f4periph\src/stm32f4xx_dma.c **** {
 634              		.loc 1 932 0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 0
 637              		@ frame_needed = 0, uses_anonymous_args = 0
 638              		@ link register save eliminated.
 639              	.LVL22:
 933:.\stm32f4periph\src/stm32f4xx_dma.c ****   FunctionalState state = DISABLE;
 934:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 935:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Check the parameters */
 936:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 937:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 938:.\stm32f4periph\src/stm32f4xx_dma.c ****   if ((DMAy_Streamx->CR & (uint32_t)DMA_SxCR_EN) != 0)
 640              		.loc 1 938 0
 641 020a 0068     		ldr	r0, [r0, #0]	@ D.7459, DMAy_Streamx_3(D)->CR
 642              	.LVL23:
 939:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 940:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* The selected DMAy Streamx EN bit is set (DMA is still transferring) */
 941:.\stm32f4periph\src/stm32f4xx_dma.c ****     state = ENABLE;
 942:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
 943:.\stm32f4periph\src/stm32f4xx_dma.c ****   else
 944:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
 945:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* The selected DMAy Streamx EN bit is cleared (DMA is disabled and 
 946:.\stm32f4periph\src/stm32f4xx_dma.c ****         all transfers are complete) */
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 29


 947:.\stm32f4periph\src/stm32f4xx_dma.c ****     state = DISABLE;
 948:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
 949:.\stm32f4periph\src/stm32f4xx_dma.c ****   return state;
 950:.\stm32f4periph\src/stm32f4xx_dma.c **** }
 643              		.loc 1 950 0
 644 020c 00F00100 		and	r0, r0, #1	@, D.7459,
 645              	.LVL24:
 646 0210 7047     		bx	lr	@
 647              		.cfi_endproc
 648              	.LFE122:
 649              		.size	DMA_GetCmdStatus, .-DMA_GetCmdStatus
 650              		.align	1
 651              		.global	DMA_GetFIFOStatus
 652              		.thumb
 653              		.thumb_func
 654              		.type	DMA_GetFIFOStatus, %function
 655              	DMA_GetFIFOStatus:
 656              	.LFB123:
 951:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 952:.\stm32f4periph\src/stm32f4xx_dma.c **** /**
 953:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @brief  Returns the current DMAy Streamx FIFO filled level.
 954:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0 
 955:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         to 7 to select the DMA Stream.
 956:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @retval The FIFO filling state.
 957:.\stm32f4periph\src/stm32f4xx_dma.c ****   *           - DMA_FIFOStatus_Less1QuarterFull: when FIFO is less than 1 quarter-full 
 958:.\stm32f4periph\src/stm32f4xx_dma.c ****   *                                               and not empty.
 959:.\stm32f4periph\src/stm32f4xx_dma.c ****   *           - DMA_FIFOStatus_1QuarterFull: if more than 1 quarter-full.
 960:.\stm32f4periph\src/stm32f4xx_dma.c ****   *           - DMA_FIFOStatus_HalfFull: if more than 1 half-full.
 961:.\stm32f4periph\src/stm32f4xx_dma.c ****   *           - DMA_FIFOStatus_3QuartersFull: if more than 3 quarters-full.
 962:.\stm32f4periph\src/stm32f4xx_dma.c ****   *           - DMA_FIFOStatus_Empty: when FIFO is empty
 963:.\stm32f4periph\src/stm32f4xx_dma.c ****   *           - DMA_FIFOStatus_Full: when FIFO is full
 964:.\stm32f4periph\src/stm32f4xx_dma.c ****   */
 965:.\stm32f4periph\src/stm32f4xx_dma.c **** uint32_t DMA_GetFIFOStatus(DMA_Stream_TypeDef* DMAy_Streamx)
 966:.\stm32f4periph\src/stm32f4xx_dma.c **** {
 657              		.loc 1 966 0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 0
 660              		@ frame_needed = 0, uses_anonymous_args = 0
 661              		@ link register save eliminated.
 662              	.LVL25:
 967:.\stm32f4periph\src/stm32f4xx_dma.c ****   uint32_t tmpreg = 0;
 968:.\stm32f4periph\src/stm32f4xx_dma.c ****  
 969:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Check the parameters */
 970:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 971:.\stm32f4periph\src/stm32f4xx_dma.c ****   
 972:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Get the FIFO level bits */
 973:.\stm32f4periph\src/stm32f4xx_dma.c ****   tmpreg = (uint32_t)((DMAy_Streamx->FCR & DMA_SxFCR_FS));
 663              		.loc 1 973 0
 664 0212 4069     		ldr	r0, [r0, #20]	@ D.7456, DMAy_Streamx_2(D)->FCR
 665              	.LVL26:
 974:.\stm32f4periph\src/stm32f4xx_dma.c ****   
 975:.\stm32f4periph\src/stm32f4xx_dma.c ****   return tmpreg;
 976:.\stm32f4periph\src/stm32f4xx_dma.c **** }
 666              		.loc 1 976 0
 667 0214 00F03800 		and	r0, r0, #56	@, D.7456,
 668              	.LVL27:
 669 0218 7047     		bx	lr	@
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 30


 670              		.cfi_endproc
 671              	.LFE123:
 672              		.size	DMA_GetFIFOStatus, .-DMA_GetFIFOStatus
 673              		.align	1
 674              		.global	DMA_GetFlagStatus
 675              		.thumb
 676              		.thumb_func
 677              		.type	DMA_GetFlagStatus, %function
 678              	DMA_GetFlagStatus:
 679              	.LFB124:
 977:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 978:.\stm32f4periph\src/stm32f4xx_dma.c **** /**
 979:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @brief  Checks whether the specified DMAy Streamx flag is set or not.
 980:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 981:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
 982:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  DMA_FLAG: specifies the flag to check.
 983:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          This parameter can be one of the following values:
 984:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_FLAG_TCIFx:  Streamx transfer complete flag
 985:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_FLAG_HTIFx:  Streamx half transfer complete flag
 986:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_FLAG_TEIFx:  Streamx transfer error flag
 987:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_FLAG_DMEIFx: Streamx direct mode error flag
 988:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_FLAG_FEIFx:  Streamx FIFO error flag
 989:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         Where x can be 0 to 7 to select the DMA Stream.
 990:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @retval The new state of DMA_FLAG (SET or RESET).
 991:.\stm32f4periph\src/stm32f4xx_dma.c ****   */
 992:.\stm32f4periph\src/stm32f4xx_dma.c **** FlagStatus DMA_GetFlagStatus(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_FLAG)
 993:.\stm32f4periph\src/stm32f4xx_dma.c **** {
 680              		.loc 1 993 0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 0
 683              		@ frame_needed = 0, uses_anonymous_args = 0
 684              	.LVL28:
 994:.\stm32f4periph\src/stm32f4xx_dma.c ****   FlagStatus bitstatus = RESET;
 995:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMA_TypeDef* DMAy;
 996:.\stm32f4periph\src/stm32f4xx_dma.c ****   uint32_t tmpreg = 0;
 997:.\stm32f4periph\src/stm32f4xx_dma.c **** 
 998:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Check the parameters */
 999:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
1000:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_GET_FLAG(DMA_FLAG));
1001:.\stm32f4periph\src/stm32f4xx_dma.c **** 
1002:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Determine the DMA to which belongs the stream */
1003:.\stm32f4periph\src/stm32f4xx_dma.c ****   if (DMAy_Streamx < DMA2_Stream0)
1004:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
1005:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* DMAy_Streamx belongs to DMA1 */
1006:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMAy = DMA1; 
 685              		.loc 1 1006 0
 686 021a 0A4B     		ldr	r3, .L65	@ tmp157,
 687 021c 0A4A     		ldr	r2, .L65+4	@ tmp156,
 993:.\stm32f4periph\src/stm32f4xx_dma.c **** {
 688              		.loc 1 993 0
 689 021e 10B5     		push	{r4, lr}	@
 690              	.LCFI1:
 691              		.cfi_def_cfa_offset 8
 692              		.cfi_offset 4, -8
 693              		.cfi_offset 14, -4
 694              		.loc 1 1006 0
 695 0220 0A4C     		ldr	r4, .L65+8	@ tmp148,
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 31


 696 0222 A042     		cmp	r0, r4	@ DMAy_Streamx, tmp148
 697 0224 8CBF     		ite	hi	@
 698 0226 1046     		movhi	r0, r2	@, DMAy, tmp156
 699 0228 1846     		movls	r0, r3	@, DMAy, tmp157
 700              	.LVL29:
1007:.\stm32f4periph\src/stm32f4xx_dma.c ****   } 
1008:.\stm32f4periph\src/stm32f4xx_dma.c ****   else 
1009:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
1010:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* DMAy_Streamx belongs to DMA2 */
1011:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMAy = DMA2; 
1012:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
1013:.\stm32f4periph\src/stm32f4xx_dma.c **** 
1014:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Check if the flag is in HISR or LISR */
1015:.\stm32f4periph\src/stm32f4xx_dma.c ****   if ((DMA_FLAG & HIGH_ISR_MASK) != (uint32_t)RESET)
 701              		.loc 1 1015 0
 702 022a 8B00     		lsls	r3, r1, #2	@, DMA_FLAG,
1016:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
1017:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Get DMAy HISR register value */
1018:.\stm32f4periph\src/stm32f4xx_dma.c ****     tmpreg = DMAy->HISR;
 703              		.loc 1 1018 0
 704 022c 4CBF     		ite	mi
 705 022e 4368     		ldrmi	r3, [r0, #4]	@ tmpreg, DMAy_2->HISR
 706              	.LVL30:
1019:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
1020:.\stm32f4periph\src/stm32f4xx_dma.c ****   else
1021:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
1022:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Get DMAy LISR register value */
1023:.\stm32f4periph\src/stm32f4xx_dma.c ****     tmpreg = DMAy->LISR;
 707              		.loc 1 1023 0
 708 0230 0368     		ldrpl	r3, [r0, #0]	@ tmpreg, DMAy_2->LISR
 709              	.LVL31:
1024:.\stm32f4periph\src/stm32f4xx_dma.c ****   }   
1025:.\stm32f4periph\src/stm32f4xx_dma.c ****  
1026:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Mask the reserved bits */
1027:.\stm32f4periph\src/stm32f4xx_dma.c ****   tmpreg &= (uint32_t)RESERVED_MASK;
 710              		.loc 1 1027 0
 711 0232 21F0F021 		bic	r1, r1, #-268374016	@ tmp152, DMA_FLAG,
 712              	.LVL32:
 713 0236 21F08211 		bic	r1, r1, #8519810	@ tmp151, tmp152,
1028:.\stm32f4periph\src/stm32f4xx_dma.c **** 
1029:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Check the status of the specified DMA flag */
1030:.\stm32f4periph\src/stm32f4xx_dma.c ****   if ((tmpreg & DMA_FLAG) != (uint32_t)RESET)
 714              		.loc 1 1030 0
 715 023a 1942     		tst	r1, r3	@ tmp151, tmpreg
1031:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
1032:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* DMA_FLAG is set */
1033:.\stm32f4periph\src/stm32f4xx_dma.c ****     bitstatus = SET;
1034:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
1035:.\stm32f4periph\src/stm32f4xx_dma.c ****   else
1036:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
1037:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* DMA_FLAG is reset */
1038:.\stm32f4periph\src/stm32f4xx_dma.c ****     bitstatus = RESET;
1039:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
1040:.\stm32f4periph\src/stm32f4xx_dma.c **** 
1041:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Return the DMA_FLAG status */
1042:.\stm32f4periph\src/stm32f4xx_dma.c ****   return  bitstatus;
1043:.\stm32f4periph\src/stm32f4xx_dma.c **** }
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 32


 716              		.loc 1 1043 0
 717 023c 0CBF     		ite	eq	@
 718 023e 0020     		moveq	r0, #0	@,
 719 0240 0120     		movne	r0, #1	@,
 720              	.LVL33:
 721 0242 10BD     		pop	{r4, pc}	@
 722              	.L66:
 723              		.align	2
 724              	.L65:
 725 0244 00600240 		.word	1073897472
 726 0248 00640240 		.word	1073898496
 727 024c 0F640240 		.word	1073898511
 728              		.cfi_endproc
 729              	.LFE124:
 730              		.size	DMA_GetFlagStatus, .-DMA_GetFlagStatus
 731              		.align	1
 732              		.global	DMA_ClearFlag
 733              		.thumb
 734              		.thumb_func
 735              		.type	DMA_ClearFlag, %function
 736              	DMA_ClearFlag:
 737              	.LFB125:
1044:.\stm32f4periph\src/stm32f4xx_dma.c **** 
1045:.\stm32f4periph\src/stm32f4xx_dma.c **** /**
1046:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @brief  Clears the DMAy Streamx's pending flags.
1047:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
1048:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
1049:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  DMA_FLAG: specifies the flag to clear.
1050:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          This parameter can be any combination of the following values:
1051:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_FLAG_TCIFx:  Streamx transfer complete flag
1052:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_FLAG_HTIFx:  Streamx half transfer complete flag
1053:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_FLAG_TEIFx:  Streamx transfer error flag
1054:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_FLAG_DMEIFx: Streamx direct mode error flag
1055:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_FLAG_FEIFx:  Streamx FIFO error flag
1056:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         Where x can be 0 to 7 to select the DMA Stream.   
1057:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @retval None
1058:.\stm32f4periph\src/stm32f4xx_dma.c ****   */
1059:.\stm32f4periph\src/stm32f4xx_dma.c **** void DMA_ClearFlag(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_FLAG)
1060:.\stm32f4periph\src/stm32f4xx_dma.c **** {
 738              		.loc 1 1060 0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 0
 741              		@ frame_needed = 0, uses_anonymous_args = 0
 742              	.LVL34:
 743 0250 10B5     		push	{r4, lr}	@
 744              	.LCFI2:
 745              		.cfi_def_cfa_offset 8
 746              		.cfi_offset 4, -8
 747              		.cfi_offset 14, -4
1061:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMA_TypeDef* DMAy;
1062:.\stm32f4periph\src/stm32f4xx_dma.c **** 
1063:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Check the parameters */
1064:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
1065:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_CLEAR_FLAG(DMA_FLAG));
1066:.\stm32f4periph\src/stm32f4xx_dma.c **** 
1067:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Determine the DMA to which belongs the stream */
1068:.\stm32f4periph\src/stm32f4xx_dma.c ****   if (DMAy_Streamx < DMA2_Stream0)
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 33


1069:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
1070:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* DMAy_Streamx belongs to DMA1 */
1071:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMAy = DMA1; 
 748              		.loc 1 1071 0
 749 0252 084B     		ldr	r3, .L72	@ tmp146,
 750 0254 084A     		ldr	r2, .L72+4	@ tmp145,
 751 0256 094C     		ldr	r4, .L72+8	@ tmp140,
 752 0258 A042     		cmp	r0, r4	@ DMAy_Streamx, tmp140
 753 025a 8CBF     		ite	hi	@
 754 025c 1046     		movhi	r0, r2	@, DMAy, tmp145
 755 025e 1846     		movls	r0, r3	@, DMAy, tmp146
 756              	.LVL35:
1072:.\stm32f4periph\src/stm32f4xx_dma.c ****   } 
1073:.\stm32f4periph\src/stm32f4xx_dma.c ****   else 
1074:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
1075:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* DMAy_Streamx belongs to DMA2 */
1076:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMAy = DMA2; 
1077:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
1078:.\stm32f4periph\src/stm32f4xx_dma.c **** 
1079:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Check if LIFCR or HIFCR register is targeted */
1080:.\stm32f4periph\src/stm32f4xx_dma.c ****   if ((DMA_FLAG & HIGH_ISR_MASK) != (uint32_t)RESET)
 757              		.loc 1 1080 0
 758 0260 11F0005F 		tst	r1, #536870912	@ DMA_FLAG,
 759 0264 21F0F021 		bic	r1, r1, #-268374016	@ tmp144, DMA_FLAG,
 760              	.LVL36:
1081:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
1082:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Set DMAy HIFCR register clear flag bits */
1083:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMAy->HIFCR = (uint32_t)(DMA_FLAG & RESERVED_MASK);
 761              		.loc 1 1083 0
 762 0268 21F08211 		bic	r1, r1, #8519810	@ D.7441, tmp144,
 763 026c 14BF     		ite	ne
 764 026e C160     		strne	r1, [r0, #12]	@ D.7441, DMAy_1->HIFCR
1084:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
1085:.\stm32f4periph\src/stm32f4xx_dma.c ****   else 
1086:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
1087:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Set DMAy LIFCR register clear flag bits */
1088:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMAy->LIFCR = (uint32_t)(DMA_FLAG & RESERVED_MASK);
 765              		.loc 1 1088 0
 766 0270 8160     		streq	r1, [r0, #8]	@ D.7441, DMAy_1->LIFCR
 767 0272 10BD     		pop	{r4, pc}	@
 768              	.L73:
 769              		.align	2
 770              	.L72:
 771 0274 00600240 		.word	1073897472
 772 0278 00640240 		.word	1073898496
 773 027c 0F640240 		.word	1073898511
 774              		.cfi_endproc
 775              	.LFE125:
 776              		.size	DMA_ClearFlag, .-DMA_ClearFlag
 777              		.align	1
 778              		.global	DMA_ITConfig
 779              		.thumb
 780              		.thumb_func
 781              		.type	DMA_ITConfig, %function
 782              	DMA_ITConfig:
 783              	.LFB126:
1089:.\stm32f4periph\src/stm32f4xx_dma.c ****   }    
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 34


1090:.\stm32f4periph\src/stm32f4xx_dma.c **** }
1091:.\stm32f4periph\src/stm32f4xx_dma.c **** 
1092:.\stm32f4periph\src/stm32f4xx_dma.c **** /**
1093:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @brief  Enables or disables the specified DMAy Streamx interrupts.
1094:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
1095:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
1096:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param DMA_IT: specifies the DMA interrupt sources to be enabled or disabled. 
1097:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          This parameter can be any combination of the following values:
1098:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_IT_TC:  Transfer complete interrupt mask
1099:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_IT_HT:  Half transfer complete interrupt mask
1100:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_IT_TE:  Transfer error interrupt mask
1101:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_IT_FE:  FIFO error interrupt mask
1102:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  NewState: new state of the specified DMA interrupts.
1103:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          This parameter can be: ENABLE or DISABLE.
1104:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @retval None
1105:.\stm32f4periph\src/stm32f4xx_dma.c ****   */
1106:.\stm32f4periph\src/stm32f4xx_dma.c **** void DMA_ITConfig(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_IT, FunctionalState NewState)
1107:.\stm32f4periph\src/stm32f4xx_dma.c **** {
 784              		.loc 1 1107 0
 785              		.cfi_startproc
 786              		@ args = 0, pretend = 0, frame = 0
 787              		@ frame_needed = 0, uses_anonymous_args = 0
 788              		@ link register save eliminated.
 789              	.LVL37:
1108:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Check the parameters */
1109:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
1110:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_CONFIG_IT(DMA_IT));
1111:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1112:.\stm32f4periph\src/stm32f4xx_dma.c **** 
1113:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Check if the DMA_IT parameter contains a FIFO interrupt */
1114:.\stm32f4periph\src/stm32f4xx_dma.c ****   if ((DMA_IT & DMA_IT_FE) != 0)
 790              		.loc 1 1114 0
 791 0280 0B06     		lsls	r3, r1, #24	@, DMA_IT,
 792 0282 11D5     		bpl	.L75	@,
1115:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
1116:.\stm32f4periph\src/stm32f4xx_dma.c ****     if (NewState != DISABLE)
1117:.\stm32f4periph\src/stm32f4xx_dma.c ****     {
1118:.\stm32f4periph\src/stm32f4xx_dma.c ****       /* Enable the selected DMA FIFO interrupts */
1119:.\stm32f4periph\src/stm32f4xx_dma.c ****       DMAy_Streamx->FCR |= (uint32_t)DMA_IT_FE;
 793              		.loc 1 1119 0
 794 0284 4369     		ldr	r3, [r0, #20]	@ D.7419,
1116:.\stm32f4periph\src/stm32f4xx_dma.c ****     if (NewState != DISABLE)
 795              		.loc 1 1116 0
 796 0286 4AB1     		cbz	r2, .L76	@ NewState,
 797              		.loc 1 1119 0
 798 0288 43F08003 		orr	r3, r3, #128	@ D.7420, D.7419,
1120:.\stm32f4periph\src/stm32f4xx_dma.c ****     }    
1121:.\stm32f4periph\src/stm32f4xx_dma.c ****     else 
1122:.\stm32f4periph\src/stm32f4xx_dma.c ****     {
1123:.\stm32f4periph\src/stm32f4xx_dma.c ****       /* Disable the selected DMA FIFO interrupts */
1124:.\stm32f4periph\src/stm32f4xx_dma.c ****       DMAy_Streamx->FCR &= ~(uint32_t)DMA_IT_FE;  
1125:.\stm32f4periph\src/stm32f4xx_dma.c ****     }
1126:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
1127:.\stm32f4periph\src/stm32f4xx_dma.c **** 
1128:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Check if the DMA_IT parameter contains a Transfer interrupt */
1129:.\stm32f4periph\src/stm32f4xx_dma.c ****   if (DMA_IT != DMA_IT_FE)
 799              		.loc 1 1129 0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 35


 800 028c 8029     		cmp	r1, #128	@ DMA_IT,
1119:.\stm32f4periph\src/stm32f4xx_dma.c ****       DMAy_Streamx->FCR |= (uint32_t)DMA_IT_FE;
 801              		.loc 1 1119 0
 802 028e 4361     		str	r3, [r0, #20]	@ D.7420, DMAy_Streamx_4(D)->FCR
 803              		.loc 1 1129 0
 804 0290 14D0     		beq	.L74	@,
 805              	.L77:
1130:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
1131:.\stm32f4periph\src/stm32f4xx_dma.c ****     if (NewState != DISABLE)
1132:.\stm32f4periph\src/stm32f4xx_dma.c ****     {
1133:.\stm32f4periph\src/stm32f4xx_dma.c ****       /* Enable the selected DMA transfer interrupts */
1134:.\stm32f4periph\src/stm32f4xx_dma.c ****       DMAy_Streamx->CR |= (uint32_t)(DMA_IT  & TRANSFER_IT_ENABLE_MASK);
 806              		.loc 1 1134 0
 807 0292 0368     		ldr	r3, [r0, #0]	@ D.7428, DMAy_Streamx_4(D)->CR
 808 0294 01F01E01 		and	r1, r1, #30	@ tmp150, DMA_IT,
 809              	.LVL38:
 810 0298 1943     		orrs	r1, r1, r3	@, D.7430, tmp150, D.7428
 811 029a 0EE0     		b	.L84	@
 812              	.LVL39:
 813              	.L76:
1124:.\stm32f4periph\src/stm32f4xx_dma.c ****       DMAy_Streamx->FCR &= ~(uint32_t)DMA_IT_FE;  
 814              		.loc 1 1124 0
 815 029c 23F08003 		bic	r3, r3, #128	@ D.7423, D.7422,
1129:.\stm32f4periph\src/stm32f4xx_dma.c ****   if (DMA_IT != DMA_IT_FE)
 816              		.loc 1 1129 0
 817 02a0 8029     		cmp	r1, #128	@ DMA_IT,
1124:.\stm32f4periph\src/stm32f4xx_dma.c ****       DMAy_Streamx->FCR &= ~(uint32_t)DMA_IT_FE;  
 818              		.loc 1 1124 0
 819 02a2 4361     		str	r3, [r0, #20]	@ D.7423, DMAy_Streamx_4(D)->FCR
1129:.\stm32f4periph\src/stm32f4xx_dma.c ****   if (DMA_IT != DMA_IT_FE)
 820              		.loc 1 1129 0
 821 02a4 04D1     		bne	.L79	@,
 822 02a6 7047     		bx	lr	@
 823              	.L75:
 824 02a8 8029     		cmp	r1, #128	@ DMA_IT,
 825 02aa 07D0     		beq	.L74	@,
1131:.\stm32f4periph\src/stm32f4xx_dma.c ****     if (NewState != DISABLE)
 826              		.loc 1 1131 0
 827 02ac 002A     		cmp	r2, #0	@ NewState
 828 02ae F0D1     		bne	.L77	@
 829              	.L79:
1135:.\stm32f4periph\src/stm32f4xx_dma.c ****     }
1136:.\stm32f4periph\src/stm32f4xx_dma.c ****     else
1137:.\stm32f4periph\src/stm32f4xx_dma.c ****     {
1138:.\stm32f4periph\src/stm32f4xx_dma.c ****       /* Disable the selected DMA transfer interrupts */
1139:.\stm32f4periph\src/stm32f4xx_dma.c ****       DMAy_Streamx->CR &= ~(uint32_t)(DMA_IT & TRANSFER_IT_ENABLE_MASK);
 830              		.loc 1 1139 0
 831 02b0 0368     		ldr	r3, [r0, #0]	@ D.7432, DMAy_Streamx_4(D)->CR
 832 02b2 01F01E01 		and	r1, r1, #30	@ tmp151, DMA_IT,
 833              	.LVL40:
 834 02b6 23EA0101 		bic	r1, r3, r1	@ D.7434, D.7432, tmp151
 835              	.L84:
 836 02ba 0160     		str	r1, [r0, #0]	@ D.7434,* DMAy_Streamx
 837              	.L74:
 838 02bc 7047     		bx	lr	@
 839              		.cfi_endproc
 840              	.LFE126:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 36


 841              		.size	DMA_ITConfig, .-DMA_ITConfig
 842              		.align	1
 843              		.global	DMA_GetITStatus
 844              		.thumb
 845              		.thumb_func
 846              		.type	DMA_GetITStatus, %function
 847              	DMA_GetITStatus:
 848              	.LFB127:
1140:.\stm32f4periph\src/stm32f4xx_dma.c ****     }    
1141:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
1142:.\stm32f4periph\src/stm32f4xx_dma.c **** }
1143:.\stm32f4periph\src/stm32f4xx_dma.c **** 
1144:.\stm32f4periph\src/stm32f4xx_dma.c **** /**
1145:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @brief  Checks whether the specified DMAy Streamx interrupt has occurred or not.
1146:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
1147:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
1148:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  DMA_IT: specifies the DMA interrupt source to check.
1149:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          This parameter can be one of the following values:
1150:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_IT_TCIFx:  Streamx transfer complete interrupt
1151:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_IT_HTIFx:  Streamx half transfer complete interrupt
1152:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_IT_TEIFx:  Streamx transfer error interrupt
1153:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_IT_DMEIFx: Streamx direct mode error interrupt
1154:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_IT_FEIFx:  Streamx FIFO error interrupt
1155:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         Where x can be 0 to 7 to select the DMA Stream.
1156:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @retval The new state of DMA_IT (SET or RESET).
1157:.\stm32f4periph\src/stm32f4xx_dma.c ****   */
1158:.\stm32f4periph\src/stm32f4xx_dma.c **** ITStatus DMA_GetITStatus(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_IT)
1159:.\stm32f4periph\src/stm32f4xx_dma.c **** {
 849              		.loc 1 1159 0
 850              		.cfi_startproc
 851              		@ args = 0, pretend = 0, frame = 0
 852              		@ frame_needed = 0, uses_anonymous_args = 0
 853              	.LVL41:
1160:.\stm32f4periph\src/stm32f4xx_dma.c ****   ITStatus bitstatus = RESET;
1161:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMA_TypeDef* DMAy;
1162:.\stm32f4periph\src/stm32f4xx_dma.c ****   uint32_t tmpreg = 0, enablestatus = 0;
1163:.\stm32f4periph\src/stm32f4xx_dma.c **** 
1164:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Check the parameters */
1165:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
1166:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_GET_IT(DMA_IT));
1167:.\stm32f4periph\src/stm32f4xx_dma.c ****  
1168:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Determine the DMA to which belongs the stream */
1169:.\stm32f4periph\src/stm32f4xx_dma.c ****   if (DMAy_Streamx < DMA2_Stream0)
1170:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
1171:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* DMAy_Streamx belongs to DMA1 */
1172:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMAy = DMA1; 
 854              		.loc 1 1172 0
 855 02be 124B     		ldr	r3, .L94	@ tmp163,
 856 02c0 124A     		ldr	r2, .L94+4	@ tmp162,
1159:.\stm32f4periph\src/stm32f4xx_dma.c **** {
 857              		.loc 1 1159 0
 858 02c2 10B5     		push	{r4, lr}	@
 859              	.LCFI3:
 860              		.cfi_def_cfa_offset 8
 861              		.cfi_offset 4, -8
 862              		.cfi_offset 14, -4
 863              		.loc 1 1172 0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 37


 864 02c4 124C     		ldr	r4, .L94+8	@ tmp150,
 865 02c6 A042     		cmp	r0, r4	@ DMAy_Streamx, tmp150
 866 02c8 8CBF     		ite	hi	@
 867 02ca 1446     		movhi	r4, r2	@, DMAy, tmp162
 868 02cc 1C46     		movls	r4, r3	@, DMAy, tmp163
 869              	.LVL42:
1173:.\stm32f4periph\src/stm32f4xx_dma.c ****   } 
1174:.\stm32f4periph\src/stm32f4xx_dma.c ****   else 
1175:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
1176:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* DMAy_Streamx belongs to DMA2 */
1177:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMAy = DMA2; 
1178:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
1179:.\stm32f4periph\src/stm32f4xx_dma.c **** 
1180:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Check if the interrupt enable bit is in the CR or FCR register */
1181:.\stm32f4periph\src/stm32f4xx_dma.c ****   if ((DMA_IT & TRANSFER_IT_MASK) != (uint32_t)RESET)
 870              		.loc 1 1181 0
 871 02ce 21F0F023 		bic	r3, r1, #-268374016	@ tmp152, DMA_IT,
 872 02d2 23F0C313 		bic	r3, r3, #12779715	@ tmp151, tmp152,
 873 02d6 2BB1     		cbz	r3, .L87	@ tmp151,
 874              	.LVL43:
1182:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
1183:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Get the interrupt enable position mask in CR register */
1184:.\stm32f4periph\src/stm32f4xx_dma.c ****     tmpreg = (uint32_t)((DMA_IT >> 11) & TRANSFER_IT_ENABLE_MASK);   
1185:.\stm32f4periph\src/stm32f4xx_dma.c ****     
1186:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Check the enable bit in CR register */
1187:.\stm32f4periph\src/stm32f4xx_dma.c ****     enablestatus = (uint32_t)(DMAy_Streamx->CR & tmpreg);
 875              		.loc 1 1187 0
 876 02d8 0268     		ldr	r2, [r0, #0]	@ D.7400, DMAy_Streamx_8(D)->CR
1184:.\stm32f4periph\src/stm32f4xx_dma.c ****     tmpreg = (uint32_t)((DMA_IT >> 11) & TRANSFER_IT_ENABLE_MASK);   
 877              		.loc 1 1184 0
 878 02da 02F01E02 		and	r2, r2, #30	@ tmp153, D.7400,
 879              		.loc 1 1187 0
 880 02de 02EAD122 		and	r2, r2, r1, lsr #11	@, enablestatus, tmp153, DMA_IT,
 881              	.LVL44:
 882 02e2 02E0     		b	.L88	@
 883              	.LVL45:
 884              	.L87:
1188:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
1189:.\stm32f4periph\src/stm32f4xx_dma.c ****   else 
1190:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
1191:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Check the enable bit in FCR register */
1192:.\stm32f4periph\src/stm32f4xx_dma.c ****     enablestatus = (uint32_t)(DMAy_Streamx->FCR & DMA_IT_FE); 
 885              		.loc 1 1192 0
 886 02e4 4269     		ldr	r2, [r0, #20]	@ D.7402, DMAy_Streamx_8(D)->FCR
 887 02e6 02F08002 		and	r2, r2, #128	@ enablestatus, D.7402,
 888              	.LVL46:
 889              	.L88:
1193:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
1194:.\stm32f4periph\src/stm32f4xx_dma.c ****  
1195:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Check if the interrupt pending flag is in LISR or HISR */
1196:.\stm32f4periph\src/stm32f4xx_dma.c ****   if ((DMA_IT & HIGH_ISR_MASK) != (uint32_t)RESET)
 890              		.loc 1 1196 0
 891 02ea 8800     		lsls	r0, r1, #2	@, DMA_IT,
 892              	.LVL47:
1197:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
1198:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Get DMAy HISR register value */
1199:.\stm32f4periph\src/stm32f4xx_dma.c ****     tmpreg = DMAy->HISR ;
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 38


 893              		.loc 1 1199 0
 894 02ec 4CBF     		ite	mi
 895 02ee 6368     		ldrmi	r3, [r4, #4]	@ tmpreg, DMAy_2->HISR
 896              	.LVL48:
1200:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
1201:.\stm32f4periph\src/stm32f4xx_dma.c ****   else
1202:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
1203:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Get DMAy LISR register value */
1204:.\stm32f4periph\src/stm32f4xx_dma.c ****     tmpreg = DMAy->LISR ;
 897              		.loc 1 1204 0
 898 02f0 2368     		ldrpl	r3, [r4, #0]	@ tmpreg, DMAy_2->LISR
 899              	.LVL49:
1205:.\stm32f4periph\src/stm32f4xx_dma.c ****   } 
1206:.\stm32f4periph\src/stm32f4xx_dma.c **** 
1207:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* mask all reserved bits */
1208:.\stm32f4periph\src/stm32f4xx_dma.c ****   tmpreg &= (uint32_t)RESERVED_MASK;
 900              		.loc 1 1208 0
 901 02f2 21F0F021 		bic	r1, r1, #-268374016	@ tmp157, DMA_IT,
 902              	.LVL50:
 903 02f6 21F08210 		bic	r0, r1, #8519810	@ tmp156, tmp157,
1209:.\stm32f4periph\src/stm32f4xx_dma.c **** 
1210:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Check the status of the specified DMA interrupt */
1211:.\stm32f4periph\src/stm32f4xx_dma.c ****   if (((tmpreg & DMA_IT) != (uint32_t)RESET) && (enablestatus != (uint32_t)RESET))
 904              		.loc 1 1211 0
 905 02fa 1840     		ands	r0, r0, r3	@ tmp158, tmp156, tmpreg
 906 02fc 02D0     		beq	.L91	@,
1212:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
1213:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* DMA_IT is set */
1214:.\stm32f4periph\src/stm32f4xx_dma.c ****     bitstatus = SET;
 907              		.loc 1 1214 0 discriminator 1
 908 02fe 101C     		adds	r0, r2, #0	@ bitstatus, enablestatus,
 909 0300 18BF     		it	ne
 910 0302 0120     		movne	r0, #1	@ bitstatus,
 911              	.L91:
 912              	.LVL51:
1215:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
1216:.\stm32f4periph\src/stm32f4xx_dma.c ****   else
1217:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
1218:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* DMA_IT is reset */
1219:.\stm32f4periph\src/stm32f4xx_dma.c ****     bitstatus = RESET;
1220:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
1221:.\stm32f4periph\src/stm32f4xx_dma.c **** 
1222:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Return the DMA_IT status */
1223:.\stm32f4periph\src/stm32f4xx_dma.c ****   return  bitstatus;
1224:.\stm32f4periph\src/stm32f4xx_dma.c **** }
 913              		.loc 1 1224 0
 914 0304 10BD     		pop	{r4, pc}	@
 915              	.L95:
 916 0306 00BF     		.align	2
 917              	.L94:
 918 0308 00600240 		.word	1073897472
 919 030c 00640240 		.word	1073898496
 920 0310 0F640240 		.word	1073898511
 921              		.cfi_endproc
 922              	.LFE127:
 923              		.size	DMA_GetITStatus, .-DMA_GetITStatus
 924              		.align	1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 39


 925              		.global	DMA_ClearITPendingBit
 926              		.thumb
 927              		.thumb_func
 928              		.type	DMA_ClearITPendingBit, %function
 929              	DMA_ClearITPendingBit:
 930              	.LFB128:
1225:.\stm32f4periph\src/stm32f4xx_dma.c **** 
1226:.\stm32f4periph\src/stm32f4xx_dma.c **** /**
1227:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @brief  Clears the DMAy Streamx's interrupt pending bits.
1228:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
1229:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
1230:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @param  DMA_IT: specifies the DMA interrupt pending bit to clear.
1231:.\stm32f4periph\src/stm32f4xx_dma.c ****   *          This parameter can be any combination of the following values:
1232:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_IT_TCIFx:  Streamx transfer complete interrupt
1233:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_IT_HTIFx:  Streamx half transfer complete interrupt
1234:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_IT_TEIFx:  Streamx transfer error interrupt
1235:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_IT_DMEIFx: Streamx direct mode error interrupt
1236:.\stm32f4periph\src/stm32f4xx_dma.c ****   *            @arg DMA_IT_FEIFx:  Streamx FIFO error interrupt
1237:.\stm32f4periph\src/stm32f4xx_dma.c ****   *         Where x can be 0 to 7 to select the DMA Stream.
1238:.\stm32f4periph\src/stm32f4xx_dma.c ****   * @retval None
1239:.\stm32f4periph\src/stm32f4xx_dma.c ****   */
1240:.\stm32f4periph\src/stm32f4xx_dma.c **** void DMA_ClearITPendingBit(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_IT)
1241:.\stm32f4periph\src/stm32f4xx_dma.c **** {
 931              		.loc 1 1241 0
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 0
 934              		@ frame_needed = 0, uses_anonymous_args = 0
 935              	.LVL52:
 936 0314 10B5     		push	{r4, lr}	@
 937              	.LCFI4:
 938              		.cfi_def_cfa_offset 8
 939              		.cfi_offset 4, -8
 940              		.cfi_offset 14, -4
1242:.\stm32f4periph\src/stm32f4xx_dma.c ****   DMA_TypeDef* DMAy;
1243:.\stm32f4periph\src/stm32f4xx_dma.c **** 
1244:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Check the parameters */
1245:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
1246:.\stm32f4periph\src/stm32f4xx_dma.c ****   assert_param(IS_DMA_CLEAR_IT(DMA_IT));
1247:.\stm32f4periph\src/stm32f4xx_dma.c **** 
1248:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Determine the DMA to which belongs the stream */
1249:.\stm32f4periph\src/stm32f4xx_dma.c ****   if (DMAy_Streamx < DMA2_Stream0)
1250:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
1251:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* DMAy_Streamx belongs to DMA1 */
1252:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMAy = DMA1; 
 941              		.loc 1 1252 0
 942 0316 084B     		ldr	r3, .L101	@ tmp146,
 943 0318 084A     		ldr	r2, .L101+4	@ tmp145,
 944 031a 094C     		ldr	r4, .L101+8	@ tmp140,
 945 031c A042     		cmp	r0, r4	@ DMAy_Streamx, tmp140
 946 031e 8CBF     		ite	hi	@
 947 0320 1046     		movhi	r0, r2	@, DMAy, tmp145
 948 0322 1846     		movls	r0, r3	@, DMAy, tmp146
 949              	.LVL53:
1253:.\stm32f4periph\src/stm32f4xx_dma.c ****   } 
1254:.\stm32f4periph\src/stm32f4xx_dma.c ****   else 
1255:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
1256:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* DMAy_Streamx belongs to DMA2 */
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 40


1257:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMAy = DMA2; 
1258:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
1259:.\stm32f4periph\src/stm32f4xx_dma.c **** 
1260:.\stm32f4periph\src/stm32f4xx_dma.c ****   /* Check if LIFCR or HIFCR register is targeted */
1261:.\stm32f4periph\src/stm32f4xx_dma.c ****   if ((DMA_IT & HIGH_ISR_MASK) != (uint32_t)RESET)
 950              		.loc 1 1261 0
 951 0324 11F0005F 		tst	r1, #536870912	@ DMA_IT,
 952 0328 21F0F021 		bic	r1, r1, #-268374016	@ tmp144, DMA_IT,
 953              	.LVL54:
1262:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
1263:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Set DMAy HIFCR register clear interrupt bits */
1264:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMAy->HIFCR = (uint32_t)(DMA_IT & RESERVED_MASK);
 954              		.loc 1 1264 0
 955 032c 21F08211 		bic	r1, r1, #8519810	@ D.7391, tmp144,
 956 0330 14BF     		ite	ne
 957 0332 C160     		strne	r1, [r0, #12]	@ D.7391, DMAy_1->HIFCR
1265:.\stm32f4periph\src/stm32f4xx_dma.c ****   }
1266:.\stm32f4periph\src/stm32f4xx_dma.c ****   else 
1267:.\stm32f4periph\src/stm32f4xx_dma.c ****   {
1268:.\stm32f4periph\src/stm32f4xx_dma.c ****     /* Set DMAy LIFCR register clear interrupt bits */
1269:.\stm32f4periph\src/stm32f4xx_dma.c ****     DMAy->LIFCR = (uint32_t)(DMA_IT & RESERVED_MASK);
 958              		.loc 1 1269 0
 959 0334 8160     		streq	r1, [r0, #8]	@ D.7391, DMAy_1->LIFCR
 960 0336 10BD     		pop	{r4, pc}	@
 961              	.L102:
 962              		.align	2
 963              	.L101:
 964 0338 00600240 		.word	1073897472
 965 033c 00640240 		.word	1073898496
 966 0340 0F640240 		.word	1073898511
 967              		.cfi_endproc
 968              	.LFE128:
 969              		.size	DMA_ClearITPendingBit, .-DMA_ClearITPendingBit
 970              	.Letext0:
 971              		.file 2 "k:\\electronics\\gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/inclu
 972              		.file 3 ".\\inc/stm32f4xx.h"
 973              		.file 4 ".\\stm32f4periph\\inc/stm32f4xx_dma.h"
 974              		.file 5 ".\\inc/core_cm4.h"
 975              		.section	.debug_info,"",%progbits
 976              	.Ldebug_info0:
 977 0000 9B070000 		.4byte	0x79b
 978 0004 0200     		.2byte	0x2
 979 0006 00000000 		.4byte	.Ldebug_abbrev0
 980 000a 04       		.byte	0x4
 981 000b 01       		.uleb128 0x1
 982 000c B2020000 		.4byte	.LASF80
 983 0010 01       		.byte	0x1
 984 0011 F0020000 		.4byte	.LASF81
 985 0015 61040000 		.4byte	.LASF82
 986 0019 00000000 		.4byte	.Ltext0
 987 001d 44030000 		.4byte	.Letext0
 988 0021 00000000 		.4byte	.Ldebug_line0
 989 0025 02       		.uleb128 0x2
 990 0026 01       		.byte	0x1
 991 0027 06       		.byte	0x6
 992 0028 2E020000 		.4byte	.LASF0
 993 002c 02       		.uleb128 0x2
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 41


 994 002d 01       		.byte	0x1
 995 002e 08       		.byte	0x8
 996 002f 20020000 		.4byte	.LASF1
 997 0033 02       		.uleb128 0x2
 998 0034 02       		.byte	0x2
 999 0035 05       		.byte	0x5
 1000 0036 10010000 		.4byte	.LASF2
 1001 003a 03       		.uleb128 0x3
 1002 003b A4020000 		.4byte	.LASF4
 1003 003f 02       		.byte	0x2
 1004 0040 36       		.byte	0x36
 1005 0041 45000000 		.4byte	0x45
 1006 0045 02       		.uleb128 0x2
 1007 0046 02       		.byte	0x2
 1008 0047 07       		.byte	0x7
 1009 0048 D8020000 		.4byte	.LASF3
 1010 004c 03       		.uleb128 0x3
 1011 004d 21030000 		.4byte	.LASF5
 1012 0051 02       		.byte	0x2
 1013 0052 4F       		.byte	0x4f
 1014 0053 57000000 		.4byte	0x57
 1015 0057 02       		.uleb128 0x2
 1016 0058 04       		.byte	0x4
 1017 0059 05       		.byte	0x5
 1018 005a AC010000 		.4byte	.LASF6
 1019 005e 03       		.uleb128 0x3
 1020 005f 7E020000 		.4byte	.LASF7
 1021 0063 02       		.byte	0x2
 1022 0064 50       		.byte	0x50
 1023 0065 69000000 		.4byte	0x69
 1024 0069 02       		.uleb128 0x2
 1025 006a 04       		.byte	0x4
 1026 006b 07       		.byte	0x7
 1027 006c 8E030000 		.4byte	.LASF8
 1028 0070 02       		.uleb128 0x2
 1029 0071 08       		.byte	0x8
 1030 0072 05       		.byte	0x5
 1031 0073 3B010000 		.4byte	.LASF9
 1032 0077 02       		.uleb128 0x2
 1033 0078 08       		.byte	0x8
 1034 0079 07       		.byte	0x7
 1035 007a 55020000 		.4byte	.LASF10
 1036 007e 04       		.uleb128 0x4
 1037 007f 04       		.byte	0x4
 1038 0080 05       		.byte	0x5
 1039 0081 696E7400 		.ascii	"int\000"
 1040 0085 02       		.uleb128 0x2
 1041 0086 04       		.byte	0x4
 1042 0087 07       		.byte	0x7
 1043 0088 87020000 		.4byte	.LASF11
 1044 008c 02       		.uleb128 0x2
 1045 008d 04       		.byte	0x4
 1046 008e 07       		.byte	0x7
 1047 008f 50000000 		.4byte	.LASF12
 1048 0093 05       		.uleb128 0x5
 1049 0094 5E000000 		.4byte	0x5e
 1050 0098 05       		.uleb128 0x5
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 42


 1051 0099 4C000000 		.4byte	0x4c
 1052 009d 06       		.uleb128 0x6
 1053 009e 01       		.byte	0x1
 1054 009f 03       		.byte	0x3
 1055 00a0 1E01     		.2byte	0x11e
 1056 00a2 B3000000 		.4byte	0xb3
 1057 00a6 07       		.uleb128 0x7
 1058 00a7 0B040000 		.4byte	.LASF13
 1059 00ab 00       		.sleb128 0
 1060 00ac 08       		.uleb128 0x8
 1061 00ad 53455400 		.ascii	"SET\000"
 1062 00b1 01       		.sleb128 1
 1063 00b2 00       		.byte	0
 1064 00b3 09       		.uleb128 0x9
 1065 00b4 7B040000 		.4byte	.LASF14
 1066 00b8 03       		.byte	0x3
 1067 00b9 1E01     		.2byte	0x11e
 1068 00bb 9D000000 		.4byte	0x9d
 1069 00bf 09       		.uleb128 0x9
 1070 00c0 8B010000 		.4byte	.LASF15
 1071 00c4 03       		.byte	0x3
 1072 00c5 1E01     		.2byte	0x11e
 1073 00c7 9D000000 		.4byte	0x9d
 1074 00cb 06       		.uleb128 0x6
 1075 00cc 01       		.byte	0x1
 1076 00cd 03       		.byte	0x3
 1077 00ce 2001     		.2byte	0x120
 1078 00d0 E1000000 		.4byte	0xe1
 1079 00d4 07       		.uleb128 0x7
 1080 00d5 08010000 		.4byte	.LASF16
 1081 00d9 00       		.sleb128 0
 1082 00da 07       		.uleb128 0x7
 1083 00db 86040000 		.4byte	.LASF17
 1084 00df 01       		.sleb128 1
 1085 00e0 00       		.byte	0
 1086 00e1 09       		.uleb128 0x9
 1087 00e2 A5030000 		.4byte	.LASF18
 1088 00e6 03       		.byte	0x3
 1089 00e7 2001     		.2byte	0x120
 1090 00e9 CB000000 		.4byte	0xcb
 1091 00ed 0A       		.uleb128 0xa
 1092 00ee 18       		.byte	0x18
 1093 00ef 03       		.byte	0x3
 1094 00f0 D801     		.2byte	0x1d8
 1095 00f2 50010000 		.4byte	0x150
 1096 00f6 0B       		.uleb128 0xb
 1097 00f7 435200   		.ascii	"CR\000"
 1098 00fa 03       		.byte	0x3
 1099 00fb DA01     		.2byte	0x1da
 1100 00fd 93000000 		.4byte	0x93
 1101 0101 02       		.byte	0x2
 1102 0102 23       		.byte	0x23
 1103 0103 00       		.uleb128 0
 1104 0104 0C       		.uleb128 0xc
 1105 0105 A0030000 		.4byte	.LASF19
 1106 0109 03       		.byte	0x3
 1107 010a DB01     		.2byte	0x1db
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 43


 1108 010c 93000000 		.4byte	0x93
 1109 0110 02       		.byte	0x2
 1110 0111 23       		.byte	0x23
 1111 0112 04       		.uleb128 0x4
 1112 0113 0B       		.uleb128 0xb
 1113 0114 50415200 		.ascii	"PAR\000"
 1114 0118 03       		.byte	0x3
 1115 0119 DC01     		.2byte	0x1dc
 1116 011b 93000000 		.4byte	0x93
 1117 011f 02       		.byte	0x2
 1118 0120 23       		.byte	0x23
 1119 0121 08       		.uleb128 0x8
 1120 0122 0C       		.uleb128 0xc
 1121 0123 89030000 		.4byte	.LASF20
 1122 0127 03       		.byte	0x3
 1123 0128 DD01     		.2byte	0x1dd
 1124 012a 93000000 		.4byte	0x93
 1125 012e 02       		.byte	0x2
 1126 012f 23       		.byte	0x23
 1127 0130 0C       		.uleb128 0xc
 1128 0131 0C       		.uleb128 0xc
 1129 0132 EB020000 		.4byte	.LASF21
 1130 0136 03       		.byte	0x3
 1131 0137 DE01     		.2byte	0x1de
 1132 0139 93000000 		.4byte	0x93
 1133 013d 02       		.byte	0x2
 1134 013e 23       		.byte	0x23
 1135 013f 10       		.uleb128 0x10
 1136 0140 0B       		.uleb128 0xb
 1137 0141 46435200 		.ascii	"FCR\000"
 1138 0145 03       		.byte	0x3
 1139 0146 DF01     		.2byte	0x1df
 1140 0148 93000000 		.4byte	0x93
 1141 014c 02       		.byte	0x2
 1142 014d 23       		.byte	0x23
 1143 014e 14       		.uleb128 0x14
 1144 014f 00       		.byte	0
 1145 0150 09       		.uleb128 0x9
 1146 0151 1A000000 		.4byte	.LASF22
 1147 0155 03       		.byte	0x3
 1148 0156 E001     		.2byte	0x1e0
 1149 0158 ED000000 		.4byte	0xed
 1150 015c 0A       		.uleb128 0xa
 1151 015d 10       		.byte	0x10
 1152 015e 03       		.byte	0x3
 1153 015f E201     		.2byte	0x1e2
 1154 0161 A2010000 		.4byte	0x1a2
 1155 0165 0C       		.uleb128 0xc
 1156 0166 BE010000 		.4byte	.LASF23
 1157 016a 03       		.byte	0x3
 1158 016b E401     		.2byte	0x1e4
 1159 016d 93000000 		.4byte	0x93
 1160 0171 02       		.byte	0x2
 1161 0172 23       		.byte	0x23
 1162 0173 00       		.uleb128 0
 1163 0174 0C       		.uleb128 0xc
 1164 0175 AD020000 		.4byte	.LASF24
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 44


 1165 0179 03       		.byte	0x3
 1166 017a E501     		.2byte	0x1e5
 1167 017c 93000000 		.4byte	0x93
 1168 0180 02       		.byte	0x2
 1169 0181 23       		.byte	0x23
 1170 0182 04       		.uleb128 0x4
 1171 0183 0C       		.uleb128 0xc
 1172 0184 83030000 		.4byte	.LASF25
 1173 0188 03       		.byte	0x3
 1174 0189 E601     		.2byte	0x1e6
 1175 018b 93000000 		.4byte	0x93
 1176 018f 02       		.byte	0x2
 1177 0190 23       		.byte	0x23
 1178 0191 08       		.uleb128 0x8
 1179 0192 0C       		.uleb128 0xc
 1180 0193 35010000 		.4byte	.LASF26
 1181 0197 03       		.byte	0x3
 1182 0198 E701     		.2byte	0x1e7
 1183 019a 93000000 		.4byte	0x93
 1184 019e 02       		.byte	0x2
 1185 019f 23       		.byte	0x23
 1186 01a0 0C       		.uleb128 0xc
 1187 01a1 00       		.byte	0
 1188 01a2 09       		.uleb128 0x9
 1189 01a3 96000000 		.4byte	.LASF27
 1190 01a7 03       		.byte	0x3
 1191 01a8 E801     		.2byte	0x1e8
 1192 01aa 5C010000 		.4byte	0x15c
 1193 01ae 0D       		.uleb128 0xd
 1194 01af 3C       		.byte	0x3c
 1195 01b0 04       		.byte	0x4
 1196 01b1 36       		.byte	0x36
 1197 01b2 89020000 		.4byte	0x289
 1198 01b6 0E       		.uleb128 0xe
 1199 01b7 F0030000 		.4byte	.LASF28
 1200 01bb 04       		.byte	0x4
 1201 01bc 38       		.byte	0x38
 1202 01bd 5E000000 		.4byte	0x5e
 1203 01c1 02       		.byte	0x2
 1204 01c2 23       		.byte	0x23
 1205 01c3 00       		.uleb128 0
 1206 01c4 0E       		.uleb128 0xe
 1207 01c5 F1000000 		.4byte	.LASF29
 1208 01c9 04       		.byte	0x4
 1209 01ca 3B       		.byte	0x3b
 1210 01cb 5E000000 		.4byte	0x5e
 1211 01cf 02       		.byte	0x2
 1212 01d0 23       		.byte	0x23
 1213 01d1 04       		.uleb128 0x4
 1214 01d2 0E       		.uleb128 0xe
 1215 01d3 11040000 		.4byte	.LASF30
 1216 01d7 04       		.byte	0x4
 1217 01d8 3D       		.byte	0x3d
 1218 01d9 5E000000 		.4byte	0x5e
 1219 01dd 02       		.byte	0x2
 1220 01de 23       		.byte	0x23
 1221 01df 08       		.uleb128 0x8
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 45


 1222 01e0 0E       		.uleb128 0xe
 1223 01e1 E0000000 		.4byte	.LASF31
 1224 01e5 04       		.byte	0x4
 1225 01e6 41       		.byte	0x41
 1226 01e7 5E000000 		.4byte	0x5e
 1227 01eb 02       		.byte	0x2
 1228 01ec 23       		.byte	0x23
 1229 01ed 0C       		.uleb128 0xc
 1230 01ee 0E       		.uleb128 0xe
 1231 01ef 25040000 		.4byte	.LASF32
 1232 01f3 04       		.byte	0x4
 1233 01f4 45       		.byte	0x45
 1234 01f5 5E000000 		.4byte	0x5e
 1235 01f9 02       		.byte	0x2
 1236 01fa 23       		.byte	0x23
 1237 01fb 10       		.uleb128 0x10
 1238 01fc 0E       		.uleb128 0xe
 1239 01fd 79010000 		.4byte	.LASF33
 1240 0201 04       		.byte	0x4
 1241 0202 49       		.byte	0x49
 1242 0203 5E000000 		.4byte	0x5e
 1243 0207 02       		.byte	0x2
 1244 0208 23       		.byte	0x23
 1245 0209 14       		.uleb128 0x14
 1246 020a 0E       		.uleb128 0xe
 1247 020b 1A010000 		.4byte	.LASF34
 1248 020f 04       		.byte	0x4
 1249 0210 4C       		.byte	0x4c
 1250 0211 5E000000 		.4byte	0x5e
 1251 0215 02       		.byte	0x2
 1252 0216 23       		.byte	0x23
 1253 0217 18       		.uleb128 0x18
 1254 0218 0E       		.uleb128 0xe
 1255 0219 F9010000 		.4byte	.LASF35
 1256 021d 04       		.byte	0x4
 1257 021e 4F       		.byte	0x4f
 1258 021f 5E000000 		.4byte	0x5e
 1259 0223 02       		.byte	0x2
 1260 0224 23       		.byte	0x23
 1261 0225 1C       		.uleb128 0x1c
 1262 0226 0E       		.uleb128 0xe
 1263 0227 94040000 		.4byte	.LASF36
 1264 022b 04       		.byte	0x4
 1265 022c 52       		.byte	0x52
 1266 022d 5E000000 		.4byte	0x5e
 1267 0231 02       		.byte	0x2
 1268 0232 23       		.byte	0x23
 1269 0233 20       		.uleb128 0x20
 1270 0234 0E       		.uleb128 0xe
 1271 0235 34040000 		.4byte	.LASF37
 1272 0239 04       		.byte	0x4
 1273 023a 55       		.byte	0x55
 1274 023b 5E000000 		.4byte	0x5e
 1275 023f 02       		.byte	0x2
 1276 0240 23       		.byte	0x23
 1277 0241 24       		.uleb128 0x24
 1278 0242 0E       		.uleb128 0xe
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 46


 1279 0243 33000000 		.4byte	.LASF38
 1280 0247 04       		.byte	0x4
 1281 0248 5A       		.byte	0x5a
 1282 0249 5E000000 		.4byte	0x5e
 1283 024d 02       		.byte	0x2
 1284 024e 23       		.byte	0x23
 1285 024f 28       		.uleb128 0x28
 1286 0250 0E       		.uleb128 0xe
 1287 0251 D2030000 		.4byte	.LASF39
 1288 0255 04       		.byte	0x4
 1289 0256 5D       		.byte	0x5d
 1290 0257 5E000000 		.4byte	0x5e
 1291 025b 02       		.byte	0x2
 1292 025c 23       		.byte	0x23
 1293 025d 2C       		.uleb128 0x2c
 1294 025e 0E       		.uleb128 0xe
 1295 025f 6C020000 		.4byte	.LASF40
 1296 0263 04       		.byte	0x4
 1297 0264 62       		.byte	0x62
 1298 0265 5E000000 		.4byte	0x5e
 1299 0269 02       		.byte	0x2
 1300 026a 23       		.byte	0x23
 1301 026b 30       		.uleb128 0x30
 1302 026c 0E       		.uleb128 0xe
 1303 026d 40000000 		.4byte	.LASF41
 1304 0271 04       		.byte	0x4
 1305 0272 65       		.byte	0x65
 1306 0273 5E000000 		.4byte	0x5e
 1307 0277 02       		.byte	0x2
 1308 0278 23       		.byte	0x23
 1309 0279 34       		.uleb128 0x34
 1310 027a 0E       		.uleb128 0xe
 1311 027b 70000000 		.4byte	.LASF42
 1312 027f 04       		.byte	0x4
 1313 0280 6A       		.byte	0x6a
 1314 0281 5E000000 		.4byte	0x5e
 1315 0285 02       		.byte	0x2
 1316 0286 23       		.byte	0x23
 1317 0287 38       		.uleb128 0x38
 1318 0288 00       		.byte	0
 1319 0289 03       		.uleb128 0x3
 1320 028a 10020000 		.4byte	.LASF43
 1321 028e 04       		.byte	0x4
 1322 028f 6E       		.byte	0x6e
 1323 0290 AE010000 		.4byte	0x1ae
 1324 0294 0F       		.uleb128 0xf
 1325 0295 01       		.byte	0x1
 1326 0296 66030000 		.4byte	.LASF44
 1327 029a 01       		.byte	0x1
 1328 029b C2       		.byte	0xc2
 1329 029c 01       		.byte	0x1
 1330 029d 00000000 		.4byte	.LFB110
 1331 02a1 1C010000 		.4byte	.LFE110
 1332 02a5 02       		.byte	0x2
 1333 02a6 7D       		.byte	0x7d
 1334 02a7 00       		.sleb128 0
 1335 02a8 01       		.byte	0x1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 47


 1336 02a9 BB020000 		.4byte	0x2bb
 1337 02ad 10       		.uleb128 0x10
 1338 02ae D3000000 		.4byte	.LASF46
 1339 02b2 01       		.byte	0x1
 1340 02b3 C2       		.byte	0xc2
 1341 02b4 BB020000 		.4byte	0x2bb
 1342 02b8 01       		.byte	0x1
 1343 02b9 50       		.byte	0x50
 1344 02ba 00       		.byte	0
 1345 02bb 11       		.uleb128 0x11
 1346 02bc 04       		.byte	0x4
 1347 02bd 50010000 		.4byte	0x150
 1348 02c1 12       		.uleb128 0x12
 1349 02c2 01       		.byte	0x1
 1350 02c3 B5010000 		.4byte	.LASF45
 1351 02c7 01       		.byte	0x1
 1352 02c8 3D01     		.2byte	0x13d
 1353 02ca 01       		.byte	0x1
 1354 02cb 1C010000 		.4byte	.LFB111
 1355 02cf 70010000 		.4byte	.LFE111
 1356 02d3 00000000 		.4byte	.LLST0
 1357 02d7 01       		.byte	0x1
 1358 02d8 09030000 		.4byte	0x309
 1359 02dc 13       		.uleb128 0x13
 1360 02dd D3000000 		.4byte	.LASF46
 1361 02e1 01       		.byte	0x1
 1362 02e2 3D01     		.2byte	0x13d
 1363 02e4 BB020000 		.4byte	0x2bb
 1364 02e8 01       		.byte	0x1
 1365 02e9 50       		.byte	0x50
 1366 02ea 13       		.uleb128 0x13
 1367 02eb BE020000 		.4byte	.LASF47
 1368 02ef 01       		.byte	0x1
 1369 02f0 3D01     		.2byte	0x13d
 1370 02f2 09030000 		.4byte	0x309
 1371 02f6 01       		.byte	0x1
 1372 02f7 51       		.byte	0x51
 1373 02f8 14       		.uleb128 0x14
 1374 02f9 E8010000 		.4byte	.LASF66
 1375 02fd 01       		.byte	0x1
 1376 02fe 3F01     		.2byte	0x13f
 1377 0300 5E000000 		.4byte	0x5e
 1378 0304 20000000 		.4byte	.LLST1
 1379 0308 00       		.byte	0
 1380 0309 11       		.uleb128 0x11
 1381 030a 04       		.byte	0x4
 1382 030b 89020000 		.4byte	0x289
 1383 030f 15       		.uleb128 0x15
 1384 0310 01       		.byte	0x1
 1385 0311 61000000 		.4byte	.LASF48
 1386 0315 01       		.byte	0x1
 1387 0316 9101     		.2byte	0x191
 1388 0318 01       		.byte	0x1
 1389 0319 70010000 		.4byte	.LFB112
 1390 031d 92010000 		.4byte	.LFE112
 1391 0321 02       		.byte	0x2
 1392 0322 7D       		.byte	0x7d
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 48


 1393 0323 00       		.sleb128 0
 1394 0324 01       		.byte	0x1
 1395 0325 38030000 		.4byte	0x338
 1396 0329 13       		.uleb128 0x13
 1397 032a BE020000 		.4byte	.LASF47
 1398 032e 01       		.byte	0x1
 1399 032f 9101     		.2byte	0x191
 1400 0331 09030000 		.4byte	0x309
 1401 0335 01       		.byte	0x1
 1402 0336 50       		.byte	0x50
 1403 0337 00       		.byte	0
 1404 0338 15       		.uleb128 0x15
 1405 0339 01       		.byte	0x1
 1406 033a 12000000 		.4byte	.LASF49
 1407 033e 01       		.byte	0x1
 1408 033f DC01     		.2byte	0x1dc
 1409 0341 01       		.byte	0x1
 1410 0342 92010000 		.4byte	.LFB113
 1411 0346 A4010000 		.4byte	.LFE113
 1412 034a 02       		.byte	0x2
 1413 034b 7D       		.byte	0x7d
 1414 034c 00       		.sleb128 0
 1415 034d 01       		.byte	0x1
 1416 034e 6F030000 		.4byte	0x36f
 1417 0352 13       		.uleb128 0x13
 1418 0353 D3000000 		.4byte	.LASF46
 1419 0357 01       		.byte	0x1
 1420 0358 DC01     		.2byte	0x1dc
 1421 035a BB020000 		.4byte	0x2bb
 1422 035e 01       		.byte	0x1
 1423 035f 50       		.byte	0x50
 1424 0360 13       		.uleb128 0x13
 1425 0361 E8000000 		.4byte	.LASF50
 1426 0365 01       		.byte	0x1
 1427 0366 DC01     		.2byte	0x1dc
 1428 0368 E1000000 		.4byte	0xe1
 1429 036c 01       		.byte	0x1
 1430 036d 51       		.byte	0x51
 1431 036e 00       		.byte	0
 1432 036f 15       		.uleb128 0x15
 1433 0370 01       		.byte	0x1
 1434 0371 48030000 		.4byte	.LASF51
 1435 0375 01       		.byte	0x1
 1436 0376 0002     		.2byte	0x200
 1437 0378 01       		.byte	0x1
 1438 0379 A4010000 		.4byte	.LFB114
 1439 037d B6010000 		.4byte	.LFE114
 1440 0381 02       		.byte	0x2
 1441 0382 7D       		.byte	0x7d
 1442 0383 00       		.sleb128 0
 1443 0384 01       		.byte	0x1
 1444 0385 A6030000 		.4byte	0x3a6
 1445 0389 13       		.uleb128 0x13
 1446 038a D3000000 		.4byte	.LASF46
 1447 038e 01       		.byte	0x1
 1448 038f 0002     		.2byte	0x200
 1449 0391 BB020000 		.4byte	0x2bb
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 49


 1450 0395 01       		.byte	0x1
 1451 0396 50       		.byte	0x50
 1452 0397 13       		.uleb128 0x13
 1453 0398 CD020000 		.4byte	.LASF52
 1454 039c 01       		.byte	0x1
 1455 039d 0002     		.2byte	0x200
 1456 039f 5E000000 		.4byte	0x5e
 1457 03a3 01       		.byte	0x1
 1458 03a4 51       		.byte	0x51
 1459 03a5 00       		.byte	0
 1460 03a6 15       		.uleb128 0x15
 1461 03a7 01       		.byte	0x1
 1462 03a8 49010000 		.4byte	.LASF53
 1463 03ac 01       		.byte	0x1
 1464 03ad 2402     		.2byte	0x224
 1465 03af 01       		.byte	0x1
 1466 03b0 B6010000 		.4byte	.LFB115
 1467 03b4 C8010000 		.4byte	.LFE115
 1468 03b8 02       		.byte	0x2
 1469 03b9 7D       		.byte	0x7d
 1470 03ba 00       		.sleb128 0
 1471 03bb 01       		.byte	0x1
 1472 03bc DD030000 		.4byte	0x3dd
 1473 03c0 13       		.uleb128 0x13
 1474 03c1 D3000000 		.4byte	.LASF46
 1475 03c5 01       		.byte	0x1
 1476 03c6 2402     		.2byte	0x224
 1477 03c8 BB020000 		.4byte	0x2bb
 1478 03cc 01       		.byte	0x1
 1479 03cd 50       		.byte	0x50
 1480 03ce 13       		.uleb128 0x13
 1481 03cf 14030000 		.4byte	.LASF54
 1482 03d3 01       		.byte	0x1
 1483 03d4 2402     		.2byte	0x224
 1484 03d6 5E000000 		.4byte	0x5e
 1485 03da 01       		.byte	0x1
 1486 03db 51       		.byte	0x51
 1487 03dc 00       		.byte	0
 1488 03dd 15       		.uleb128 0x15
 1489 03de 01       		.byte	0x1
 1490 03df D1010000 		.4byte	.LASF55
 1491 03e3 01       		.byte	0x1
 1492 03e4 7802     		.2byte	0x278
 1493 03e6 01       		.byte	0x1
 1494 03e7 C8010000 		.4byte	.LFB116
 1495 03eb CC010000 		.4byte	.LFE116
 1496 03ef 02       		.byte	0x2
 1497 03f0 7D       		.byte	0x7d
 1498 03f1 00       		.sleb128 0
 1499 03f2 01       		.byte	0x1
 1500 03f3 14040000 		.4byte	0x414
 1501 03f7 13       		.uleb128 0x13
 1502 03f8 D3000000 		.4byte	.LASF46
 1503 03fc 01       		.byte	0x1
 1504 03fd 7802     		.2byte	0x278
 1505 03ff BB020000 		.4byte	0x2bb
 1506 0403 01       		.byte	0x1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 50


 1507 0404 50       		.byte	0x50
 1508 0405 13       		.uleb128 0x13
 1509 0406 59000000 		.4byte	.LASF56
 1510 040a 01       		.byte	0x1
 1511 040b 7802     		.2byte	0x278
 1512 040d 3A000000 		.4byte	0x3a
 1513 0411 01       		.byte	0x1
 1514 0412 51       		.byte	0x51
 1515 0413 00       		.byte	0
 1516 0414 16       		.uleb128 0x16
 1517 0415 01       		.byte	0x1
 1518 0416 3D040000 		.4byte	.LASF64
 1519 041a 01       		.byte	0x1
 1520 041b 8702     		.2byte	0x287
 1521 041d 01       		.byte	0x1
 1522 041e 3A000000 		.4byte	0x3a
 1523 0422 CC010000 		.4byte	.LFB117
 1524 0426 D2010000 		.4byte	.LFE117
 1525 042a 02       		.byte	0x2
 1526 042b 7D       		.byte	0x7d
 1527 042c 00       		.sleb128 0
 1528 042d 01       		.byte	0x1
 1529 042e 43040000 		.4byte	0x443
 1530 0432 17       		.uleb128 0x17
 1531 0433 D3000000 		.4byte	.LASF46
 1532 0437 01       		.byte	0x1
 1533 0438 8702     		.2byte	0x287
 1534 043a BB020000 		.4byte	0x2bb
 1535 043e 6C000000 		.4byte	.LLST2
 1536 0442 00       		.byte	0
 1537 0443 15       		.uleb128 0x15
 1538 0444 01       		.byte	0x1
 1539 0445 3A020000 		.4byte	.LASF57
 1540 0449 01       		.byte	0x1
 1541 044a D402     		.2byte	0x2d4
 1542 044c 01       		.byte	0x1
 1543 044d D2010000 		.4byte	.LFB118
 1544 0451 E6010000 		.4byte	.LFE118
 1545 0455 02       		.byte	0x2
 1546 0456 7D       		.byte	0x7d
 1547 0457 00       		.sleb128 0
 1548 0458 01       		.byte	0x1
 1549 0459 88040000 		.4byte	0x488
 1550 045d 13       		.uleb128 0x13
 1551 045e D3000000 		.4byte	.LASF46
 1552 0462 01       		.byte	0x1
 1553 0463 D402     		.2byte	0x2d4
 1554 0465 BB020000 		.4byte	0x2bb
 1555 0469 01       		.byte	0x1
 1556 046a 50       		.byte	0x50
 1557 046b 13       		.uleb128 0x13
 1558 046c C2030000 		.4byte	.LASF58
 1559 0470 01       		.byte	0x1
 1560 0471 D402     		.2byte	0x2d4
 1561 0473 5E000000 		.4byte	0x5e
 1562 0477 01       		.byte	0x1
 1563 0478 51       		.byte	0x51
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 51


 1564 0479 13       		.uleb128 0x13
 1565 047a 00000000 		.4byte	.LASF59
 1566 047e 01       		.byte	0x1
 1567 047f D502     		.2byte	0x2d5
 1568 0481 5E000000 		.4byte	0x5e
 1569 0485 01       		.byte	0x1
 1570 0486 52       		.byte	0x52
 1571 0487 00       		.byte	0
 1572 0488 15       		.uleb128 0x15
 1573 0489 01       		.byte	0x1
 1574 048a 94010000 		.4byte	.LASF60
 1575 048e 01       		.byte	0x1
 1576 048f F302     		.2byte	0x2f3
 1577 0491 01       		.byte	0x1
 1578 0492 E6010000 		.4byte	.LFB119
 1579 0496 F8010000 		.4byte	.LFE119
 1580 049a 02       		.byte	0x2
 1581 049b 7D       		.byte	0x7d
 1582 049c 00       		.sleb128 0
 1583 049d 01       		.byte	0x1
 1584 049e BF040000 		.4byte	0x4bf
 1585 04a2 13       		.uleb128 0x13
 1586 04a3 D3000000 		.4byte	.LASF46
 1587 04a7 01       		.byte	0x1
 1588 04a8 F302     		.2byte	0x2f3
 1589 04aa BB020000 		.4byte	0x2bb
 1590 04ae 01       		.byte	0x1
 1591 04af 50       		.byte	0x50
 1592 04b0 13       		.uleb128 0x13
 1593 04b1 E8000000 		.4byte	.LASF50
 1594 04b5 01       		.byte	0x1
 1595 04b6 F302     		.2byte	0x2f3
 1596 04b8 E1000000 		.4byte	0xe1
 1597 04bc 01       		.byte	0x1
 1598 04bd 51       		.byte	0x51
 1599 04be 00       		.byte	0
 1600 04bf 15       		.uleb128 0x15
 1601 04c0 01       		.byte	0x1
 1602 04c1 62010000 		.4byte	.LASF61
 1603 04c5 01       		.byte	0x1
 1604 04c6 1C03     		.2byte	0x31c
 1605 04c8 01       		.byte	0x1
 1606 04c9 F8010000 		.4byte	.LFB120
 1607 04cd 02020000 		.4byte	.LFE120
 1608 04d1 02       		.byte	0x2
 1609 04d2 7D       		.byte	0x7d
 1610 04d3 00       		.sleb128 0
 1611 04d4 01       		.byte	0x1
 1612 04d5 04050000 		.4byte	0x504
 1613 04d9 13       		.uleb128 0x13
 1614 04da D3000000 		.4byte	.LASF46
 1615 04de 01       		.byte	0x1
 1616 04df 1C03     		.2byte	0x31c
 1617 04e1 BB020000 		.4byte	0x2bb
 1618 04e5 01       		.byte	0x1
 1619 04e6 50       		.byte	0x50
 1620 04e7 13       		.uleb128 0x13
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 52


 1621 04e8 FC030000 		.4byte	.LASF62
 1622 04ec 01       		.byte	0x1
 1623 04ed 1C03     		.2byte	0x31c
 1624 04ef 5E000000 		.4byte	0x5e
 1625 04f3 01       		.byte	0x1
 1626 04f4 51       		.byte	0x51
 1627 04f5 13       		.uleb128 0x13
 1628 04f6 BD000000 		.4byte	.LASF63
 1629 04fa 01       		.byte	0x1
 1630 04fb 1D03     		.2byte	0x31d
 1631 04fd 5E000000 		.4byte	0x5e
 1632 0501 01       		.byte	0x1
 1633 0502 52       		.byte	0x52
 1634 0503 00       		.byte	0
 1635 0504 16       		.uleb128 0x16
 1636 0505 01       		.byte	0x1
 1637 0506 A2000000 		.4byte	.LASF65
 1638 050a 01       		.byte	0x1
 1639 050b 3603     		.2byte	0x336
 1640 050d 01       		.byte	0x1
 1641 050e 5E000000 		.4byte	0x5e
 1642 0512 02020000 		.4byte	.LFB121
 1643 0516 0A020000 		.4byte	.LFE121
 1644 051a 02       		.byte	0x2
 1645 051b 7D       		.byte	0x7d
 1646 051c 00       		.sleb128 0
 1647 051d 01       		.byte	0x1
 1648 051e 43050000 		.4byte	0x543
 1649 0522 17       		.uleb128 0x17
 1650 0523 D3000000 		.4byte	.LASF46
 1651 0527 01       		.byte	0x1
 1652 0528 3603     		.2byte	0x336
 1653 052a BB020000 		.4byte	0x2bb
 1654 052e 8D000000 		.4byte	.LLST3
 1655 0532 18       		.uleb128 0x18
 1656 0533 746D7000 		.ascii	"tmp\000"
 1657 0537 01       		.byte	0x1
 1658 0538 3803     		.2byte	0x338
 1659 053a 5E000000 		.4byte	0x5e
 1660 053e AE000000 		.4byte	.LLST4
 1661 0542 00       		.byte	0
 1662 0543 16       		.uleb128 0x16
 1663 0544 01       		.byte	0x1
 1664 0545 DF030000 		.4byte	.LASF67
 1665 0549 01       		.byte	0x1
 1666 054a A303     		.2byte	0x3a3
 1667 054c 01       		.byte	0x1
 1668 054d E1000000 		.4byte	0xe1
 1669 0551 0A020000 		.4byte	.LFB122
 1670 0555 12020000 		.4byte	.LFE122
 1671 0559 02       		.byte	0x2
 1672 055a 7D       		.byte	0x7d
 1673 055b 00       		.sleb128 0
 1674 055c 01       		.byte	0x1
 1675 055d 82050000 		.4byte	0x582
 1676 0561 17       		.uleb128 0x17
 1677 0562 D3000000 		.4byte	.LASF46
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 53


 1678 0566 01       		.byte	0x1
 1679 0567 A303     		.2byte	0x3a3
 1680 0569 BB020000 		.4byte	0x2bb
 1681 056d D8000000 		.4byte	.LLST5
 1682 0571 14       		.uleb128 0x14
 1683 0572 2D000000 		.4byte	.LASF68
 1684 0576 01       		.byte	0x1
 1685 0577 A503     		.2byte	0x3a5
 1686 0579 E1000000 		.4byte	0xe1
 1687 057d F9000000 		.4byte	.LLST6
 1688 0581 00       		.byte	0
 1689 0582 16       		.uleb128 0x16
 1690 0583 01       		.byte	0x1
 1691 0584 84000000 		.4byte	.LASF69
 1692 0588 01       		.byte	0x1
 1693 0589 C503     		.2byte	0x3c5
 1694 058b 01       		.byte	0x1
 1695 058c 5E000000 		.4byte	0x5e
 1696 0590 12020000 		.4byte	.LFB123
 1697 0594 1A020000 		.4byte	.LFE123
 1698 0598 02       		.byte	0x2
 1699 0599 7D       		.byte	0x7d
 1700 059a 00       		.sleb128 0
 1701 059b 01       		.byte	0x1
 1702 059c C1050000 		.4byte	0x5c1
 1703 05a0 17       		.uleb128 0x17
 1704 05a1 D3000000 		.4byte	.LASF46
 1705 05a5 01       		.byte	0x1
 1706 05a6 C503     		.2byte	0x3c5
 1707 05a8 BB020000 		.4byte	0x2bb
 1708 05ac 1C010000 		.4byte	.LLST7
 1709 05b0 14       		.uleb128 0x14
 1710 05b1 E8010000 		.4byte	.LASF66
 1711 05b5 01       		.byte	0x1
 1712 05b6 C703     		.2byte	0x3c7
 1713 05b8 5E000000 		.4byte	0x5e
 1714 05bc 3D010000 		.4byte	.LLST8
 1715 05c0 00       		.byte	0
 1716 05c1 19       		.uleb128 0x19
 1717 05c2 01       		.byte	0x1
 1718 05c3 71030000 		.4byte	.LASF70
 1719 05c7 01       		.byte	0x1
 1720 05c8 E003     		.2byte	0x3e0
 1721 05ca 01       		.byte	0x1
 1722 05cb B3000000 		.4byte	0xb3
 1723 05cf 1A020000 		.4byte	.LFB124
 1724 05d3 50020000 		.4byte	.LFE124
 1725 05d7 6C010000 		.4byte	.LLST9
 1726 05db 01       		.byte	0x1
 1727 05dc 31060000 		.4byte	0x631
 1728 05e0 17       		.uleb128 0x17
 1729 05e1 D3000000 		.4byte	.LASF46
 1730 05e5 01       		.byte	0x1
 1731 05e6 E003     		.2byte	0x3e0
 1732 05e8 BB020000 		.4byte	0x2bb
 1733 05ec 8C010000 		.4byte	.LLST10
 1734 05f0 17       		.uleb128 0x17
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 54


 1735 05f1 29030000 		.4byte	.LASF71
 1736 05f5 01       		.byte	0x1
 1737 05f6 E003     		.2byte	0x3e0
 1738 05f8 5E000000 		.4byte	0x5e
 1739 05fc AD010000 		.4byte	.LLST11
 1740 0600 14       		.uleb128 0x14
 1741 0601 EF010000 		.4byte	.LASF72
 1742 0605 01       		.byte	0x1
 1743 0606 E203     		.2byte	0x3e2
 1744 0608 B3000000 		.4byte	0xb3
 1745 060c CE010000 		.4byte	.LLST12
 1746 0610 14       		.uleb128 0x14
 1747 0611 CE000000 		.4byte	.LASF73
 1748 0615 01       		.byte	0x1
 1749 0616 E303     		.2byte	0x3e3
 1750 0618 31060000 		.4byte	0x631
 1751 061c 13020000 		.4byte	.LLST13
 1752 0620 14       		.uleb128 0x14
 1753 0621 E8010000 		.4byte	.LASF66
 1754 0625 01       		.byte	0x1
 1755 0626 E403     		.2byte	0x3e4
 1756 0628 5E000000 		.4byte	0x5e
 1757 062c 4B020000 		.4byte	.LLST14
 1758 0630 00       		.byte	0
 1759 0631 11       		.uleb128 0x11
 1760 0632 04       		.byte	0x4
 1761 0633 A2010000 		.4byte	0x1a2
 1762 0637 12       		.uleb128 0x12
 1763 0638 01       		.byte	0x1
 1764 0639 C3010000 		.4byte	.LASF74
 1765 063d 01       		.byte	0x1
 1766 063e 2304     		.2byte	0x423
 1767 0640 01       		.byte	0x1
 1768 0641 50020000 		.4byte	.LFB125
 1769 0645 80020000 		.4byte	.LFE125
 1770 0649 7D020000 		.4byte	.LLST15
 1771 064d 01       		.byte	0x1
 1772 064e 81060000 		.4byte	0x681
 1773 0652 17       		.uleb128 0x17
 1774 0653 D3000000 		.4byte	.LASF46
 1775 0657 01       		.byte	0x1
 1776 0658 2304     		.2byte	0x423
 1777 065a BB020000 		.4byte	0x2bb
 1778 065e 9D020000 		.4byte	.LLST16
 1779 0662 17       		.uleb128 0x17
 1780 0663 29030000 		.4byte	.LASF71
 1781 0667 01       		.byte	0x1
 1782 0668 2304     		.2byte	0x423
 1783 066a 5E000000 		.4byte	0x5e
 1784 066e BE020000 		.4byte	.LLST17
 1785 0672 1A       		.uleb128 0x1a
 1786 0673 CE000000 		.4byte	.LASF73
 1787 0677 01       		.byte	0x1
 1788 0678 2504     		.2byte	0x425
 1789 067a 31060000 		.4byte	0x631
 1790 067e 01       		.byte	0x1
 1791 067f 50       		.byte	0x50
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 55


 1792 0680 00       		.byte	0
 1793 0681 15       		.uleb128 0x15
 1794 0682 01       		.byte	0x1
 1795 0683 54040000 		.4byte	.LASF75
 1796 0687 01       		.byte	0x1
 1797 0688 5204     		.2byte	0x452
 1798 068a 01       		.byte	0x1
 1799 068b 80020000 		.4byte	.LFB126
 1800 068f BE020000 		.4byte	.LFE126
 1801 0693 02       		.byte	0x2
 1802 0694 7D       		.byte	0x7d
 1803 0695 00       		.sleb128 0
 1804 0696 01       		.byte	0x1
 1805 0697 C8060000 		.4byte	0x6c8
 1806 069b 13       		.uleb128 0x13
 1807 069c D3000000 		.4byte	.LASF46
 1808 06a0 01       		.byte	0x1
 1809 06a1 5204     		.2byte	0x452
 1810 06a3 BB020000 		.4byte	0x2bb
 1811 06a7 01       		.byte	0x1
 1812 06a8 50       		.byte	0x50
 1813 06a9 17       		.uleb128 0x17
 1814 06aa 8D040000 		.4byte	.LASF76
 1815 06ae 01       		.byte	0x1
 1816 06af 5204     		.2byte	0x452
 1817 06b1 5E000000 		.4byte	0x5e
 1818 06b5 DF020000 		.4byte	.LLST18
 1819 06b9 13       		.uleb128 0x13
 1820 06ba E8000000 		.4byte	.LASF50
 1821 06be 01       		.byte	0x1
 1822 06bf 5204     		.2byte	0x452
 1823 06c1 E1000000 		.4byte	0xe1
 1824 06c5 01       		.byte	0x1
 1825 06c6 52       		.byte	0x52
 1826 06c7 00       		.byte	0
 1827 06c8 19       		.uleb128 0x19
 1828 06c9 01       		.byte	0x1
 1829 06ca 94020000 		.4byte	.LASF77
 1830 06ce 01       		.byte	0x1
 1831 06cf 8604     		.2byte	0x486
 1832 06d1 01       		.byte	0x1
 1833 06d2 BF000000 		.4byte	0xbf
 1834 06d6 BE020000 		.4byte	.LFB127
 1835 06da 14030000 		.4byte	.LFE127
 1836 06de 19030000 		.4byte	.LLST19
 1837 06e2 01       		.byte	0x1
 1838 06e3 46070000 		.4byte	0x746
 1839 06e7 17       		.uleb128 0x17
 1840 06e8 D3000000 		.4byte	.LASF46
 1841 06ec 01       		.byte	0x1
 1842 06ed 8604     		.2byte	0x486
 1843 06ef BB020000 		.4byte	0x2bb
 1844 06f3 39030000 		.4byte	.LLST20
 1845 06f7 17       		.uleb128 0x17
 1846 06f8 8D040000 		.4byte	.LASF76
 1847 06fc 01       		.byte	0x1
 1848 06fd 8604     		.2byte	0x486
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 56


 1849 06ff 5E000000 		.4byte	0x5e
 1850 0703 5A030000 		.4byte	.LLST21
 1851 0707 14       		.uleb128 0x14
 1852 0708 EF010000 		.4byte	.LASF72
 1853 070c 01       		.byte	0x1
 1854 070d 8804     		.2byte	0x488
 1855 070f BF000000 		.4byte	0xbf
 1856 0713 7B030000 		.4byte	.LLST22
 1857 0717 1A       		.uleb128 0x1a
 1858 0718 CE000000 		.4byte	.LASF73
 1859 071c 01       		.byte	0x1
 1860 071d 8904     		.2byte	0x489
 1861 071f 31060000 		.4byte	0x631
 1862 0723 01       		.byte	0x1
 1863 0724 54       		.byte	0x54
 1864 0725 14       		.uleb128 0x14
 1865 0726 E8010000 		.4byte	.LASF66
 1866 072a 01       		.byte	0x1
 1867 072b 8A04     		.2byte	0x48a
 1868 072d 5E000000 		.4byte	0x5e
 1869 0731 9A030000 		.4byte	.LLST23
 1870 0735 14       		.uleb128 0x14
 1871 0736 28010000 		.4byte	.LASF78
 1872 073a 01       		.byte	0x1
 1873 073b 8A04     		.2byte	0x48a
 1874 073d 5E000000 		.4byte	0x5e
 1875 0741 E9030000 		.4byte	.LLST24
 1876 0745 00       		.byte	0
 1877 0746 12       		.uleb128 0x12
 1878 0747 01       		.byte	0x1
 1879 0748 32030000 		.4byte	.LASF79
 1880 074c 01       		.byte	0x1
 1881 074d D804     		.2byte	0x4d8
 1882 074f 01       		.byte	0x1
 1883 0750 14030000 		.4byte	.LFB128
 1884 0754 44030000 		.4byte	.LFE128
 1885 0758 1F040000 		.4byte	.LLST25
 1886 075c 01       		.byte	0x1
 1887 075d 90070000 		.4byte	0x790
 1888 0761 17       		.uleb128 0x17
 1889 0762 D3000000 		.4byte	.LASF46
 1890 0766 01       		.byte	0x1
 1891 0767 D804     		.2byte	0x4d8
 1892 0769 BB020000 		.4byte	0x2bb
 1893 076d 3F040000 		.4byte	.LLST26
 1894 0771 17       		.uleb128 0x17
 1895 0772 8D040000 		.4byte	.LASF76
 1896 0776 01       		.byte	0x1
 1897 0777 D804     		.2byte	0x4d8
 1898 0779 5E000000 		.4byte	0x5e
 1899 077d 60040000 		.4byte	.LLST27
 1900 0781 1A       		.uleb128 0x1a
 1901 0782 CE000000 		.4byte	.LASF73
 1902 0786 01       		.byte	0x1
 1903 0787 DA04     		.2byte	0x4da
 1904 0789 31060000 		.4byte	0x631
 1905 078d 01       		.byte	0x1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 57


 1906 078e 50       		.byte	0x50
 1907 078f 00       		.byte	0
 1908 0790 1B       		.uleb128 0x1b
 1909 0791 B5030000 		.4byte	.LASF83
 1910 0795 05       		.byte	0x5
 1911 0796 1A05     		.2byte	0x51a
 1912 0798 98000000 		.4byte	0x98
 1913 079c 01       		.byte	0x1
 1914 079d 01       		.byte	0x1
 1915 079e 00       		.byte	0
 1916              		.section	.debug_abbrev,"",%progbits
 1917              	.Ldebug_abbrev0:
 1918 0000 01       		.uleb128 0x1
 1919 0001 11       		.uleb128 0x11
 1920 0002 01       		.byte	0x1
 1921 0003 25       		.uleb128 0x25
 1922 0004 0E       		.uleb128 0xe
 1923 0005 13       		.uleb128 0x13
 1924 0006 0B       		.uleb128 0xb
 1925 0007 03       		.uleb128 0x3
 1926 0008 0E       		.uleb128 0xe
 1927 0009 1B       		.uleb128 0x1b
 1928 000a 0E       		.uleb128 0xe
 1929 000b 11       		.uleb128 0x11
 1930 000c 01       		.uleb128 0x1
 1931 000d 12       		.uleb128 0x12
 1932 000e 01       		.uleb128 0x1
 1933 000f 10       		.uleb128 0x10
 1934 0010 06       		.uleb128 0x6
 1935 0011 00       		.byte	0
 1936 0012 00       		.byte	0
 1937 0013 02       		.uleb128 0x2
 1938 0014 24       		.uleb128 0x24
 1939 0015 00       		.byte	0
 1940 0016 0B       		.uleb128 0xb
 1941 0017 0B       		.uleb128 0xb
 1942 0018 3E       		.uleb128 0x3e
 1943 0019 0B       		.uleb128 0xb
 1944 001a 03       		.uleb128 0x3
 1945 001b 0E       		.uleb128 0xe
 1946 001c 00       		.byte	0
 1947 001d 00       		.byte	0
 1948 001e 03       		.uleb128 0x3
 1949 001f 16       		.uleb128 0x16
 1950 0020 00       		.byte	0
 1951 0021 03       		.uleb128 0x3
 1952 0022 0E       		.uleb128 0xe
 1953 0023 3A       		.uleb128 0x3a
 1954 0024 0B       		.uleb128 0xb
 1955 0025 3B       		.uleb128 0x3b
 1956 0026 0B       		.uleb128 0xb
 1957 0027 49       		.uleb128 0x49
 1958 0028 13       		.uleb128 0x13
 1959 0029 00       		.byte	0
 1960 002a 00       		.byte	0
 1961 002b 04       		.uleb128 0x4
 1962 002c 24       		.uleb128 0x24
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 58


 1963 002d 00       		.byte	0
 1964 002e 0B       		.uleb128 0xb
 1965 002f 0B       		.uleb128 0xb
 1966 0030 3E       		.uleb128 0x3e
 1967 0031 0B       		.uleb128 0xb
 1968 0032 03       		.uleb128 0x3
 1969 0033 08       		.uleb128 0x8
 1970 0034 00       		.byte	0
 1971 0035 00       		.byte	0
 1972 0036 05       		.uleb128 0x5
 1973 0037 35       		.uleb128 0x35
 1974 0038 00       		.byte	0
 1975 0039 49       		.uleb128 0x49
 1976 003a 13       		.uleb128 0x13
 1977 003b 00       		.byte	0
 1978 003c 00       		.byte	0
 1979 003d 06       		.uleb128 0x6
 1980 003e 04       		.uleb128 0x4
 1981 003f 01       		.byte	0x1
 1982 0040 0B       		.uleb128 0xb
 1983 0041 0B       		.uleb128 0xb
 1984 0042 3A       		.uleb128 0x3a
 1985 0043 0B       		.uleb128 0xb
 1986 0044 3B       		.uleb128 0x3b
 1987 0045 05       		.uleb128 0x5
 1988 0046 01       		.uleb128 0x1
 1989 0047 13       		.uleb128 0x13
 1990 0048 00       		.byte	0
 1991 0049 00       		.byte	0
 1992 004a 07       		.uleb128 0x7
 1993 004b 28       		.uleb128 0x28
 1994 004c 00       		.byte	0
 1995 004d 03       		.uleb128 0x3
 1996 004e 0E       		.uleb128 0xe
 1997 004f 1C       		.uleb128 0x1c
 1998 0050 0D       		.uleb128 0xd
 1999 0051 00       		.byte	0
 2000 0052 00       		.byte	0
 2001 0053 08       		.uleb128 0x8
 2002 0054 28       		.uleb128 0x28
 2003 0055 00       		.byte	0
 2004 0056 03       		.uleb128 0x3
 2005 0057 08       		.uleb128 0x8
 2006 0058 1C       		.uleb128 0x1c
 2007 0059 0D       		.uleb128 0xd
 2008 005a 00       		.byte	0
 2009 005b 00       		.byte	0
 2010 005c 09       		.uleb128 0x9
 2011 005d 16       		.uleb128 0x16
 2012 005e 00       		.byte	0
 2013 005f 03       		.uleb128 0x3
 2014 0060 0E       		.uleb128 0xe
 2015 0061 3A       		.uleb128 0x3a
 2016 0062 0B       		.uleb128 0xb
 2017 0063 3B       		.uleb128 0x3b
 2018 0064 05       		.uleb128 0x5
 2019 0065 49       		.uleb128 0x49
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 59


 2020 0066 13       		.uleb128 0x13
 2021 0067 00       		.byte	0
 2022 0068 00       		.byte	0
 2023 0069 0A       		.uleb128 0xa
 2024 006a 13       		.uleb128 0x13
 2025 006b 01       		.byte	0x1
 2026 006c 0B       		.uleb128 0xb
 2027 006d 0B       		.uleb128 0xb
 2028 006e 3A       		.uleb128 0x3a
 2029 006f 0B       		.uleb128 0xb
 2030 0070 3B       		.uleb128 0x3b
 2031 0071 05       		.uleb128 0x5
 2032 0072 01       		.uleb128 0x1
 2033 0073 13       		.uleb128 0x13
 2034 0074 00       		.byte	0
 2035 0075 00       		.byte	0
 2036 0076 0B       		.uleb128 0xb
 2037 0077 0D       		.uleb128 0xd
 2038 0078 00       		.byte	0
 2039 0079 03       		.uleb128 0x3
 2040 007a 08       		.uleb128 0x8
 2041 007b 3A       		.uleb128 0x3a
 2042 007c 0B       		.uleb128 0xb
 2043 007d 3B       		.uleb128 0x3b
 2044 007e 05       		.uleb128 0x5
 2045 007f 49       		.uleb128 0x49
 2046 0080 13       		.uleb128 0x13
 2047 0081 38       		.uleb128 0x38
 2048 0082 0A       		.uleb128 0xa
 2049 0083 00       		.byte	0
 2050 0084 00       		.byte	0
 2051 0085 0C       		.uleb128 0xc
 2052 0086 0D       		.uleb128 0xd
 2053 0087 00       		.byte	0
 2054 0088 03       		.uleb128 0x3
 2055 0089 0E       		.uleb128 0xe
 2056 008a 3A       		.uleb128 0x3a
 2057 008b 0B       		.uleb128 0xb
 2058 008c 3B       		.uleb128 0x3b
 2059 008d 05       		.uleb128 0x5
 2060 008e 49       		.uleb128 0x49
 2061 008f 13       		.uleb128 0x13
 2062 0090 38       		.uleb128 0x38
 2063 0091 0A       		.uleb128 0xa
 2064 0092 00       		.byte	0
 2065 0093 00       		.byte	0
 2066 0094 0D       		.uleb128 0xd
 2067 0095 13       		.uleb128 0x13
 2068 0096 01       		.byte	0x1
 2069 0097 0B       		.uleb128 0xb
 2070 0098 0B       		.uleb128 0xb
 2071 0099 3A       		.uleb128 0x3a
 2072 009a 0B       		.uleb128 0xb
 2073 009b 3B       		.uleb128 0x3b
 2074 009c 0B       		.uleb128 0xb
 2075 009d 01       		.uleb128 0x1
 2076 009e 13       		.uleb128 0x13
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 60


 2077 009f 00       		.byte	0
 2078 00a0 00       		.byte	0
 2079 00a1 0E       		.uleb128 0xe
 2080 00a2 0D       		.uleb128 0xd
 2081 00a3 00       		.byte	0
 2082 00a4 03       		.uleb128 0x3
 2083 00a5 0E       		.uleb128 0xe
 2084 00a6 3A       		.uleb128 0x3a
 2085 00a7 0B       		.uleb128 0xb
 2086 00a8 3B       		.uleb128 0x3b
 2087 00a9 0B       		.uleb128 0xb
 2088 00aa 49       		.uleb128 0x49
 2089 00ab 13       		.uleb128 0x13
 2090 00ac 38       		.uleb128 0x38
 2091 00ad 0A       		.uleb128 0xa
 2092 00ae 00       		.byte	0
 2093 00af 00       		.byte	0
 2094 00b0 0F       		.uleb128 0xf
 2095 00b1 2E       		.uleb128 0x2e
 2096 00b2 01       		.byte	0x1
 2097 00b3 3F       		.uleb128 0x3f
 2098 00b4 0C       		.uleb128 0xc
 2099 00b5 03       		.uleb128 0x3
 2100 00b6 0E       		.uleb128 0xe
 2101 00b7 3A       		.uleb128 0x3a
 2102 00b8 0B       		.uleb128 0xb
 2103 00b9 3B       		.uleb128 0x3b
 2104 00ba 0B       		.uleb128 0xb
 2105 00bb 27       		.uleb128 0x27
 2106 00bc 0C       		.uleb128 0xc
 2107 00bd 11       		.uleb128 0x11
 2108 00be 01       		.uleb128 0x1
 2109 00bf 12       		.uleb128 0x12
 2110 00c0 01       		.uleb128 0x1
 2111 00c1 40       		.uleb128 0x40
 2112 00c2 0A       		.uleb128 0xa
 2113 00c3 9742     		.uleb128 0x2117
 2114 00c5 0C       		.uleb128 0xc
 2115 00c6 01       		.uleb128 0x1
 2116 00c7 13       		.uleb128 0x13
 2117 00c8 00       		.byte	0
 2118 00c9 00       		.byte	0
 2119 00ca 10       		.uleb128 0x10
 2120 00cb 05       		.uleb128 0x5
 2121 00cc 00       		.byte	0
 2122 00cd 03       		.uleb128 0x3
 2123 00ce 0E       		.uleb128 0xe
 2124 00cf 3A       		.uleb128 0x3a
 2125 00d0 0B       		.uleb128 0xb
 2126 00d1 3B       		.uleb128 0x3b
 2127 00d2 0B       		.uleb128 0xb
 2128 00d3 49       		.uleb128 0x49
 2129 00d4 13       		.uleb128 0x13
 2130 00d5 02       		.uleb128 0x2
 2131 00d6 0A       		.uleb128 0xa
 2132 00d7 00       		.byte	0
 2133 00d8 00       		.byte	0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 61


 2134 00d9 11       		.uleb128 0x11
 2135 00da 0F       		.uleb128 0xf
 2136 00db 00       		.byte	0
 2137 00dc 0B       		.uleb128 0xb
 2138 00dd 0B       		.uleb128 0xb
 2139 00de 49       		.uleb128 0x49
 2140 00df 13       		.uleb128 0x13
 2141 00e0 00       		.byte	0
 2142 00e1 00       		.byte	0
 2143 00e2 12       		.uleb128 0x12
 2144 00e3 2E       		.uleb128 0x2e
 2145 00e4 01       		.byte	0x1
 2146 00e5 3F       		.uleb128 0x3f
 2147 00e6 0C       		.uleb128 0xc
 2148 00e7 03       		.uleb128 0x3
 2149 00e8 0E       		.uleb128 0xe
 2150 00e9 3A       		.uleb128 0x3a
 2151 00ea 0B       		.uleb128 0xb
 2152 00eb 3B       		.uleb128 0x3b
 2153 00ec 05       		.uleb128 0x5
 2154 00ed 27       		.uleb128 0x27
 2155 00ee 0C       		.uleb128 0xc
 2156 00ef 11       		.uleb128 0x11
 2157 00f0 01       		.uleb128 0x1
 2158 00f1 12       		.uleb128 0x12
 2159 00f2 01       		.uleb128 0x1
 2160 00f3 40       		.uleb128 0x40
 2161 00f4 06       		.uleb128 0x6
 2162 00f5 9742     		.uleb128 0x2117
 2163 00f7 0C       		.uleb128 0xc
 2164 00f8 01       		.uleb128 0x1
 2165 00f9 13       		.uleb128 0x13
 2166 00fa 00       		.byte	0
 2167 00fb 00       		.byte	0
 2168 00fc 13       		.uleb128 0x13
 2169 00fd 05       		.uleb128 0x5
 2170 00fe 00       		.byte	0
 2171 00ff 03       		.uleb128 0x3
 2172 0100 0E       		.uleb128 0xe
 2173 0101 3A       		.uleb128 0x3a
 2174 0102 0B       		.uleb128 0xb
 2175 0103 3B       		.uleb128 0x3b
 2176 0104 05       		.uleb128 0x5
 2177 0105 49       		.uleb128 0x49
 2178 0106 13       		.uleb128 0x13
 2179 0107 02       		.uleb128 0x2
 2180 0108 0A       		.uleb128 0xa
 2181 0109 00       		.byte	0
 2182 010a 00       		.byte	0
 2183 010b 14       		.uleb128 0x14
 2184 010c 34       		.uleb128 0x34
 2185 010d 00       		.byte	0
 2186 010e 03       		.uleb128 0x3
 2187 010f 0E       		.uleb128 0xe
 2188 0110 3A       		.uleb128 0x3a
 2189 0111 0B       		.uleb128 0xb
 2190 0112 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 62


 2191 0113 05       		.uleb128 0x5
 2192 0114 49       		.uleb128 0x49
 2193 0115 13       		.uleb128 0x13
 2194 0116 02       		.uleb128 0x2
 2195 0117 06       		.uleb128 0x6
 2196 0118 00       		.byte	0
 2197 0119 00       		.byte	0
 2198 011a 15       		.uleb128 0x15
 2199 011b 2E       		.uleb128 0x2e
 2200 011c 01       		.byte	0x1
 2201 011d 3F       		.uleb128 0x3f
 2202 011e 0C       		.uleb128 0xc
 2203 011f 03       		.uleb128 0x3
 2204 0120 0E       		.uleb128 0xe
 2205 0121 3A       		.uleb128 0x3a
 2206 0122 0B       		.uleb128 0xb
 2207 0123 3B       		.uleb128 0x3b
 2208 0124 05       		.uleb128 0x5
 2209 0125 27       		.uleb128 0x27
 2210 0126 0C       		.uleb128 0xc
 2211 0127 11       		.uleb128 0x11
 2212 0128 01       		.uleb128 0x1
 2213 0129 12       		.uleb128 0x12
 2214 012a 01       		.uleb128 0x1
 2215 012b 40       		.uleb128 0x40
 2216 012c 0A       		.uleb128 0xa
 2217 012d 9742     		.uleb128 0x2117
 2218 012f 0C       		.uleb128 0xc
 2219 0130 01       		.uleb128 0x1
 2220 0131 13       		.uleb128 0x13
 2221 0132 00       		.byte	0
 2222 0133 00       		.byte	0
 2223 0134 16       		.uleb128 0x16
 2224 0135 2E       		.uleb128 0x2e
 2225 0136 01       		.byte	0x1
 2226 0137 3F       		.uleb128 0x3f
 2227 0138 0C       		.uleb128 0xc
 2228 0139 03       		.uleb128 0x3
 2229 013a 0E       		.uleb128 0xe
 2230 013b 3A       		.uleb128 0x3a
 2231 013c 0B       		.uleb128 0xb
 2232 013d 3B       		.uleb128 0x3b
 2233 013e 05       		.uleb128 0x5
 2234 013f 27       		.uleb128 0x27
 2235 0140 0C       		.uleb128 0xc
 2236 0141 49       		.uleb128 0x49
 2237 0142 13       		.uleb128 0x13
 2238 0143 11       		.uleb128 0x11
 2239 0144 01       		.uleb128 0x1
 2240 0145 12       		.uleb128 0x12
 2241 0146 01       		.uleb128 0x1
 2242 0147 40       		.uleb128 0x40
 2243 0148 0A       		.uleb128 0xa
 2244 0149 9742     		.uleb128 0x2117
 2245 014b 0C       		.uleb128 0xc
 2246 014c 01       		.uleb128 0x1
 2247 014d 13       		.uleb128 0x13
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 63


 2248 014e 00       		.byte	0
 2249 014f 00       		.byte	0
 2250 0150 17       		.uleb128 0x17
 2251 0151 05       		.uleb128 0x5
 2252 0152 00       		.byte	0
 2253 0153 03       		.uleb128 0x3
 2254 0154 0E       		.uleb128 0xe
 2255 0155 3A       		.uleb128 0x3a
 2256 0156 0B       		.uleb128 0xb
 2257 0157 3B       		.uleb128 0x3b
 2258 0158 05       		.uleb128 0x5
 2259 0159 49       		.uleb128 0x49
 2260 015a 13       		.uleb128 0x13
 2261 015b 02       		.uleb128 0x2
 2262 015c 06       		.uleb128 0x6
 2263 015d 00       		.byte	0
 2264 015e 00       		.byte	0
 2265 015f 18       		.uleb128 0x18
 2266 0160 34       		.uleb128 0x34
 2267 0161 00       		.byte	0
 2268 0162 03       		.uleb128 0x3
 2269 0163 08       		.uleb128 0x8
 2270 0164 3A       		.uleb128 0x3a
 2271 0165 0B       		.uleb128 0xb
 2272 0166 3B       		.uleb128 0x3b
 2273 0167 05       		.uleb128 0x5
 2274 0168 49       		.uleb128 0x49
 2275 0169 13       		.uleb128 0x13
 2276 016a 02       		.uleb128 0x2
 2277 016b 06       		.uleb128 0x6
 2278 016c 00       		.byte	0
 2279 016d 00       		.byte	0
 2280 016e 19       		.uleb128 0x19
 2281 016f 2E       		.uleb128 0x2e
 2282 0170 01       		.byte	0x1
 2283 0171 3F       		.uleb128 0x3f
 2284 0172 0C       		.uleb128 0xc
 2285 0173 03       		.uleb128 0x3
 2286 0174 0E       		.uleb128 0xe
 2287 0175 3A       		.uleb128 0x3a
 2288 0176 0B       		.uleb128 0xb
 2289 0177 3B       		.uleb128 0x3b
 2290 0178 05       		.uleb128 0x5
 2291 0179 27       		.uleb128 0x27
 2292 017a 0C       		.uleb128 0xc
 2293 017b 49       		.uleb128 0x49
 2294 017c 13       		.uleb128 0x13
 2295 017d 11       		.uleb128 0x11
 2296 017e 01       		.uleb128 0x1
 2297 017f 12       		.uleb128 0x12
 2298 0180 01       		.uleb128 0x1
 2299 0181 40       		.uleb128 0x40
 2300 0182 06       		.uleb128 0x6
 2301 0183 9742     		.uleb128 0x2117
 2302 0185 0C       		.uleb128 0xc
 2303 0186 01       		.uleb128 0x1
 2304 0187 13       		.uleb128 0x13
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 64


 2305 0188 00       		.byte	0
 2306 0189 00       		.byte	0
 2307 018a 1A       		.uleb128 0x1a
 2308 018b 34       		.uleb128 0x34
 2309 018c 00       		.byte	0
 2310 018d 03       		.uleb128 0x3
 2311 018e 0E       		.uleb128 0xe
 2312 018f 3A       		.uleb128 0x3a
 2313 0190 0B       		.uleb128 0xb
 2314 0191 3B       		.uleb128 0x3b
 2315 0192 05       		.uleb128 0x5
 2316 0193 49       		.uleb128 0x49
 2317 0194 13       		.uleb128 0x13
 2318 0195 02       		.uleb128 0x2
 2319 0196 0A       		.uleb128 0xa
 2320 0197 00       		.byte	0
 2321 0198 00       		.byte	0
 2322 0199 1B       		.uleb128 0x1b
 2323 019a 34       		.uleb128 0x34
 2324 019b 00       		.byte	0
 2325 019c 03       		.uleb128 0x3
 2326 019d 0E       		.uleb128 0xe
 2327 019e 3A       		.uleb128 0x3a
 2328 019f 0B       		.uleb128 0xb
 2329 01a0 3B       		.uleb128 0x3b
 2330 01a1 05       		.uleb128 0x5
 2331 01a2 49       		.uleb128 0x49
 2332 01a3 13       		.uleb128 0x13
 2333 01a4 3F       		.uleb128 0x3f
 2334 01a5 0C       		.uleb128 0xc
 2335 01a6 3C       		.uleb128 0x3c
 2336 01a7 0C       		.uleb128 0xc
 2337 01a8 00       		.byte	0
 2338 01a9 00       		.byte	0
 2339 01aa 00       		.byte	0
 2340              		.section	.debug_loc,"",%progbits
 2341              	.Ldebug_loc0:
 2342              	.LLST0:
 2343 0000 1C010000 		.4byte	.LFB111-.Ltext0
 2344 0004 22010000 		.4byte	.LCFI0-.Ltext0
 2345 0008 0200     		.2byte	0x2
 2346 000a 7D       		.byte	0x7d
 2347 000b 00       		.sleb128 0
 2348 000c 22010000 		.4byte	.LCFI0-.Ltext0
 2349 0010 70010000 		.4byte	.LFE111-.Ltext0
 2350 0014 0200     		.2byte	0x2
 2351 0016 7D       		.byte	0x7d
 2352 0017 08       		.sleb128 8
 2353 0018 00000000 		.4byte	0
 2354 001c 00000000 		.4byte	0
 2355              	.LLST1:
 2356 0020 1C010000 		.4byte	.LVL1-.Ltext0
 2357 0024 1E010000 		.4byte	.LVL2-.Ltext0
 2358 0028 0200     		.2byte	0x2
 2359 002a 30       		.byte	0x30
 2360 002b 9F       		.byte	0x9f
 2361 002c 1E010000 		.4byte	.LVL2-.Ltext0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 65


 2362 0030 24010000 		.4byte	.LVL3-.Ltext0
 2363 0034 0100     		.2byte	0x1
 2364 0036 52       		.byte	0x52
 2365 0037 24010000 		.4byte	.LVL3-.Ltext0
 2366 003b 50010000 		.4byte	.LVL5-.Ltext0
 2367 003f 0100     		.2byte	0x1
 2368 0041 53       		.byte	0x53
 2369 0042 50010000 		.4byte	.LVL5-.Ltext0
 2370 0046 5C010000 		.4byte	.LVL7-.Ltext0
 2371 004a 0100     		.2byte	0x1
 2372 004c 54       		.byte	0x54
 2373 004d 5C010000 		.4byte	.LVL7-.Ltext0
 2374 0051 60010000 		.4byte	.LVL8-.Ltext0
 2375 0055 0100     		.2byte	0x1
 2376 0057 53       		.byte	0x53
 2377 0058 60010000 		.4byte	.LVL8-.Ltext0
 2378 005c 70010000 		.4byte	.LFE111-.Ltext0
 2379 0060 0200     		.2byte	0x2
 2380 0062 70       		.byte	0x70
 2381 0063 14       		.sleb128 20
 2382 0064 00000000 		.4byte	0
 2383 0068 00000000 		.4byte	0
 2384              	.LLST2:
 2385 006c CC010000 		.4byte	.LVL14-.Ltext0
 2386 0070 CE010000 		.4byte	.LVL15-.Ltext0
 2387 0074 0100     		.2byte	0x1
 2388 0076 50       		.byte	0x50
 2389 0077 CE010000 		.4byte	.LVL15-.Ltext0
 2390 007b D2010000 		.4byte	.LFE117-.Ltext0
 2391 007f 0400     		.2byte	0x4
 2392 0081 F3       		.byte	0xf3
 2393 0082 01       		.uleb128 0x1
 2394 0083 50       		.byte	0x50
 2395 0084 9F       		.byte	0x9f
 2396 0085 00000000 		.4byte	0
 2397 0089 00000000 		.4byte	0
 2398              	.LLST3:
 2399 008d 02020000 		.4byte	.LVL19-.Ltext0
 2400 0091 04020000 		.4byte	.LVL20-.Ltext0
 2401 0095 0100     		.2byte	0x1
 2402 0097 50       		.byte	0x50
 2403 0098 04020000 		.4byte	.LVL20-.Ltext0
 2404 009c 0A020000 		.4byte	.LFE121-.Ltext0
 2405 00a0 0400     		.2byte	0x4
 2406 00a2 F3       		.byte	0xf3
 2407 00a3 01       		.uleb128 0x1
 2408 00a4 50       		.byte	0x50
 2409 00a5 9F       		.byte	0x9f
 2410 00a6 00000000 		.4byte	0
 2411 00aa 00000000 		.4byte	0
 2412              	.LLST4:
 2413 00ae 02020000 		.4byte	.LVL19-.Ltext0
 2414 00b2 04020000 		.4byte	.LVL20-.Ltext0
 2415 00b6 0200     		.2byte	0x2
 2416 00b8 30       		.byte	0x30
 2417 00b9 9F       		.byte	0x9f
 2418 00ba 04020000 		.4byte	.LVL20-.Ltext0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 66


 2419 00be 08020000 		.4byte	.LVL21-.Ltext0
 2420 00c2 0C00     		.2byte	0xc
 2421 00c4 70       		.byte	0x70
 2422 00c5 00       		.sleb128 0
 2423 00c6 40       		.byte	0x40
 2424 00c7 3F       		.byte	0x3f
 2425 00c8 24       		.byte	0x24
 2426 00c9 1A       		.byte	0x1a
 2427 00ca 30       		.byte	0x30
 2428 00cb 2E       		.byte	0x2e
 2429 00cc 08       		.byte	0x8
 2430 00cd FF       		.byte	0xff
 2431 00ce 1A       		.byte	0x1a
 2432 00cf 9F       		.byte	0x9f
 2433 00d0 00000000 		.4byte	0
 2434 00d4 00000000 		.4byte	0
 2435              	.LLST5:
 2436 00d8 0A020000 		.4byte	.LVL22-.Ltext0
 2437 00dc 0C020000 		.4byte	.LVL23-.Ltext0
 2438 00e0 0100     		.2byte	0x1
 2439 00e2 50       		.byte	0x50
 2440 00e3 0C020000 		.4byte	.LVL23-.Ltext0
 2441 00e7 12020000 		.4byte	.LFE122-.Ltext0
 2442 00eb 0400     		.2byte	0x4
 2443 00ed F3       		.byte	0xf3
 2444 00ee 01       		.uleb128 0x1
 2445 00ef 50       		.byte	0x50
 2446 00f0 9F       		.byte	0x9f
 2447 00f1 00000000 		.4byte	0
 2448 00f5 00000000 		.4byte	0
 2449              	.LLST6:
 2450 00f9 0A020000 		.4byte	.LVL22-.Ltext0
 2451 00fd 0C020000 		.4byte	.LVL23-.Ltext0
 2452 0101 0200     		.2byte	0x2
 2453 0103 30       		.byte	0x30
 2454 0104 9F       		.byte	0x9f
 2455 0105 0C020000 		.4byte	.LVL23-.Ltext0
 2456 0109 10020000 		.4byte	.LVL24-.Ltext0
 2457 010d 0500     		.2byte	0x5
 2458 010f 70       		.byte	0x70
 2459 0110 00       		.sleb128 0
 2460 0111 31       		.byte	0x31
 2461 0112 1A       		.byte	0x1a
 2462 0113 9F       		.byte	0x9f
 2463 0114 00000000 		.4byte	0
 2464 0118 00000000 		.4byte	0
 2465              	.LLST7:
 2466 011c 12020000 		.4byte	.LVL25-.Ltext0
 2467 0120 14020000 		.4byte	.LVL26-.Ltext0
 2468 0124 0100     		.2byte	0x1
 2469 0126 50       		.byte	0x50
 2470 0127 14020000 		.4byte	.LVL26-.Ltext0
 2471 012b 1A020000 		.4byte	.LFE123-.Ltext0
 2472 012f 0400     		.2byte	0x4
 2473 0131 F3       		.byte	0xf3
 2474 0132 01       		.uleb128 0x1
 2475 0133 50       		.byte	0x50
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 67


 2476 0134 9F       		.byte	0x9f
 2477 0135 00000000 		.4byte	0
 2478 0139 00000000 		.4byte	0
 2479              	.LLST8:
 2480 013d 12020000 		.4byte	.LVL25-.Ltext0
 2481 0141 14020000 		.4byte	.LVL26-.Ltext0
 2482 0145 0200     		.2byte	0x2
 2483 0147 30       		.byte	0x30
 2484 0148 9F       		.byte	0x9f
 2485 0149 14020000 		.4byte	.LVL26-.Ltext0
 2486 014d 18020000 		.4byte	.LVL27-.Ltext0
 2487 0151 0600     		.2byte	0x6
 2488 0153 70       		.byte	0x70
 2489 0154 00       		.sleb128 0
 2490 0155 08       		.byte	0x8
 2491 0156 38       		.byte	0x38
 2492 0157 1A       		.byte	0x1a
 2493 0158 9F       		.byte	0x9f
 2494 0159 18020000 		.4byte	.LVL27-.Ltext0
 2495 015d 1A020000 		.4byte	.LFE123-.Ltext0
 2496 0161 0100     		.2byte	0x1
 2497 0163 50       		.byte	0x50
 2498 0164 00000000 		.4byte	0
 2499 0168 00000000 		.4byte	0
 2500              	.LLST9:
 2501 016c 1A020000 		.4byte	.LFB124-.Ltext0
 2502 0170 20020000 		.4byte	.LCFI1-.Ltext0
 2503 0174 0200     		.2byte	0x2
 2504 0176 7D       		.byte	0x7d
 2505 0177 00       		.sleb128 0
 2506 0178 20020000 		.4byte	.LCFI1-.Ltext0
 2507 017c 50020000 		.4byte	.LFE124-.Ltext0
 2508 0180 0200     		.2byte	0x2
 2509 0182 7D       		.byte	0x7d
 2510 0183 08       		.sleb128 8
 2511 0184 00000000 		.4byte	0
 2512 0188 00000000 		.4byte	0
 2513              	.LLST10:
 2514 018c 1A020000 		.4byte	.LVL28-.Ltext0
 2515 0190 2A020000 		.4byte	.LVL29-.Ltext0
 2516 0194 0100     		.2byte	0x1
 2517 0196 50       		.byte	0x50
 2518 0197 2A020000 		.4byte	.LVL29-.Ltext0
 2519 019b 50020000 		.4byte	.LFE124-.Ltext0
 2520 019f 0400     		.2byte	0x4
 2521 01a1 F3       		.byte	0xf3
 2522 01a2 01       		.uleb128 0x1
 2523 01a3 50       		.byte	0x50
 2524 01a4 9F       		.byte	0x9f
 2525 01a5 00000000 		.4byte	0
 2526 01a9 00000000 		.4byte	0
 2527              	.LLST11:
 2528 01ad 1A020000 		.4byte	.LVL28-.Ltext0
 2529 01b1 36020000 		.4byte	.LVL32-.Ltext0
 2530 01b5 0100     		.2byte	0x1
 2531 01b7 51       		.byte	0x51
 2532 01b8 36020000 		.4byte	.LVL32-.Ltext0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 68


 2533 01bc 50020000 		.4byte	.LFE124-.Ltext0
 2534 01c0 0400     		.2byte	0x4
 2535 01c2 F3       		.byte	0xf3
 2536 01c3 01       		.uleb128 0x1
 2537 01c4 51       		.byte	0x51
 2538 01c5 9F       		.byte	0x9f
 2539 01c6 00000000 		.4byte	0
 2540 01ca 00000000 		.4byte	0
 2541              	.LLST12:
 2542 01ce 1A020000 		.4byte	.LVL28-.Ltext0
 2543 01d2 32020000 		.4byte	.LVL31-.Ltext0
 2544 01d6 0200     		.2byte	0x2
 2545 01d8 30       		.byte	0x30
 2546 01d9 9F       		.byte	0x9f
 2547 01da 32020000 		.4byte	.LVL31-.Ltext0
 2548 01de 36020000 		.4byte	.LVL32-.Ltext0
 2549 01e2 0E00     		.2byte	0xe
 2550 01e4 71       		.byte	0x71
 2551 01e5 00       		.sleb128 0
 2552 01e6 73       		.byte	0x73
 2553 01e7 00       		.sleb128 0
 2554 01e8 1A       		.byte	0x1a
 2555 01e9 0C       		.byte	0xc
 2556 01ea 7D0F7D0F 		.4byte	0xf7d0f7d
 2557 01ee 1A       		.byte	0x1a
 2558 01ef 30       		.byte	0x30
 2559 01f0 2E       		.byte	0x2e
 2560 01f1 9F       		.byte	0x9f
 2561 01f2 36020000 		.4byte	.LVL32-.Ltext0
 2562 01f6 50020000 		.4byte	.LFE124-.Ltext0
 2563 01fa 0F00     		.2byte	0xf
 2564 01fc F3       		.byte	0xf3
 2565 01fd 01       		.uleb128 0x1
 2566 01fe 51       		.byte	0x51
 2567 01ff 73       		.byte	0x73
 2568 0200 00       		.sleb128 0
 2569 0201 1A       		.byte	0x1a
 2570 0202 0C       		.byte	0xc
 2571 0203 7D0F7D0F 		.4byte	0xf7d0f7d
 2572 0207 1A       		.byte	0x1a
 2573 0208 30       		.byte	0x30
 2574 0209 2E       		.byte	0x2e
 2575 020a 9F       		.byte	0x9f
 2576 020b 00000000 		.4byte	0
 2577 020f 00000000 		.4byte	0
 2578              	.LLST13:
 2579 0213 2A020000 		.4byte	.LVL29-.Ltext0
 2580 0217 42020000 		.4byte	.LVL33-.Ltext0
 2581 021b 0100     		.2byte	0x1
 2582 021d 50       		.byte	0x50
 2583 021e 42020000 		.4byte	.LVL33-.Ltext0
 2584 0222 50020000 		.4byte	.LFE124-.Ltext0
 2585 0226 1B00     		.2byte	0x1b
 2586 0228 72       		.byte	0x72
 2587 0229 00       		.sleb128 0
 2588 022a 0C       		.byte	0xc
 2589 022b 00600240 		.4byte	0x40026000
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 69


 2590 022f F3       		.byte	0xf3
 2591 0230 01       		.uleb128 0x1
 2592 0231 50       		.byte	0x50
 2593 0232 40       		.byte	0x40
 2594 0233 4B       		.byte	0x4b
 2595 0234 24       		.byte	0x24
 2596 0235 22       		.byte	0x22
 2597 0236 74       		.byte	0x74
 2598 0237 00       		.sleb128 0
 2599 0238 40       		.byte	0x40
 2600 0239 4B       		.byte	0x4b
 2601 023a 24       		.byte	0x24
 2602 023b 22       		.byte	0x22
 2603 023c 2B       		.byte	0x2b
 2604 023d 28       		.byte	0x28
 2605 023e 0100     		.2byte	0x1
 2606 0240 16       		.byte	0x16
 2607 0241 13       		.byte	0x13
 2608 0242 9F       		.byte	0x9f
 2609 0243 00000000 		.4byte	0
 2610 0247 00000000 		.4byte	0
 2611              	.LLST14:
 2612 024b 1A020000 		.4byte	.LVL28-.Ltext0
 2613 024f 30020000 		.4byte	.LVL30-.Ltext0
 2614 0253 0200     		.2byte	0x2
 2615 0255 30       		.byte	0x30
 2616 0256 9F       		.byte	0x9f
 2617 0257 30020000 		.4byte	.LVL30-.Ltext0
 2618 025b 32020000 		.4byte	.LVL31-.Ltext0
 2619 025f 0100     		.2byte	0x1
 2620 0261 53       		.byte	0x53
 2621 0262 32020000 		.4byte	.LVL31-.Ltext0
 2622 0266 50020000 		.4byte	.LFE124-.Ltext0
 2623 026a 0900     		.2byte	0x9
 2624 026c 73       		.byte	0x73
 2625 026d 00       		.sleb128 0
 2626 026e 0C       		.byte	0xc
 2627 026f 7D0F7D0F 		.4byte	0xf7d0f7d
 2628 0273 1A       		.byte	0x1a
 2629 0274 9F       		.byte	0x9f
 2630 0275 00000000 		.4byte	0
 2631 0279 00000000 		.4byte	0
 2632              	.LLST15:
 2633 027d 50020000 		.4byte	.LFB125-.Ltext0
 2634 0281 52020000 		.4byte	.LCFI2-.Ltext0
 2635 0285 0200     		.2byte	0x2
 2636 0287 7D       		.byte	0x7d
 2637 0288 00       		.sleb128 0
 2638 0289 52020000 		.4byte	.LCFI2-.Ltext0
 2639 028d 80020000 		.4byte	.LFE125-.Ltext0
 2640 0291 0200     		.2byte	0x2
 2641 0293 7D       		.byte	0x7d
 2642 0294 08       		.sleb128 8
 2643 0295 00000000 		.4byte	0
 2644 0299 00000000 		.4byte	0
 2645              	.LLST16:
 2646 029d 50020000 		.4byte	.LVL34-.Ltext0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 70


 2647 02a1 60020000 		.4byte	.LVL35-.Ltext0
 2648 02a5 0100     		.2byte	0x1
 2649 02a7 50       		.byte	0x50
 2650 02a8 60020000 		.4byte	.LVL35-.Ltext0
 2651 02ac 80020000 		.4byte	.LFE125-.Ltext0
 2652 02b0 0400     		.2byte	0x4
 2653 02b2 F3       		.byte	0xf3
 2654 02b3 01       		.uleb128 0x1
 2655 02b4 50       		.byte	0x50
 2656 02b5 9F       		.byte	0x9f
 2657 02b6 00000000 		.4byte	0
 2658 02ba 00000000 		.4byte	0
 2659              	.LLST17:
 2660 02be 50020000 		.4byte	.LVL34-.Ltext0
 2661 02c2 68020000 		.4byte	.LVL36-.Ltext0
 2662 02c6 0100     		.2byte	0x1
 2663 02c8 51       		.byte	0x51
 2664 02c9 68020000 		.4byte	.LVL36-.Ltext0
 2665 02cd 80020000 		.4byte	.LFE125-.Ltext0
 2666 02d1 0400     		.2byte	0x4
 2667 02d3 F3       		.byte	0xf3
 2668 02d4 01       		.uleb128 0x1
 2669 02d5 51       		.byte	0x51
 2670 02d6 9F       		.byte	0x9f
 2671 02d7 00000000 		.4byte	0
 2672 02db 00000000 		.4byte	0
 2673              	.LLST18:
 2674 02df 80020000 		.4byte	.LVL37-.Ltext0
 2675 02e3 98020000 		.4byte	.LVL38-.Ltext0
 2676 02e7 0100     		.2byte	0x1
 2677 02e9 51       		.byte	0x51
 2678 02ea 98020000 		.4byte	.LVL38-.Ltext0
 2679 02ee 9C020000 		.4byte	.LVL39-.Ltext0
 2680 02f2 0400     		.2byte	0x4
 2681 02f4 F3       		.byte	0xf3
 2682 02f5 01       		.uleb128 0x1
 2683 02f6 51       		.byte	0x51
 2684 02f7 9F       		.byte	0x9f
 2685 02f8 9C020000 		.4byte	.LVL39-.Ltext0
 2686 02fc B6020000 		.4byte	.LVL40-.Ltext0
 2687 0300 0100     		.2byte	0x1
 2688 0302 51       		.byte	0x51
 2689 0303 B6020000 		.4byte	.LVL40-.Ltext0
 2690 0307 BE020000 		.4byte	.LFE126-.Ltext0
 2691 030b 0400     		.2byte	0x4
 2692 030d F3       		.byte	0xf3
 2693 030e 01       		.uleb128 0x1
 2694 030f 51       		.byte	0x51
 2695 0310 9F       		.byte	0x9f
 2696 0311 00000000 		.4byte	0
 2697 0315 00000000 		.4byte	0
 2698              	.LLST19:
 2699 0319 BE020000 		.4byte	.LFB127-.Ltext0
 2700 031d C4020000 		.4byte	.LCFI3-.Ltext0
 2701 0321 0200     		.2byte	0x2
 2702 0323 7D       		.byte	0x7d
 2703 0324 00       		.sleb128 0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 71


 2704 0325 C4020000 		.4byte	.LCFI3-.Ltext0
 2705 0329 14030000 		.4byte	.LFE127-.Ltext0
 2706 032d 0200     		.2byte	0x2
 2707 032f 7D       		.byte	0x7d
 2708 0330 08       		.sleb128 8
 2709 0331 00000000 		.4byte	0
 2710 0335 00000000 		.4byte	0
 2711              	.LLST20:
 2712 0339 BE020000 		.4byte	.LVL41-.Ltext0
 2713 033d EC020000 		.4byte	.LVL47-.Ltext0
 2714 0341 0100     		.2byte	0x1
 2715 0343 50       		.byte	0x50
 2716 0344 EC020000 		.4byte	.LVL47-.Ltext0
 2717 0348 14030000 		.4byte	.LFE127-.Ltext0
 2718 034c 0400     		.2byte	0x4
 2719 034e F3       		.byte	0xf3
 2720 034f 01       		.uleb128 0x1
 2721 0350 50       		.byte	0x50
 2722 0351 9F       		.byte	0x9f
 2723 0352 00000000 		.4byte	0
 2724 0356 00000000 		.4byte	0
 2725              	.LLST21:
 2726 035a BE020000 		.4byte	.LVL41-.Ltext0
 2727 035e F6020000 		.4byte	.LVL50-.Ltext0
 2728 0362 0100     		.2byte	0x1
 2729 0364 51       		.byte	0x51
 2730 0365 F6020000 		.4byte	.LVL50-.Ltext0
 2731 0369 14030000 		.4byte	.LFE127-.Ltext0
 2732 036d 0400     		.2byte	0x4
 2733 036f F3       		.byte	0xf3
 2734 0370 01       		.uleb128 0x1
 2735 0371 51       		.byte	0x51
 2736 0372 9F       		.byte	0x9f
 2737 0373 00000000 		.4byte	0
 2738 0377 00000000 		.4byte	0
 2739              	.LLST22:
 2740 037b BE020000 		.4byte	.LVL41-.Ltext0
 2741 037f 04030000 		.4byte	.LVL51-.Ltext0
 2742 0383 0200     		.2byte	0x2
 2743 0385 30       		.byte	0x30
 2744 0386 9F       		.byte	0x9f
 2745 0387 04030000 		.4byte	.LVL51-.Ltext0
 2746 038b 14030000 		.4byte	.LFE127-.Ltext0
 2747 038f 0100     		.2byte	0x1
 2748 0391 50       		.byte	0x50
 2749 0392 00000000 		.4byte	0
 2750 0396 00000000 		.4byte	0
 2751              	.LLST23:
 2752 039a BE020000 		.4byte	.LVL41-.Ltext0
 2753 039e D8020000 		.4byte	.LVL43-.Ltext0
 2754 03a2 0200     		.2byte	0x2
 2755 03a4 30       		.byte	0x30
 2756 03a5 9F       		.byte	0x9f
 2757 03a6 D8020000 		.4byte	.LVL43-.Ltext0
 2758 03aa E4020000 		.4byte	.LVL45-.Ltext0
 2759 03ae 0700     		.2byte	0x7
 2760 03b0 71       		.byte	0x71
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 72


 2761 03b1 00       		.sleb128 0
 2762 03b2 3B       		.byte	0x3b
 2763 03b3 25       		.byte	0x25
 2764 03b4 4E       		.byte	0x4e
 2765 03b5 1A       		.byte	0x1a
 2766 03b6 9F       		.byte	0x9f
 2767 03b7 E4020000 		.4byte	.LVL45-.Ltext0
 2768 03bb EA020000 		.4byte	.LVL46-.Ltext0
 2769 03bf 0200     		.2byte	0x2
 2770 03c1 30       		.byte	0x30
 2771 03c2 9F       		.byte	0x9f
 2772 03c3 F0020000 		.4byte	.LVL48-.Ltext0
 2773 03c7 F2020000 		.4byte	.LVL49-.Ltext0
 2774 03cb 0100     		.2byte	0x1
 2775 03cd 53       		.byte	0x53
 2776 03ce F2020000 		.4byte	.LVL49-.Ltext0
 2777 03d2 14030000 		.4byte	.LFE127-.Ltext0
 2778 03d6 0900     		.2byte	0x9
 2779 03d8 73       		.byte	0x73
 2780 03d9 00       		.sleb128 0
 2781 03da 0C       		.byte	0xc
 2782 03db 7D0F7D0F 		.4byte	0xf7d0f7d
 2783 03df 1A       		.byte	0x1a
 2784 03e0 9F       		.byte	0x9f
 2785 03e1 00000000 		.4byte	0
 2786 03e5 00000000 		.4byte	0
 2787              	.LLST24:
 2788 03e9 BE020000 		.4byte	.LVL41-.Ltext0
 2789 03ed E2020000 		.4byte	.LVL44-.Ltext0
 2790 03f1 0200     		.2byte	0x2
 2791 03f3 30       		.byte	0x30
 2792 03f4 9F       		.byte	0x9f
 2793 03f5 E2020000 		.4byte	.LVL44-.Ltext0
 2794 03f9 E4020000 		.4byte	.LVL45-.Ltext0
 2795 03fd 0100     		.2byte	0x1
 2796 03ff 52       		.byte	0x52
 2797 0400 E4020000 		.4byte	.LVL45-.Ltext0
 2798 0404 EA020000 		.4byte	.LVL46-.Ltext0
 2799 0408 0200     		.2byte	0x2
 2800 040a 30       		.byte	0x30
 2801 040b 9F       		.byte	0x9f
 2802 040c EA020000 		.4byte	.LVL46-.Ltext0
 2803 0410 14030000 		.4byte	.LFE127-.Ltext0
 2804 0414 0100     		.2byte	0x1
 2805 0416 52       		.byte	0x52
 2806 0417 00000000 		.4byte	0
 2807 041b 00000000 		.4byte	0
 2808              	.LLST25:
 2809 041f 14030000 		.4byte	.LFB128-.Ltext0
 2810 0423 16030000 		.4byte	.LCFI4-.Ltext0
 2811 0427 0200     		.2byte	0x2
 2812 0429 7D       		.byte	0x7d
 2813 042a 00       		.sleb128 0
 2814 042b 16030000 		.4byte	.LCFI4-.Ltext0
 2815 042f 44030000 		.4byte	.LFE128-.Ltext0
 2816 0433 0200     		.2byte	0x2
 2817 0435 7D       		.byte	0x7d
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 73


 2818 0436 08       		.sleb128 8
 2819 0437 00000000 		.4byte	0
 2820 043b 00000000 		.4byte	0
 2821              	.LLST26:
 2822 043f 14030000 		.4byte	.LVL52-.Ltext0
 2823 0443 24030000 		.4byte	.LVL53-.Ltext0
 2824 0447 0100     		.2byte	0x1
 2825 0449 50       		.byte	0x50
 2826 044a 24030000 		.4byte	.LVL53-.Ltext0
 2827 044e 44030000 		.4byte	.LFE128-.Ltext0
 2828 0452 0400     		.2byte	0x4
 2829 0454 F3       		.byte	0xf3
 2830 0455 01       		.uleb128 0x1
 2831 0456 50       		.byte	0x50
 2832 0457 9F       		.byte	0x9f
 2833 0458 00000000 		.4byte	0
 2834 045c 00000000 		.4byte	0
 2835              	.LLST27:
 2836 0460 14030000 		.4byte	.LVL52-.Ltext0
 2837 0464 2C030000 		.4byte	.LVL54-.Ltext0
 2838 0468 0100     		.2byte	0x1
 2839 046a 51       		.byte	0x51
 2840 046b 2C030000 		.4byte	.LVL54-.Ltext0
 2841 046f 44030000 		.4byte	.LFE128-.Ltext0
 2842 0473 0400     		.2byte	0x4
 2843 0475 F3       		.byte	0xf3
 2844 0476 01       		.uleb128 0x1
 2845 0477 51       		.byte	0x51
 2846 0478 9F       		.byte	0x9f
 2847 0479 00000000 		.4byte	0
 2848 047d 00000000 		.4byte	0
 2849              		.section	.debug_aranges,"",%progbits
 2850 0000 1C000000 		.4byte	0x1c
 2851 0004 0200     		.2byte	0x2
 2852 0006 00000000 		.4byte	.Ldebug_info0
 2853 000a 04       		.byte	0x4
 2854 000b 00       		.byte	0
 2855 000c 0000     		.2byte	0
 2856 000e 0000     		.2byte	0
 2857 0010 00000000 		.4byte	.Ltext0
 2858 0014 44030000 		.4byte	.Letext0-.Ltext0
 2859 0018 00000000 		.4byte	0
 2860 001c 00000000 		.4byte	0
 2861              		.section	.debug_line,"",%progbits
 2862              	.Ldebug_line0:
 2863 0000 03020000 		.section	.debug_str,"MS",%progbits,1
 2863      0200E800 
 2863      00000201 
 2863      FB0E0D00 
 2863      01010101 
 2864              	.LASF59:
 2865 0000 444D415F 		.ascii	"DMA_CurrentMemory\000"
 2865      43757272 
 2865      656E744D 
 2865      656D6F72 
 2865      7900
 2866              	.LASF49:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 74


 2867 0012 444D415F 		.ascii	"DMA_Cmd\000"
 2867      436D6400 
 2868              	.LASF22:
 2869 001a 444D415F 		.ascii	"DMA_Stream_TypeDef\000"
 2869      53747265 
 2869      616D5F54 
 2869      79706544 
 2869      656600
 2870              	.LASF68:
 2871 002d 73746174 		.ascii	"state\000"
 2871      6500
 2872              	.LASF38:
 2873 0033 444D415F 		.ascii	"DMA_Priority\000"
 2873      5072696F 
 2873      72697479 
 2873      00
 2874              	.LASF41:
 2875 0040 444D415F 		.ascii	"DMA_MemoryBurst\000"
 2875      4D656D6F 
 2875      72794275 
 2875      72737400 
 2876              	.LASF12:
 2877 0050 73697A65 		.ascii	"sizetype\000"
 2877      74797065 
 2877      00
 2878              	.LASF56:
 2879 0059 436F756E 		.ascii	"Counter\000"
 2879      74657200 
 2880              	.LASF48:
 2881 0061 444D415F 		.ascii	"DMA_StructInit\000"
 2881      53747275 
 2881      6374496E 
 2881      697400
 2882              	.LASF42:
 2883 0070 444D415F 		.ascii	"DMA_PeripheralBurst\000"
 2883      50657269 
 2883      70686572 
 2883      616C4275 
 2883      72737400 
 2884              	.LASF69:
 2885 0084 444D415F 		.ascii	"DMA_GetFIFOStatus\000"
 2885      47657446 
 2885      49464F53 
 2885      74617475 
 2885      7300
 2886              	.LASF27:
 2887 0096 444D415F 		.ascii	"DMA_TypeDef\000"
 2887      54797065 
 2887      44656600 
 2888              	.LASF65:
 2889 00a2 444D415F 		.ascii	"DMA_GetCurrentMemoryTarget\000"
 2889      47657443 
 2889      75727265 
 2889      6E744D65 
 2889      6D6F7279 
 2890              	.LASF63:
 2891 00bd 444D415F 		.ascii	"DMA_MemoryTarget\000"
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 75


 2891      4D656D6F 
 2891      72795461 
 2891      72676574 
 2891      00
 2892              	.LASF73:
 2893 00ce 444D4179 		.ascii	"DMAy\000"
 2893      00
 2894              	.LASF46:
 2895 00d3 444D4179 		.ascii	"DMAy_Streamx\000"
 2895      5F537472 
 2895      65616D78 
 2895      00
 2896              	.LASF31:
 2897 00e0 444D415F 		.ascii	"DMA_DIR\000"
 2897      44495200 
 2898              	.LASF50:
 2899 00e8 4E657753 		.ascii	"NewState\000"
 2899      74617465 
 2899      00
 2900              	.LASF29:
 2901 00f1 444D415F 		.ascii	"DMA_PeripheralBaseAddr\000"
 2901      50657269 
 2901      70686572 
 2901      616C4261 
 2901      73654164 
 2902              	.LASF16:
 2903 0108 44495341 		.ascii	"DISABLE\000"
 2903      424C4500 
 2904              	.LASF2:
 2905 0110 73686F72 		.ascii	"short int\000"
 2905      7420696E 
 2905      7400
 2906              	.LASF34:
 2907 011a 444D415F 		.ascii	"DMA_MemoryInc\000"
 2907      4D656D6F 
 2907      7279496E 
 2907      6300
 2908              	.LASF78:
 2909 0128 656E6162 		.ascii	"enablestatus\000"
 2909      6C657374 
 2909      61747573 
 2909      00
 2910              	.LASF26:
 2911 0135 48494643 		.ascii	"HIFCR\000"
 2911      5200
 2912              	.LASF9:
 2913 013b 6C6F6E67 		.ascii	"long long int\000"
 2913      206C6F6E 
 2913      6720696E 
 2913      7400
 2914              	.LASF53:
 2915 0149 444D415F 		.ascii	"DMA_FlowControllerConfig\000"
 2915      466C6F77 
 2915      436F6E74 
 2915      726F6C6C 
 2915      6572436F 
 2916              	.LASF61:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 76


 2917 0162 444D415F 		.ascii	"DMA_MemoryTargetConfig\000"
 2917      4D656D6F 
 2917      72795461 
 2917      72676574 
 2917      436F6E66 
 2918              	.LASF33:
 2919 0179 444D415F 		.ascii	"DMA_PeripheralInc\000"
 2919      50657269 
 2919      70686572 
 2919      616C496E 
 2919      6300
 2920              	.LASF15:
 2921 018b 49545374 		.ascii	"ITStatus\000"
 2921      61747573 
 2921      00
 2922              	.LASF60:
 2923 0194 444D415F 		.ascii	"DMA_DoubleBufferModeCmd\000"
 2923      446F7562 
 2923      6C654275 
 2923      66666572 
 2923      4D6F6465 
 2924              	.LASF6:
 2925 01ac 6C6F6E67 		.ascii	"long int\000"
 2925      20696E74 
 2925      00
 2926              	.LASF45:
 2927 01b5 444D415F 		.ascii	"DMA_Init\000"
 2927      496E6974 
 2927      00
 2928              	.LASF23:
 2929 01be 4C495352 		.ascii	"LISR\000"
 2929      00
 2930              	.LASF74:
 2931 01c3 444D415F 		.ascii	"DMA_ClearFlag\000"
 2931      436C6561 
 2931      72466C61 
 2931      6700
 2932              	.LASF55:
 2933 01d1 444D415F 		.ascii	"DMA_SetCurrDataCounter\000"
 2933      53657443 
 2933      75727244 
 2933      61746143 
 2933      6F756E74 
 2934              	.LASF66:
 2935 01e8 746D7072 		.ascii	"tmpreg\000"
 2935      656700
 2936              	.LASF72:
 2937 01ef 62697473 		.ascii	"bitstatus\000"
 2937      74617475 
 2937      7300
 2938              	.LASF35:
 2939 01f9 444D415F 		.ascii	"DMA_PeripheralDataSize\000"
 2939      50657269 
 2939      70686572 
 2939      616C4461 
 2939      74615369 
 2940              	.LASF43:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 77


 2941 0210 444D415F 		.ascii	"DMA_InitTypeDef\000"
 2941      496E6974 
 2941      54797065 
 2941      44656600 
 2942              	.LASF1:
 2943 0220 756E7369 		.ascii	"unsigned char\000"
 2943      676E6564 
 2943      20636861 
 2943      7200
 2944              	.LASF0:
 2945 022e 7369676E 		.ascii	"signed char\000"
 2945      65642063 
 2945      68617200 
 2946              	.LASF57:
 2947 023a 444D415F 		.ascii	"DMA_DoubleBufferModeConfig\000"
 2947      446F7562 
 2947      6C654275 
 2947      66666572 
 2947      4D6F6465 
 2948              	.LASF10:
 2949 0255 6C6F6E67 		.ascii	"long long unsigned int\000"
 2949      206C6F6E 
 2949      6720756E 
 2949      7369676E 
 2949      65642069 
 2950              	.LASF40:
 2951 026c 444D415F 		.ascii	"DMA_FIFOThreshold\000"
 2951      4649464F 
 2951      54687265 
 2951      73686F6C 
 2951      6400
 2952              	.LASF7:
 2953 027e 75696E74 		.ascii	"uint32_t\000"
 2953      33325F74 
 2953      00
 2954              	.LASF11:
 2955 0287 756E7369 		.ascii	"unsigned int\000"
 2955      676E6564 
 2955      20696E74 
 2955      00
 2956              	.LASF77:
 2957 0294 444D415F 		.ascii	"DMA_GetITStatus\000"
 2957      47657449 
 2957      54537461 
 2957      74757300 
 2958              	.LASF4:
 2959 02a4 75696E74 		.ascii	"uint16_t\000"
 2959      31365F74 
 2959      00
 2960              	.LASF24:
 2961 02ad 48495352 		.ascii	"HISR\000"
 2961      00
 2962              	.LASF80:
 2963 02b2 474E5520 		.ascii	"GNU C 4.7.2\000"
 2963      4320342E 
 2963      372E3200 
 2964              	.LASF47:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 78


 2965 02be 444D415F 		.ascii	"DMA_InitStruct\000"
 2965      496E6974 
 2965      53747275 
 2965      637400
 2966              	.LASF52:
 2967 02cd 444D415F 		.ascii	"DMA_Pincos\000"
 2967      50696E63 
 2967      6F7300
 2968              	.LASF3:
 2969 02d8 73686F72 		.ascii	"short unsigned int\000"
 2969      7420756E 
 2969      7369676E 
 2969      65642069 
 2969      6E7400
 2970              	.LASF21:
 2971 02eb 4D314152 		.ascii	"M1AR\000"
 2971      00
 2972              	.LASF81:
 2973 02f0 2E5C7374 		.ascii	".\\stm32f4periph\\src\\stm32f4xx_dma.c\000"
 2973      6D333266 
 2973      34706572 
 2973      6970685C 
 2973      7372635C 
 2974              	.LASF54:
 2975 0314 444D415F 		.ascii	"DMA_FlowCtrl\000"
 2975      466C6F77 
 2975      4374726C 
 2975      00
 2976              	.LASF5:
 2977 0321 696E7433 		.ascii	"int32_t\000"
 2977      325F7400 
 2978              	.LASF71:
 2979 0329 444D415F 		.ascii	"DMA_FLAG\000"
 2979      464C4147 
 2979      00
 2980              	.LASF79:
 2981 0332 444D415F 		.ascii	"DMA_ClearITPendingBit\000"
 2981      436C6561 
 2981      72495450 
 2981      656E6469 
 2981      6E674269 
 2982              	.LASF51:
 2983 0348 444D415F 		.ascii	"DMA_PeriphIncOffsetSizeConfig\000"
 2983      50657269 
 2983      7068496E 
 2983      634F6666 
 2983      73657453 
 2984              	.LASF44:
 2985 0366 444D415F 		.ascii	"DMA_DeInit\000"
 2985      4465496E 
 2985      697400
 2986              	.LASF70:
 2987 0371 444D415F 		.ascii	"DMA_GetFlagStatus\000"
 2987      47657446 
 2987      6C616753 
 2987      74617475 
 2987      7300
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 79


 2988              	.LASF25:
 2989 0383 4C494643 		.ascii	"LIFCR\000"
 2989      5200
 2990              	.LASF20:
 2991 0389 4D304152 		.ascii	"M0AR\000"
 2991      00
 2992              	.LASF8:
 2993 038e 6C6F6E67 		.ascii	"long unsigned int\000"
 2993      20756E73 
 2993      69676E65 
 2993      6420696E 
 2993      7400
 2994              	.LASF19:
 2995 03a0 4E445452 		.ascii	"NDTR\000"
 2995      00
 2996              	.LASF18:
 2997 03a5 46756E63 		.ascii	"FunctionalState\000"
 2997      74696F6E 
 2997      616C5374 
 2997      61746500 
 2998              	.LASF83:
 2999 03b5 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2999      52784275 
 2999      66666572 
 2999      00
 3000              	.LASF58:
 3001 03c2 4D656D6F 		.ascii	"Memory1BaseAddr\000"
 3001      72793142 
 3001      61736541 
 3001      64647200 
 3002              	.LASF39:
 3003 03d2 444D415F 		.ascii	"DMA_FIFOMode\000"
 3003      4649464F 
 3003      4D6F6465 
 3003      00
 3004              	.LASF67:
 3005 03df 444D415F 		.ascii	"DMA_GetCmdStatus\000"
 3005      47657443 
 3005      6D645374 
 3005      61747573 
 3005      00
 3006              	.LASF28:
 3007 03f0 444D415F 		.ascii	"DMA_Channel\000"
 3007      4368616E 
 3007      6E656C00 
 3008              	.LASF62:
 3009 03fc 4D656D6F 		.ascii	"MemoryBaseAddr\000"
 3009      72794261 
 3009      73654164 
 3009      647200
 3010              	.LASF13:
 3011 040b 52455345 		.ascii	"RESET\000"
 3011      5400
 3012              	.LASF30:
 3013 0411 444D415F 		.ascii	"DMA_Memory0BaseAddr\000"
 3013      4D656D6F 
 3013      72793042 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 80


 3013      61736541 
 3013      64647200 
 3014              	.LASF32:
 3015 0425 444D415F 		.ascii	"DMA_BufferSize\000"
 3015      42756666 
 3015      65725369 
 3015      7A6500
 3016              	.LASF37:
 3017 0434 444D415F 		.ascii	"DMA_Mode\000"
 3017      4D6F6465 
 3017      00
 3018              	.LASF64:
 3019 043d 444D415F 		.ascii	"DMA_GetCurrDataCounter\000"
 3019      47657443 
 3019      75727244 
 3019      61746143 
 3019      6F756E74 
 3020              	.LASF75:
 3021 0454 444D415F 		.ascii	"DMA_ITConfig\000"
 3021      4954436F 
 3021      6E666967 
 3021      00
 3022              	.LASF82:
 3023 0461 443A5C4E 		.ascii	"D:\\NiVek\\Firmware\\NiVek32\000"
 3023      6956656B 
 3023      5C466972 
 3023      6D776172 
 3023      655C4E69 
 3024              	.LASF14:
 3025 047b 466C6167 		.ascii	"FlagStatus\000"
 3025      53746174 
 3025      757300
 3026              	.LASF17:
 3027 0486 454E4142 		.ascii	"ENABLE\000"
 3027      4C4500
 3028              	.LASF76:
 3029 048d 444D415F 		.ascii	"DMA_IT\000"
 3029      495400
 3030              	.LASF36:
 3031 0494 444D415F 		.ascii	"DMA_MemoryDataSize\000"
 3031      4D656D6F 
 3031      72794461 
 3031      74615369 
 3031      7A6500
 3032              		.ident	"GCC: (Sourcery CodeBench Lite 2012.09-63) 4.7.2"
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s 			page 81


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_dma.c
C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s:70     .text:00000000 $t
C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s:75     .text:00000000 DMA_DeInit
C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s:233    .text:000000d0 $d
C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s:255    .text:0000011c $t
C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s:260    .text:0000011c DMA_Init
C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s:339    .text:0000016c $d
C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s:343    .text:00000170 $t
C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s:348    .text:00000170 DMA_StructInit
C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s:396    .text:00000192 DMA_Cmd
C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s:425    .text:000001a4 DMA_PeriphIncOffsetSizeConfig
C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s:454    .text:000001b6 DMA_FlowControllerConfig
C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s:483    .text:000001c8 DMA_SetCurrDataCounter
C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s:502    .text:000001cc DMA_GetCurrDataCounter
C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s:524    .text:000001d2 DMA_DoubleBufferModeConfig
C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s:555    .text:000001e6 DMA_DoubleBufferModeCmd
C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s:584    .text:000001f8 DMA_MemoryTargetConfig
C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s:609    .text:00000202 DMA_GetCurrentMemoryTarget
C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s:632    .text:0000020a DMA_GetCmdStatus
C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s:655    .text:00000212 DMA_GetFIFOStatus
C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s:678    .text:0000021a DMA_GetFlagStatus
C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s:725    .text:00000244 $d
C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s:731    .text:00000250 $t
C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s:736    .text:00000250 DMA_ClearFlag
C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s:771    .text:00000274 $d
C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s:777    .text:00000280 $t
C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s:782    .text:00000280 DMA_ITConfig
C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s:847    .text:000002be DMA_GetITStatus
C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s:918    .text:00000308 $d
C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s:924    .text:00000314 $t
C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s:929    .text:00000314 DMA_ClearITPendingBit
C:\Users\Kevin\AppData\Local\Temp\ccAyYxRs.s:964    .text:00000338 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
