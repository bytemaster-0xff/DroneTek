ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3	@ Tag_ABI_HardFP_use
   4              		.eabi_attribute 28, 1	@ Tag_ABI_VFP_args
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   7              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   8              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   9              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
  10              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
  11              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  12              		.eabi_attribute 30, 4	@ Tag_ABI_optimization_goals
  13              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  14              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  15              		.file	"stm32f4xx_usart.c"
  16              	@ GNU C (Sourcery CodeBench Lite 2012.09-63) version 4.7.2 (arm-none-eabi)
  17              	@	compiled by GNU C version 4.3.2, GMP version 5.0.5, MPFR version 3.1.1-p2, MPC version 1.0.1
  18              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  19              	@ options passed:  -I . -I \STMSPINCDDIR -I .\stm32f4periph\inc
  20              	@ -I .\CMSIS\Include -I .\inc\commo\usb -I .\inc\commo -I .\inc\common
  21              	@ -I .\inc -imultilib thumb2
  22              	@ -iprefix k:\electronics\gcc\bin\../lib/gcc/arm-none-eabi/4.7.2/
  23              	@ -isysroot k:\electronics\gcc\bin\../arm-none-eabi
  24              	@ -MD .\stm32f4periph\src\stm32f4xx_usart.d -MF .dep\stm32f4xx_usart.o.d
  25              	@ -MP -MQ .\stm32f4periph\src\stm32f4xx_usart.o -D__USES_INITFINI__
  26              	@ -D STM32F0XX -D USE_STDPERIPH_DRIVER -D RUN_FROM_FLASH=1
  27              	@ -D __CS_SOURCERYGXX_MAJ__=2012 -D __CS_SOURCERYGXX_MIN__=9
  28              	@ -D __CS_SOURCERYGXX_REV__=63 .\stm32f4periph\src\stm32f4xx_usart.c
  29              	@ -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -mthumb
  30              	@ -auxbase-strip .\stm32f4periph\src\stm32f4xx_usart.o -gdwarf-2 -Os -Wall
  31              	@ -Wstrict-prototypes -std=gnu99 -fomit-frame-pointer -fverbose-asm
  32              	@ options enabled:  -fauto-inc-dec -fbranch-count-reg -fcaller-saves
  33              	@ -fcombine-stack-adjustments -fcommon -fcompare-elim -fcprop-registers
  34              	@ -fcrossjumping -fcse-follow-jumps -fdebug-types-section -fdefer-pop
  35              	@ -fdelete-null-pointer-checks -fdevirtualize -fdwarf2-cfi-asm
  36              	@ -fearly-inlining -feliminate-unused-debug-types -fexpensive-optimizations
  37              	@ -fextension-elimination -fforward-propagate -ffunction-cse -fgcse
  38              	@ -fgcse-lm -fgnu-runtime -fguess-branch-probability -fident
  39              	@ -fif-conversion -fif-conversion2 -findirect-inlining -finline
  40              	@ -finline-atomics -finline-functions -finline-functions-called-once
  41              	@ -finline-small-functions -fipa-cp -fipa-profile -fipa-pure-const
  42              	@ -fipa-reference -fipa-sra -fira-share-save-slots -fira-share-spill-slots
  43              	@ -fivopts -fkeep-static-consts -fleading-underscore -fmath-errno
  44              	@ -fmerge-constants -fmerge-debug-strings -fmove-loop-invariants
  45              	@ -fomit-frame-pointer -foptimize-register-move -foptimize-sibling-calls
  46              	@ -fpartial-inlining -fpeephole -fpeephole2 -fprefetch-loop-arrays
  47              	@ -freg-struct-return -fregmove -freorder-blocks -freorder-functions
  48              	@ -frerun-cse-after-loop -fsched-critical-path-heuristic
  49              	@ -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
  50              	@ -fsched-last-insn-heuristic -fsched-rank-heuristic -fsched-spec
  51              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fschedule-insns2
  52              	@ -fsection-anchors -fshow-column -fshrink-wrap -fsigned-zeros
  53              	@ -fsplit-ivs-in-unroller -fsplit-wide-types -fstrict-aliasing
  54              	@ -fstrict-overflow -fstrict-volatile-bitfields -fthread-jumps
  55              	@ -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp -ftree-builtin-call-dce
  56              	@ -ftree-ccp -ftree-ch -ftree-copy-prop -ftree-copyrename -ftree-cselim
  57              	@ -ftree-dce -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 2


  58              	@ -ftree-if-to-switch-conversion -ftree-loop-if-convert -ftree-loop-im
  59              	@ -ftree-loop-ivcanon -ftree-loop-optimize -ftree-parallelize-loops=
  60              	@ -ftree-phiprop -ftree-pre -ftree-pta -ftree-reassoc -ftree-scev-cprop
  61              	@ -ftree-sink -ftree-slp-vectorize -ftree-sra -ftree-switch-conversion
  62              	@ -ftree-tail-merge -ftree-ter -ftree-vect-loop-version -ftree-vrp
  63              	@ -funit-at-a-time -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  64              	@ -fzero-initialized-in-bss -mlittle-endian -msched-prolog -mthumb
  65              	@ -munaligned-access -mvectorize-with-neon-quad
  66              	
  67              		.text
  68              	.Ltext0:
  69              		.cfi_sections	.debug_frame
  70              		.align	1
  71              		.global	USART_DeInit
  72              		.thumb
  73              		.thumb_func
  74              		.type	USART_DeInit, %function
  75              	USART_DeInit:
  76              	.LFB110:
  77              		.file 1 ".\\stm32f4periph\\src\\stm32f4xx_usart.c"
   1:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
   2:.\stm32f4periph\src/stm32f4xx_usart.c ****   ******************************************************************************
   3:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @file    stm32f4xx_usart.c
   4:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @author  MCD Application Team
   5:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @version V1.0.2
   6:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @date    05-March-2012
   7:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @brief   This file provides firmware functions to manage the following 
   8:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          functionalities of the Universal synchronous asynchronous receiver
   9:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          transmitter (USART):           
  10:.\stm32f4periph\src/stm32f4xx_usart.c ****   *           - Initialization and Configuration
  11:.\stm32f4periph\src/stm32f4xx_usart.c ****   *           - Data transfers
  12:.\stm32f4periph\src/stm32f4xx_usart.c ****   *           - Multi-Processor Communication
  13:.\stm32f4periph\src/stm32f4xx_usart.c ****   *           - LIN mode
  14:.\stm32f4periph\src/stm32f4xx_usart.c ****   *           - Half-duplex mode
  15:.\stm32f4periph\src/stm32f4xx_usart.c ****   *           - Smartcard mode
  16:.\stm32f4periph\src/stm32f4xx_usart.c ****   *           - IrDA mode
  17:.\stm32f4periph\src/stm32f4xx_usart.c ****   *           - DMA transfers management
  18:.\stm32f4periph\src/stm32f4xx_usart.c ****   *           - Interrupts and flags management 
  19:.\stm32f4periph\src/stm32f4xx_usart.c ****   *           
  20:.\stm32f4periph\src/stm32f4xx_usart.c ****   *  @verbatim
  21:.\stm32f4periph\src/stm32f4xx_usart.c ****   *      
  22:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          ===================================================================
  23:.\stm32f4periph\src/stm32f4xx_usart.c ****   *                                 How to use this driver
  24:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          ===================================================================
  25:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          1. Enable peripheral clock using the follwoing functions
  26:.\stm32f4periph\src/stm32f4xx_usart.c ****   *             RCC_APB2PeriphClockCmd(RCC_APB2Periph_USARTx, ENABLE) for USART1 and USART6 
  27:.\stm32f4periph\src/stm32f4xx_usart.c ****   *             RCC_APB1PeriphClockCmd(RCC_APB1Periph_USARTx, ENABLE) for USART2, USART3, UART4 or 
  28:.\stm32f4periph\src/stm32f4xx_usart.c ****   *
  29:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          2.  According to the USART mode, enable the GPIO clocks using 
  30:.\stm32f4periph\src/stm32f4xx_usart.c ****   *              RCC_AHB1PeriphClockCmd() function. (The I/O can be TX, RX, CTS, 
  31:.\stm32f4periph\src/stm32f4xx_usart.c ****   *              or/and SCLK). 
  32:.\stm32f4periph\src/stm32f4xx_usart.c ****   *
  33:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          3. Peripheral's alternate function: 
  34:.\stm32f4periph\src/stm32f4xx_usart.c ****   *                 - Connect the pin to the desired peripherals' Alternate 
  35:.\stm32f4periph\src/stm32f4xx_usart.c ****   *                   Function (AF) using GPIO_PinAFConfig() function
  36:.\stm32f4periph\src/stm32f4xx_usart.c ****   *                 - Configure the desired pin in alternate function by:
  37:.\stm32f4periph\src/stm32f4xx_usart.c ****   *                   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 3


  38:.\stm32f4periph\src/stm32f4xx_usart.c ****   *                 - Select the type, pull-up/pull-down and output speed via 
  39:.\stm32f4periph\src/stm32f4xx_usart.c ****   *                   GPIO_PuPd, GPIO_OType and GPIO_Speed members
  40:.\stm32f4periph\src/stm32f4xx_usart.c ****   *                 - Call GPIO_Init() function
  41:.\stm32f4periph\src/stm32f4xx_usart.c ****   *        
  42:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          4. Program the Baud Rate, Word Length , Stop Bit, Parity, Hardware 
  43:.\stm32f4periph\src/stm32f4xx_usart.c ****   *             flow control and Mode(Receiver/Transmitter) using the USART_Init()
  44:.\stm32f4periph\src/stm32f4xx_usart.c ****   *             function.
  45:.\stm32f4periph\src/stm32f4xx_usart.c ****   *
  46:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          5. For synchronous mode, enable the clock and program the polarity,
  47:.\stm32f4periph\src/stm32f4xx_usart.c ****   *             phase and last bit using the USART_ClockInit() function.
  48:.\stm32f4periph\src/stm32f4xx_usart.c ****   *
  49:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          5. Enable the NVIC and the corresponding interrupt using the function 
  50:.\stm32f4periph\src/stm32f4xx_usart.c ****   *             USART_ITConfig() if you need to use interrupt mode. 
  51:.\stm32f4periph\src/stm32f4xx_usart.c ****   *
  52:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          6. When using the DMA mode 
  53:.\stm32f4periph\src/stm32f4xx_usart.c ****   *                   - Configure the DMA using DMA_Init() function
  54:.\stm32f4periph\src/stm32f4xx_usart.c ****   *                   - Active the needed channel Request using USART_DMACmd() function
  55:.\stm32f4periph\src/stm32f4xx_usart.c ****   * 
  56:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          7. Enable the USART using the USART_Cmd() function.
  57:.\stm32f4periph\src/stm32f4xx_usart.c ****   * 
  58:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          8. Enable the DMA using the DMA_Cmd() function, when using DMA mode. 
  59:.\stm32f4periph\src/stm32f4xx_usart.c ****   *
  60:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          Refer to Multi-Processor, LIN, half-duplex, Smartcard, IrDA sub-sections
  61:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          for more details
  62:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          
  63:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          In order to reach higher communication baudrates, it is possible to
  64:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          enable the oversampling by 8 mode using the function USART_OverSampling8Cmd().
  65:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          This function should be called after enabling the USART clock (RCC_APBxPeriphClockCmd(
  66:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          and before calling the function USART_Init().
  67:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          
  68:.\stm32f4periph\src/stm32f4xx_usart.c ****   *  @endverbatim
  69:.\stm32f4periph\src/stm32f4xx_usart.c ****   *        
  70:.\stm32f4periph\src/stm32f4xx_usart.c ****   ******************************************************************************
  71:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @attention
  72:.\stm32f4periph\src/stm32f4xx_usart.c ****   *
  73:.\stm32f4periph\src/stm32f4xx_usart.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  74:.\stm32f4periph\src/stm32f4xx_usart.c ****   *
  75:.\stm32f4periph\src/stm32f4xx_usart.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  76:.\stm32f4periph\src/stm32f4xx_usart.c ****   * You may not use this file except in compliance with the License.
  77:.\stm32f4periph\src/stm32f4xx_usart.c ****   * You may obtain a copy of the License at:
  78:.\stm32f4periph\src/stm32f4xx_usart.c ****   *
  79:.\stm32f4periph\src/stm32f4xx_usart.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  80:.\stm32f4periph\src/stm32f4xx_usart.c ****   *
  81:.\stm32f4periph\src/stm32f4xx_usart.c ****   * Unless required by applicable law or agreed to in writing, software 
  82:.\stm32f4periph\src/stm32f4xx_usart.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  83:.\stm32f4periph\src/stm32f4xx_usart.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  84:.\stm32f4periph\src/stm32f4xx_usart.c ****   * See the License for the specific language governing permissions and
  85:.\stm32f4periph\src/stm32f4xx_usart.c ****   * limitations under the License.
  86:.\stm32f4periph\src/stm32f4xx_usart.c ****   *
  87:.\stm32f4periph\src/stm32f4xx_usart.c ****   ******************************************************************************
  88:.\stm32f4periph\src/stm32f4xx_usart.c ****   */ 
  89:.\stm32f4periph\src/stm32f4xx_usart.c **** 
  90:.\stm32f4periph\src/stm32f4xx_usart.c **** /* Includes ------------------------------------------------------------------*/
  91:.\stm32f4periph\src/stm32f4xx_usart.c **** #include "stm32f4xx_usart.h"
  92:.\stm32f4periph\src/stm32f4xx_usart.c **** #include "stm32f4xx_rcc.h"
  93:.\stm32f4periph\src/stm32f4xx_usart.c **** 
  94:.\stm32f4periph\src/stm32f4xx_usart.c **** #define assert_param(expr) ((void)0)
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 4


  95:.\stm32f4periph\src/stm32f4xx_usart.c **** 
  96:.\stm32f4periph\src/stm32f4xx_usart.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  97:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @{
  98:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
  99:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 100:.\stm32f4periph\src/stm32f4xx_usart.c **** /** @defgroup USART 
 101:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @brief USART driver modules
 102:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @{
 103:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 104:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 105:.\stm32f4periph\src/stm32f4xx_usart.c **** /* Private typedef -----------------------------------------------------------*/
 106:.\stm32f4periph\src/stm32f4xx_usart.c **** /* Private define ------------------------------------------------------------*/
 107:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 108:.\stm32f4periph\src/stm32f4xx_usart.c **** /*!< USART CR1 register clear Mask ((~(uint16_t)0xE9F3)) */
 109:.\stm32f4periph\src/stm32f4xx_usart.c **** #define CR1_CLEAR_MASK            ((uint16_t)(USART_CR1_M | USART_CR1_PCE | \
 110:.\stm32f4periph\src/stm32f4xx_usart.c ****                                               USART_CR1_PS | USART_CR1_TE | \
 111:.\stm32f4periph\src/stm32f4xx_usart.c ****                                               USART_CR1_RE))
 112:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 113:.\stm32f4periph\src/stm32f4xx_usart.c **** /*!< USART CR2 register clock bits clear Mask ((~(uint16_t)0xF0FF)) */
 114:.\stm32f4periph\src/stm32f4xx_usart.c **** #define CR2_CLOCK_CLEAR_MASK      ((uint16_t)(USART_CR2_CLKEN | USART_CR2_CPOL | \
 115:.\stm32f4periph\src/stm32f4xx_usart.c ****                                               USART_CR2_CPHA | USART_CR2_LBCL))
 116:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 117:.\stm32f4periph\src/stm32f4xx_usart.c **** /*!< USART CR3 register clear Mask ((~(uint16_t)0xFCFF)) */
 118:.\stm32f4periph\src/stm32f4xx_usart.c **** #define CR3_CLEAR_MASK            ((uint16_t)(USART_CR3_RTSE | USART_CR3_CTSE))
 119:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 120:.\stm32f4periph\src/stm32f4xx_usart.c **** /*!< USART Interrupts mask */
 121:.\stm32f4periph\src/stm32f4xx_usart.c **** #define IT_MASK                   ((uint16_t)0x001F)
 122:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 123:.\stm32f4periph\src/stm32f4xx_usart.c **** /* Private macro -------------------------------------------------------------*/
 124:.\stm32f4periph\src/stm32f4xx_usart.c **** /* Private variables ---------------------------------------------------------*/
 125:.\stm32f4periph\src/stm32f4xx_usart.c **** /* Private function prototypes -----------------------------------------------*/
 126:.\stm32f4periph\src/stm32f4xx_usart.c **** /* Private functions ---------------------------------------------------------*/
 127:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 128:.\stm32f4periph\src/stm32f4xx_usart.c **** /** @defgroup USART_Private_Functions
 129:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @{
 130:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 131:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 132:.\stm32f4periph\src/stm32f4xx_usart.c **** /** @defgroup USART_Group1 Initialization and Configuration functions
 133:.\stm32f4periph\src/stm32f4xx_usart.c ****  *  @brief   Initialization and Configuration functions 
 134:.\stm32f4periph\src/stm32f4xx_usart.c ****  *
 135:.\stm32f4periph\src/stm32f4xx_usart.c **** @verbatim   
 136:.\stm32f4periph\src/stm32f4xx_usart.c ****  ===============================================================================
 137:.\stm32f4periph\src/stm32f4xx_usart.c ****                   Initialization and Configuration functions
 138:.\stm32f4periph\src/stm32f4xx_usart.c ****  ===============================================================================  
 139:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 140:.\stm32f4periph\src/stm32f4xx_usart.c ****   This subsection provides a set of functions allowing to initialize the USART 
 141:.\stm32f4periph\src/stm32f4xx_usart.c ****   in asynchronous and in synchronous modes.
 142:.\stm32f4periph\src/stm32f4xx_usart.c ****    - For the asynchronous mode only these parameters can be configured: 
 143:.\stm32f4periph\src/stm32f4xx_usart.c ****         - Baud Rate
 144:.\stm32f4periph\src/stm32f4xx_usart.c ****         - Word Length 
 145:.\stm32f4periph\src/stm32f4xx_usart.c ****         - Stop Bit
 146:.\stm32f4periph\src/stm32f4xx_usart.c ****         - Parity: If the parity is enabled, then the MSB bit of the data written
 147:.\stm32f4periph\src/stm32f4xx_usart.c ****           in the data register is transmitted but is changed by the parity bit.
 148:.\stm32f4periph\src/stm32f4xx_usart.c ****           Depending on the frame length defined by the M bit (8-bits or 9-bits),
 149:.\stm32f4periph\src/stm32f4xx_usart.c ****           the possible USART frame formats are as listed in the following table:
 150:.\stm32f4periph\src/stm32f4xx_usart.c ****    +-------------------------------------------------------------+     
 151:.\stm32f4periph\src/stm32f4xx_usart.c ****    |   M bit |  PCE bit  |            USART frame                |
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 5


 152:.\stm32f4periph\src/stm32f4xx_usart.c ****    |---------------------|---------------------------------------|             
 153:.\stm32f4periph\src/stm32f4xx_usart.c ****    |    0    |    0      |    | SB | 8 bit data | STB |          |
 154:.\stm32f4periph\src/stm32f4xx_usart.c ****    |---------|-----------|---------------------------------------|  
 155:.\stm32f4periph\src/stm32f4xx_usart.c ****    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 156:.\stm32f4periph\src/stm32f4xx_usart.c ****    |---------|-----------|---------------------------------------|  
 157:.\stm32f4periph\src/stm32f4xx_usart.c ****    |    1    |    0      |    | SB | 9 bit data | STB |          |
 158:.\stm32f4periph\src/stm32f4xx_usart.c ****    |---------|-----------|---------------------------------------|  
 159:.\stm32f4periph\src/stm32f4xx_usart.c ****    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 160:.\stm32f4periph\src/stm32f4xx_usart.c ****    +-------------------------------------------------------------+            
 161:.\stm32f4periph\src/stm32f4xx_usart.c ****         - Hardware flow control
 162:.\stm32f4periph\src/stm32f4xx_usart.c ****         - Receiver/transmitter modes
 163:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 164:.\stm32f4periph\src/stm32f4xx_usart.c ****   The USART_Init() function follows the USART  asynchronous configuration procedure
 165:.\stm32f4periph\src/stm32f4xx_usart.c ****   (details for the procedure are available in reference manual (RM0090)).
 166:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 167:.\stm32f4periph\src/stm32f4xx_usart.c ****   - For the synchronous mode in addition to the asynchronous mode parameters these 
 168:.\stm32f4periph\src/stm32f4xx_usart.c ****     parameters should be also configured:
 169:.\stm32f4periph\src/stm32f4xx_usart.c ****         - USART Clock Enabled
 170:.\stm32f4periph\src/stm32f4xx_usart.c ****         - USART polarity
 171:.\stm32f4periph\src/stm32f4xx_usart.c ****         - USART phase
 172:.\stm32f4periph\src/stm32f4xx_usart.c ****         - USART LastBit
 173:.\stm32f4periph\src/stm32f4xx_usart.c ****   
 174:.\stm32f4periph\src/stm32f4xx_usart.c ****   These parameters can be configured using the USART_ClockInit() function.
 175:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 176:.\stm32f4periph\src/stm32f4xx_usart.c **** @endverbatim
 177:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @{
 178:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 179:.\stm32f4periph\src/stm32f4xx_usart.c ****   
 180:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
 181:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @brief  Deinitializes the USARTx peripheral registers to their default reset values.
 182:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 183:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         UART peripheral.
 184:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @retval None
 185:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 186:.\stm32f4periph\src/stm32f4xx_usart.c **** void USART_DeInit(USART_TypeDef* USARTx)
 187:.\stm32f4periph\src/stm32f4xx_usart.c **** {
  78              		.loc 1 187 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              	.LVL0:
  83 0000 08B5     		push	{r3, lr}	@
  84              	.LCFI0:
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 3, -8
  87              		.cfi_offset 14, -4
 188:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Check the parameters */
 189:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 190:.\stm32f4periph\src/stm32f4xx_usart.c ****   if (USARTx == USART1)
  88              		.loc 1 190 0
  89 0002 234B     		ldr	r3, .L10	@ tmp135,
  90 0004 9842     		cmp	r0, r3	@ USARTx, tmp135
  91 0006 05D1     		bne	.L2	@,
 191:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
 192:.\stm32f4periph\src/stm32f4xx_usart.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART1, ENABLE);
  92              		.loc 1 192 0
  93 0008 1020     		movs	r0, #16	@,
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 6


  94              	.LVL1:
  95 000a 0121     		movs	r1, #1	@,
  96 000c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd	@
  97              	.LVL2:
 193:.\stm32f4periph\src/stm32f4xx_usart.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART1, DISABLE);
  98              		.loc 1 193 0
  99 0010 1020     		movs	r0, #16	@,
 100 0012 37E0     		b	.L8	@
 101              	.LVL3:
 102              	.L2:
 194:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
 195:.\stm32f4periph\src/stm32f4xx_usart.c ****   else if (USARTx == USART2)
 103              		.loc 1 195 0
 104 0014 1F4B     		ldr	r3, .L10+4	@ tmp136,
 105 0016 9842     		cmp	r0, r3	@ USARTx, tmp136
 106 0018 07D1     		bne	.L3	@,
 196:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
 197:.\stm32f4periph\src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART2, ENABLE);
 107              		.loc 1 197 0
 108 001a 4FF40030 		mov	r0, #131072	@,
 109              	.LVL4:
 110 001e 0121     		movs	r1, #1	@,
 111 0020 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd	@
 112              	.LVL5:
 198:.\stm32f4periph\src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART2, DISABLE);
 113              		.loc 1 198 0
 114 0024 4FF40030 		mov	r0, #131072	@,
 115 0028 09E0     		b	.L9	@
 116              	.LVL6:
 117              	.L3:
 199:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
 200:.\stm32f4periph\src/stm32f4xx_usart.c ****   else if (USARTx == USART3)
 118              		.loc 1 200 0
 119 002a 1B4B     		ldr	r3, .L10+8	@ tmp137,
 120 002c 9842     		cmp	r0, r3	@ USARTx, tmp137
 121 002e 0BD1     		bne	.L4	@,
 201:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
 202:.\stm32f4periph\src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART3, ENABLE);
 122              		.loc 1 202 0
 123 0030 4FF48020 		mov	r0, #262144	@,
 124              	.LVL7:
 125 0034 0121     		movs	r1, #1	@,
 126 0036 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd	@
 127              	.LVL8:
 203:.\stm32f4periph\src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART3, DISABLE);
 128              		.loc 1 203 0
 129 003a 4FF48020 		mov	r0, #262144	@,
 130              	.L9:
 131 003e 0021     		movs	r1, #0	@,
 204:.\stm32f4periph\src/stm32f4xx_usart.c ****   }    
 205:.\stm32f4periph\src/stm32f4xx_usart.c ****   else if (USARTx == UART4)
 206:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
 207:.\stm32f4periph\src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, ENABLE);
 208:.\stm32f4periph\src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, DISABLE);
 209:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
 210:.\stm32f4periph\src/stm32f4xx_usart.c ****   else if (USARTx == UART5)
 211:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 7


 212:.\stm32f4periph\src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, ENABLE);
 213:.\stm32f4periph\src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, DISABLE);
 214:.\stm32f4periph\src/stm32f4xx_usart.c ****   }     
 215:.\stm32f4periph\src/stm32f4xx_usart.c ****   else
 216:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
 217:.\stm32f4periph\src/stm32f4xx_usart.c ****     if (USARTx == USART6)
 218:.\stm32f4periph\src/stm32f4xx_usart.c ****     { 
 219:.\stm32f4periph\src/stm32f4xx_usart.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART6, ENABLE);
 220:.\stm32f4periph\src/stm32f4xx_usart.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART6, DISABLE);
 221:.\stm32f4periph\src/stm32f4xx_usart.c ****     }
 222:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
 223:.\stm32f4periph\src/stm32f4xx_usart.c **** }
 132              		.loc 1 223 0
 133 0040 BDE80840 		pop	{r3, lr}	@
 203:.\stm32f4periph\src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART3, DISABLE);
 134              		.loc 1 203 0
 135 0044 FFF7FEBF 		b	RCC_APB1PeriphResetCmd	@
 136              	.LVL9:
 137              	.L4:
 205:.\stm32f4periph\src/stm32f4xx_usart.c ****   else if (USARTx == UART4)
 138              		.loc 1 205 0
 139 0048 144B     		ldr	r3, .L10+12	@ tmp138,
 140 004a 9842     		cmp	r0, r3	@ USARTx, tmp138
 141 004c 07D1     		bne	.L5	@,
 207:.\stm32f4periph\src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, ENABLE);
 142              		.loc 1 207 0
 143 004e 4FF40020 		mov	r0, #524288	@,
 144              	.LVL10:
 145 0052 0121     		movs	r1, #1	@,
 146 0054 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd	@
 147              	.LVL11:
 208:.\stm32f4periph\src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, DISABLE);
 148              		.loc 1 208 0
 149 0058 4FF40020 		mov	r0, #524288	@,
 150 005c EFE7     		b	.L9	@
 151              	.LVL12:
 152              	.L5:
 210:.\stm32f4periph\src/stm32f4xx_usart.c ****   else if (USARTx == UART5)
 153              		.loc 1 210 0
 154 005e 104B     		ldr	r3, .L10+16	@ tmp139,
 155 0060 9842     		cmp	r0, r3	@ USARTx, tmp139
 156 0062 07D1     		bne	.L6	@,
 212:.\stm32f4periph\src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, ENABLE);
 157              		.loc 1 212 0
 158 0064 4FF48010 		mov	r0, #1048576	@,
 159              	.LVL13:
 160 0068 0121     		movs	r1, #1	@,
 161 006a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd	@
 162              	.LVL14:
 213:.\stm32f4periph\src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, DISABLE);
 163              		.loc 1 213 0
 164 006e 4FF48010 		mov	r0, #1048576	@,
 165 0072 E4E7     		b	.L9	@
 166              	.LVL15:
 167              	.L6:
 217:.\stm32f4periph\src/stm32f4xx_usart.c ****     if (USARTx == USART6)
 168              		.loc 1 217 0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 8


 169 0074 0B4B     		ldr	r3, .L10+20	@ tmp140,
 170 0076 9842     		cmp	r0, r3	@ USARTx, tmp140
 171 0078 09D1     		bne	.L1	@,
 219:.\stm32f4periph\src/stm32f4xx_usart.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART6, ENABLE);
 172              		.loc 1 219 0
 173 007a 2020     		movs	r0, #32	@,
 174              	.LVL16:
 175 007c 0121     		movs	r1, #1	@,
 176 007e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd	@
 177              	.LVL17:
 220:.\stm32f4periph\src/stm32f4xx_usart.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART6, DISABLE);
 178              		.loc 1 220 0
 179 0082 2020     		movs	r0, #32	@,
 180              	.L8:
 181 0084 0021     		movs	r1, #0	@,
 182              		.loc 1 223 0
 183 0086 BDE80840 		pop	{r3, lr}	@
 220:.\stm32f4periph\src/stm32f4xx_usart.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART6, DISABLE);
 184              		.loc 1 220 0
 185 008a FFF7FEBF 		b	RCC_APB2PeriphResetCmd	@
 186              	.LVL18:
 187              	.L1:
 188 008e 08BD     		pop	{r3, pc}	@
 189              	.L11:
 190              		.align	2
 191              	.L10:
 192 0090 00100140 		.word	1073811456
 193 0094 00440040 		.word	1073759232
 194 0098 00480040 		.word	1073760256
 195 009c 004C0040 		.word	1073761280
 196 00a0 00500040 		.word	1073762304
 197 00a4 00140140 		.word	1073812480
 198              		.cfi_endproc
 199              	.LFE110:
 200              		.size	USART_DeInit, .-USART_DeInit
 201              		.align	1
 202              		.global	USART_Init
 203              		.thumb
 204              		.thumb_func
 205              		.type	USART_Init, %function
 206              	USART_Init:
 207              	.LFB111:
 224:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 225:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
 226:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @brief  Initializes the USARTx peripheral according to the specified
 227:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         parameters in the USART_InitStruct .
 228:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 229:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         UART peripheral.
 230:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USART_InitStruct: pointer to a USART_InitTypeDef structure that contains
 231:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         the configuration information for the specified USART peripheral.
 232:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @retval None
 233:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 234:.\stm32f4periph\src/stm32f4xx_usart.c **** void USART_Init(USART_TypeDef* USARTx, USART_InitTypeDef* USART_InitStruct)
 235:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 208              		.loc 1 235 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 9


 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              	.LVL19:
 236:.\stm32f4periph\src/stm32f4xx_usart.c ****   uint32_t tmpreg = 0x00, apbclock = 0x00;
 237:.\stm32f4periph\src/stm32f4xx_usart.c ****   uint32_t integerdivider = 0x00;
 238:.\stm32f4periph\src/stm32f4xx_usart.c ****   uint32_t fractionaldivider = 0x00;
 239:.\stm32f4periph\src/stm32f4xx_usart.c ****   RCC_ClocksTypeDef RCC_ClocksStatus;
 240:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 241:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Check the parameters */
 242:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 243:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_BAUDRATE(USART_InitStruct->USART_BaudRate));  
 244:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_WORD_LENGTH(USART_InitStruct->USART_WordLength));
 245:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_STOPBITS(USART_InitStruct->USART_StopBits));
 246:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_PARITY(USART_InitStruct->USART_Parity));
 247:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_MODE(USART_InitStruct->USART_Mode));
 248:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_HARDWARE_FLOW_CONTROL(USART_InitStruct->USART_HardwareFlowControl));
 249:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 250:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* The hardware flow control is available only for USART1, USART2, USART3 and USART6 */
 251:.\stm32f4periph\src/stm32f4xx_usart.c ****   if (USART_InitStruct->USART_HardwareFlowControl != USART_HardwareFlowControl_None)
 252:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
 253:.\stm32f4periph\src/stm32f4xx_usart.c ****     assert_param(IS_USART_1236_PERIPH(USARTx));
 254:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
 255:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 256:.\stm32f4periph\src/stm32f4xx_usart.c **** /*---------------------------- USART CR2 Configuration -----------------------*/
 257:.\stm32f4periph\src/stm32f4xx_usart.c ****   tmpreg = USARTx->CR2;
 213              		.loc 1 257 0
 214 00a8 038A     		ldrh	r3, [r0, #16]	@, USARTx_10(D)->CR2
 258:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 259:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Clear STOP[13:12] bits */
 260:.\stm32f4periph\src/stm32f4xx_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)USART_CR2_STOP);
 261:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 262:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Configure the USART Stop Bits, Clock, CPOL, CPHA and LastBit :
 263:.\stm32f4periph\src/stm32f4xx_usart.c ****       Set STOP[13:12] bits according to USART_StopBits value */
 264:.\stm32f4periph\src/stm32f4xx_usart.c ****   tmpreg |= (uint32_t)USART_InitStruct->USART_StopBits;
 215              		.loc 1 264 0
 216 00aa CA88     		ldrh	r2, [r1, #6]	@ USART_InitStruct_8(D)->USART_StopBits, USART_InitStruct_8(D)->USART_StopBits
 257:.\stm32f4periph\src/stm32f4xx_usart.c ****   tmpreg = USARTx->CR2;
 217              		.loc 1 257 0
 218 00ac 9BB2     		uxth	r3, r3	@ D.7613, USARTx_10(D)->CR2
 219              	.LVL20:
 260:.\stm32f4periph\src/stm32f4xx_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)USART_CR2_STOP);
 220              		.loc 1 260 0
 221 00ae 23F44053 		bic	r3, r3, #12288	@ tmpreg, D.7613,
 222              	.LVL21:
 235:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 223              		.loc 1 235 0
 224 00b2 30B5     		push	{r4, r5, lr}	@
 225              	.LCFI1:
 226              		.cfi_def_cfa_offset 12
 227              		.cfi_offset 4, -12
 228              		.cfi_offset 5, -8
 229              		.cfi_offset 14, -4
 265:.\stm32f4periph\src/stm32f4xx_usart.c ****   
 266:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Write to USART CR2 */
 267:.\stm32f4periph\src/stm32f4xx_usart.c ****   USARTx->CR2 = (uint16_t)tmpreg;
 230              		.loc 1 267 0
 231 00b4 1343     		orrs	r3, r3, r2	@, D.7616, tmpreg, USART_InitStruct_8(D)->USART_StopBits
 232              	.LVL22:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 10


 235:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 233              		.loc 1 235 0
 234 00b6 0D46     		mov	r5, r1	@ USART_InitStruct, USART_InitStruct
 235              		.loc 1 267 0
 236 00b8 0382     		strh	r3, [r0, #16]	@ movhi	@ D.7616, USARTx_10(D)->CR2
 268:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 269:.\stm32f4periph\src/stm32f4xx_usart.c **** /*---------------------------- USART CR1 Configuration -----------------------*/
 270:.\stm32f4periph\src/stm32f4xx_usart.c ****   tmpreg = USARTx->CR1;
 237              		.loc 1 270 0
 238 00ba 8389     		ldrh	r3, [r0, #12]	@, USARTx_10(D)->CR1
 239              	.LVL23:
 271:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 272:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Clear M, PCE, PS, TE and RE bits */
 273:.\stm32f4periph\src/stm32f4xx_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)CR1_CLEAR_MASK);
 274:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 275:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Configure the USART Word Length, Parity and mode: 
 276:.\stm32f4periph\src/stm32f4xx_usart.c ****      Set the M bits according to USART_WordLength value 
 277:.\stm32f4periph\src/stm32f4xx_usart.c ****      Set PCE and PS bits according to USART_Parity value
 278:.\stm32f4periph\src/stm32f4xx_usart.c ****      Set TE and RE bits according to USART_Mode value */
 279:.\stm32f4periph\src/stm32f4xx_usart.c ****   tmpreg |= (uint32_t)USART_InitStruct->USART_WordLength | USART_InitStruct->USART_Parity |
 240              		.loc 1 279 0
 241 00bc 0989     		ldrh	r1, [r1, #8]	@, USART_InitStruct_8(D)->USART_Parity
 242              	.LVL24:
 243 00be AA88     		ldrh	r2, [r5, #4]	@, USART_InitStruct_8(D)->USART_WordLength
 273:.\stm32f4periph\src/stm32f4xx_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)CR1_CLEAR_MASK);
 244              		.loc 1 273 0
 245 00c0 23F4B053 		bic	r3, r3, #5632	@ tmpreg, USARTx_10(D)->CR1,
 246              	.LVL25:
 247              		.loc 1 279 0
 248 00c4 0A43     		orrs	r2, r2, r1	@, tmp206, USART_InitStruct_8(D)->USART_WordLength, USART_InitStruct_8(D)->USART_P
 249 00c6 6989     		ldrh	r1, [r5, #10]	@, USART_InitStruct_8(D)->USART_Mode
 273:.\stm32f4periph\src/stm32f4xx_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)CR1_CLEAR_MASK);
 250              		.loc 1 273 0
 251 00c8 23F00C03 		bic	r3, r3, #12	@ tmpreg, tmpreg,
 252 00cc 1B04     		lsls	r3, r3, #16	@ tmpreg, tmpreg,
 253              		.loc 1 279 0
 254 00ce 0A43     		orrs	r2, r2, r1	@, tmp209, tmp206, USART_InitStruct_8(D)->USART_Mode
 273:.\stm32f4periph\src/stm32f4xx_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)CR1_CLEAR_MASK);
 255              		.loc 1 273 0
 256 00d0 1B0C     		lsrs	r3, r3, #16	@ tmpreg, tmpreg,
 257              		.loc 1 279 0
 258 00d2 92B2     		uxth	r2, r2	@ tmp210, tmp209
 280:.\stm32f4periph\src/stm32f4xx_usart.c ****             USART_InitStruct->USART_Mode;
 281:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 282:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Write to USART CR1 */
 283:.\stm32f4periph\src/stm32f4xx_usart.c ****   USARTx->CR1 = (uint16_t)tmpreg;
 259              		.loc 1 283 0
 260 00d4 1343     		orrs	r3, r3, r2	@, D.7616, tmpreg, tmp210
 261 00d6 8381     		strh	r3, [r0, #12]	@ movhi	@ D.7616, USARTx_10(D)->CR1
 284:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 285:.\stm32f4periph\src/stm32f4xx_usart.c **** /*---------------------------- USART CR3 Configuration -----------------------*/  
 286:.\stm32f4periph\src/stm32f4xx_usart.c ****   tmpreg = USARTx->CR3;
 262              		.loc 1 286 0
 263 00d8 838A     		ldrh	r3, [r0, #20]	@, USARTx_10(D)->CR3
 287:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 288:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Clear CTSE and RTSE bits */
 289:.\stm32f4periph\src/stm32f4xx_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)CR3_CLEAR_MASK);
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 11


 290:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 291:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Configure the USART HFC : 
 292:.\stm32f4periph\src/stm32f4xx_usart.c ****       Set CTSE and RTSE bits according to USART_HardwareFlowControl value */
 293:.\stm32f4periph\src/stm32f4xx_usart.c ****   tmpreg |= USART_InitStruct->USART_HardwareFlowControl;
 264              		.loc 1 293 0
 265 00da AA89     		ldrh	r2, [r5, #12]	@ USART_InitStruct_8(D)->USART_HardwareFlowControl, USART_InitStruct_8(D)->USAR
 286:.\stm32f4periph\src/stm32f4xx_usart.c ****   tmpreg = USARTx->CR3;
 266              		.loc 1 286 0
 267 00dc 9BB2     		uxth	r3, r3	@ D.7624, USARTx_10(D)->CR3
 268              	.LVL26:
 289:.\stm32f4periph\src/stm32f4xx_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)CR3_CLEAR_MASK);
 269              		.loc 1 289 0
 270 00de 23F44073 		bic	r3, r3, #768	@ tmpreg, D.7624,
 271              	.LVL27:
 294:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 295:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Write to USART CR3 */
 296:.\stm32f4periph\src/stm32f4xx_usart.c ****   USARTx->CR3 = (uint16_t)tmpreg;
 272              		.loc 1 296 0
 273 00e2 1343     		orrs	r3, r3, r2	@, D.7616, tmpreg, USART_InitStruct_8(D)->USART_HardwareFlowControl
 274              	.LVL28:
 235:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 275              		.loc 1 235 0
 276 00e4 85B0     		sub	sp, sp, #20	@,,
 277              	.LCFI2:
 278              		.cfi_def_cfa_offset 32
 279              		.loc 1 296 0
 280 00e6 8382     		strh	r3, [r0, #20]	@ movhi	@ D.7616, USARTx_10(D)->CR3
 235:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 281              		.loc 1 235 0
 282 00e8 0446     		mov	r4, r0	@ USARTx, USARTx
 297:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 298:.\stm32f4periph\src/stm32f4xx_usart.c **** /*---------------------------- USART BRR Configuration -----------------------*/
 299:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Configure the USART Baud Rate */
 300:.\stm32f4periph\src/stm32f4xx_usart.c ****   RCC_GetClocksFreq(&RCC_ClocksStatus);
 283              		.loc 1 300 0
 284 00ea 6846     		mov	r0, sp	@,
 285              	.LVL29:
 286 00ec FFF7FEFF 		bl	RCC_GetClocksFreq	@
 287              	.LVL30:
 301:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 302:.\stm32f4periph\src/stm32f4xx_usart.c ****   if ((USARTx == USART1) || (USARTx == USART6))
 288              		.loc 1 302 0
 289 00f0 194B     		ldr	r3, .L22	@ tmp219,
 290 00f2 9C42     		cmp	r4, r3	@ USARTx, tmp219
 291 00f4 03D0     		beq	.L13	@,
 292              		.loc 1 302 0 is_stmt 0 discriminator 1
 293 00f6 03F58063 		add	r3, r3, #1024	@ tmp220, tmp220,
 294 00fa 9C42     		cmp	r4, r3	@ USARTx, tmp220
 295 00fc 01D1     		bne	.L14	@,
 296              	.L13:
 303:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
 304:.\stm32f4periph\src/stm32f4xx_usart.c ****     apbclock = RCC_ClocksStatus.PCLK2_Frequency;
 297              		.loc 1 304 0 is_stmt 1
 298 00fe 039B     		ldr	r3, [sp, #12]	@ apbclock, RCC_ClocksStatus.PCLK2_Frequency
 299              	.LVL31:
 300 0100 00E0     		b	.L15	@
 301              	.LVL32:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 12


 302              	.L14:
 305:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
 306:.\stm32f4periph\src/stm32f4xx_usart.c ****   else
 307:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
 308:.\stm32f4periph\src/stm32f4xx_usart.c ****     apbclock = RCC_ClocksStatus.PCLK1_Frequency;
 303              		.loc 1 308 0
 304 0102 029B     		ldr	r3, [sp, #8]	@ apbclock, RCC_ClocksStatus.PCLK1_Frequency
 305              	.LVL33:
 306              	.L15:
 309:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
 310:.\stm32f4periph\src/stm32f4xx_usart.c ****   
 311:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Determine the integer part */
 312:.\stm32f4periph\src/stm32f4xx_usart.c ****   if ((USARTx->CR1 & USART_CR1_OVER8) != 0)
 307              		.loc 1 312 0
 308 0104 A289     		ldrh	r2, [r4, #12]	@, USARTx_10(D)->CR1
 309 0106 12B2     		sxth	r2, r2	@ D.7630, USARTx_10(D)->CR1
 310 0108 002A     		cmp	r2, #0	@ D.7630,
 311 010a 4FF01901 		mov	r1, #25	@ tmp254,
 312 010e 2A68     		ldr	r2, [r5, #0]	@ USART_InitStruct_8(D)->USART_BaudRate, USART_InitStruct_8(D)->USART_BaudRate
 313:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
 314:.\stm32f4periph\src/stm32f4xx_usart.c ****     /* Integer part computing in case Oversampling mode is 8 Samples */
 315:.\stm32f4periph\src/stm32f4xx_usart.c ****     integerdivider = ((25 * apbclock) / (2 * (USART_InitStruct->USART_BaudRate)));    
 313              		.loc 1 315 0
 314 0110 01FB03F1 		mul	r1, r1, r3	@ tmp224, tmp254, apbclock
 312:.\stm32f4periph\src/stm32f4xx_usart.c ****   if ((USARTx->CR1 & USART_CR1_OVER8) != 0)
 315              		.loc 1 312 0
 316 0114 01DA     		bge	.L16	@,
 317              		.loc 1 315 0
 318 0116 5200     		lsls	r2, r2, #1	@ tmp226, USART_InitStruct_8(D)->USART_BaudRate,
 319 0118 00E0     		b	.L20	@
 320              	.L16:
 316:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
 317:.\stm32f4periph\src/stm32f4xx_usart.c ****   else /* if ((USARTx->CR1 & USART_CR1_OVER8) == 0) */
 318:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
 319:.\stm32f4periph\src/stm32f4xx_usart.c ****     /* Integer part computing in case Oversampling mode is 16 Samples */
 320:.\stm32f4periph\src/stm32f4xx_usart.c ****     integerdivider = ((25 * apbclock) / (4 * (USART_InitStruct->USART_BaudRate)));    
 321              		.loc 1 320 0
 322 011a 9200     		lsls	r2, r2, #2	@ tmp230, USART_InitStruct_8(D)->USART_BaudRate,
 323              	.L20:
 321:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
 322:.\stm32f4periph\src/stm32f4xx_usart.c ****   tmpreg = (integerdivider / 100) << 4;
 324              		.loc 1 322 0
 325 011c 6423     		movs	r3, #100	@ tmp234,
 326              	.LVL34:
 320:.\stm32f4periph\src/stm32f4xx_usart.c ****     integerdivider = ((25 * apbclock) / (4 * (USART_InitStruct->USART_BaudRate)));    
 327              		.loc 1 320 0
 328 011e B1FBF2F1 		udiv	r1, r1, r2	@ integerdivider, tmp228, tmp230
 329              	.LVL35:
 330              		.loc 1 322 0
 331 0122 B1FBF3F2 		udiv	r2, r1, r3	@ tmp233, integerdivider, tmp234
 332 0126 1201     		lsls	r2, r2, #4	@ tmpreg, tmp233,
 333              	.LVL36:
 323:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 324:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Determine the fractional part */
 325:.\stm32f4periph\src/stm32f4xx_usart.c ****   fractionaldivider = integerdivider - (100 * (tmpreg >> 4));
 334              		.loc 1 325 0
 335 0128 1009     		lsrs	r0, r2, #4	@ tmp235, tmpreg,
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 13


 336 012a 03FB1011 		mls	r1, r3, r0, r1	@ fractionaldivider, tmp234, tmp235, integerdivider
 337              	.LVL37:
 326:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 327:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Implement the fractional part in the register */
 328:.\stm32f4periph\src/stm32f4xx_usart.c ****   if ((USARTx->CR1 & USART_CR1_OVER8) != 0)
 338              		.loc 1 328 0
 339 012e A089     		ldrh	r0, [r4, #12]	@, USARTx_10(D)->CR1
 340 0130 00B2     		sxth	r0, r0	@ D.7642, USARTx_10(D)->CR1
 341 0132 0028     		cmp	r0, #0	@ D.7642,
 342 0134 06DA     		bge	.L18	@,
 329:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
 330:.\stm32f4periph\src/stm32f4xx_usart.c ****     tmpreg |= ((((fractionaldivider * 8) + 50) / 100)) & ((uint8_t)0x07);
 343              		.loc 1 330 0
 344 0136 C900     		lsls	r1, r1, #3	@ tmp241, fractionaldivider,
 345              	.LVL38:
 346 0138 3231     		adds	r1, r1, #50	@ tmp242, tmp241,
 347 013a B1FBF3F3 		udiv	r3, r1, r3	@ tmp244, tmp242, tmp234
 348 013e 03F00703 		and	r3, r3, #7	@ tmp246, tmp244,
 349 0142 05E0     		b	.L21	@
 350              	.LVL39:
 351              	.L18:
 331:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
 332:.\stm32f4periph\src/stm32f4xx_usart.c ****   else /* if ((USARTx->CR1 & USART_CR1_OVER8) == 0) */
 333:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
 334:.\stm32f4periph\src/stm32f4xx_usart.c ****     tmpreg |= ((((fractionaldivider * 16) + 50) / 100)) & ((uint8_t)0x0F);
 352              		.loc 1 334 0
 353 0144 0901     		lsls	r1, r1, #4	@ tmp247, fractionaldivider,
 354              	.LVL40:
 355 0146 3231     		adds	r1, r1, #50	@ tmp248, tmp247,
 356 0148 B1FBF3F3 		udiv	r3, r1, r3	@ tmp250, tmp248, tmp234
 357 014c 03F00F03 		and	r3, r3, #15	@ tmp252, tmp250,
 358              	.L21:
 359 0150 1A43     		orrs	r2, r2, r3	@, tmpreg, tmpreg, tmp252
 360              	.LVL41:
 335:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
 336:.\stm32f4periph\src/stm32f4xx_usart.c ****   
 337:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Write to USART BRR register */
 338:.\stm32f4periph\src/stm32f4xx_usart.c ****   USARTx->BRR = (uint16_t)tmpreg;
 361              		.loc 1 338 0
 362 0152 2281     		strh	r2, [r4, #8]	@ movhi	@ D.7616, USARTx_10(D)->BRR
 339:.\stm32f4periph\src/stm32f4xx_usart.c **** }
 363              		.loc 1 339 0
 364 0154 05B0     		add	sp, sp, #20	@,,
 365 0156 30BD     		pop	{r4, r5, pc}
 366              	.L23:
 367              		.align	2
 368              	.L22:
 369 0158 00100140 		.word	1073811456
 370              		.cfi_endproc
 371              	.LFE111:
 372              		.size	USART_Init, .-USART_Init
 373              		.align	1
 374              		.global	USART_StructInit
 375              		.thumb
 376              		.thumb_func
 377              		.type	USART_StructInit, %function
 378              	USART_StructInit:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 14


 379              	.LFB112:
 340:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 341:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
 342:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @brief  Fills each USART_InitStruct member with its default value.
 343:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USART_InitStruct: pointer to a USART_InitTypeDef structure which will
 344:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         be initialized.
 345:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @retval None
 346:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 347:.\stm32f4periph\src/stm32f4xx_usart.c **** void USART_StructInit(USART_InitTypeDef* USART_InitStruct)
 348:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 380              		.loc 1 348 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384              		@ link register save eliminated.
 385              	.LVL42:
 349:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* USART_InitStruct members default value */
 350:.\stm32f4periph\src/stm32f4xx_usart.c ****   USART_InitStruct->USART_BaudRate = 9600;
 386              		.loc 1 350 0
 387 015c 4FF41653 		mov	r3, #9600	@ tmp135,
 388 0160 0360     		str	r3, [r0, #0]	@ tmp135, USART_InitStruct_1(D)->USART_BaudRate
 351:.\stm32f4periph\src/stm32f4xx_usart.c ****   USART_InitStruct->USART_WordLength = USART_WordLength_8b;
 352:.\stm32f4periph\src/stm32f4xx_usart.c ****   USART_InitStruct->USART_StopBits = USART_StopBits_1;
 353:.\stm32f4periph\src/stm32f4xx_usart.c ****   USART_InitStruct->USART_Parity = USART_Parity_No ;
 354:.\stm32f4periph\src/stm32f4xx_usart.c ****   USART_InitStruct->USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 389              		.loc 1 354 0
 390 0162 0C22     		movs	r2, #12	@ tmp143,
 351:.\stm32f4periph\src/stm32f4xx_usart.c ****   USART_InitStruct->USART_WordLength = USART_WordLength_8b;
 391              		.loc 1 351 0
 392 0164 0023     		movs	r3, #0	@ tmp137,
 393 0166 8380     		strh	r3, [r0, #4]	@ movhi	@ tmp137, USART_InitStruct_1(D)->USART_WordLength
 352:.\stm32f4periph\src/stm32f4xx_usart.c ****   USART_InitStruct->USART_StopBits = USART_StopBits_1;
 394              		.loc 1 352 0
 395 0168 C380     		strh	r3, [r0, #6]	@ movhi	@ tmp137, USART_InitStruct_1(D)->USART_StopBits
 353:.\stm32f4periph\src/stm32f4xx_usart.c ****   USART_InitStruct->USART_Parity = USART_Parity_No ;
 396              		.loc 1 353 0
 397 016a 0381     		strh	r3, [r0, #8]	@ movhi	@ tmp137, USART_InitStruct_1(D)->USART_Parity
 398              		.loc 1 354 0
 399 016c 4281     		strh	r2, [r0, #10]	@ movhi	@ tmp143, USART_InitStruct_1(D)->USART_Mode
 355:.\stm32f4periph\src/stm32f4xx_usart.c ****   USART_InitStruct->USART_HardwareFlowControl = USART_HardwareFlowControl_None;  
 400              		.loc 1 355 0
 401 016e 8381     		strh	r3, [r0, #12]	@ movhi	@ tmp137, USART_InitStruct_1(D)->USART_HardwareFlowControl
 402 0170 7047     		bx	lr	@
 403              		.cfi_endproc
 404              	.LFE112:
 405              		.size	USART_StructInit, .-USART_StructInit
 406              		.align	1
 407              		.global	USART_ClockInit
 408              		.thumb
 409              		.thumb_func
 410              		.type	USART_ClockInit, %function
 411              	USART_ClockInit:
 412              	.LFB113:
 356:.\stm32f4periph\src/stm32f4xx_usart.c **** }
 357:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 358:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
 359:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @brief  Initializes the USARTx peripheral Clock according to the 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 15


 360:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         specified parameters in the USART_ClockInitStruct .
 361:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3 or 6 to select the USART peripheral.
 362:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USART_ClockInitStruct: pointer to a USART_ClockInitTypeDef structure that
 363:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         contains the configuration information for the specified  USART peripheral.
 364:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @note   The Smart Card and Synchronous modes are not available for UART4 and UART5.    
 365:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @retval None
 366:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 367:.\stm32f4periph\src/stm32f4xx_usart.c **** void USART_ClockInit(USART_TypeDef* USARTx, USART_ClockInitTypeDef* USART_ClockInitStruct)
 368:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 413              		.loc 1 368 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417              	.LVL43:
 369:.\stm32f4periph\src/stm32f4xx_usart.c ****   uint32_t tmpreg = 0x00;
 370:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Check the parameters */
 371:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_1236_PERIPH(USARTx));
 372:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_CLOCK(USART_ClockInitStruct->USART_Clock));
 373:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_CPOL(USART_ClockInitStruct->USART_CPOL));
 374:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_CPHA(USART_ClockInitStruct->USART_CPHA));
 375:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_LASTBIT(USART_ClockInitStruct->USART_LastBit));
 376:.\stm32f4periph\src/stm32f4xx_usart.c ****   
 377:.\stm32f4periph\src/stm32f4xx_usart.c **** /*---------------------------- USART CR2 Configuration -----------------------*/
 378:.\stm32f4periph\src/stm32f4xx_usart.c ****   tmpreg = USARTx->CR2;
 379:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Clear CLKEN, CPOL, CPHA and LBCL bits */
 380:.\stm32f4periph\src/stm32f4xx_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)CR2_CLOCK_CLEAR_MASK);
 381:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Configure the USART Clock, CPOL, CPHA and LastBit ------------*/
 382:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Set CLKEN bit according to USART_Clock value */
 383:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Set CPOL bit according to USART_CPOL value */
 384:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Set CPHA bit according to USART_CPHA value */
 385:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Set LBCL bit according to USART_LastBit value */
 386:.\stm32f4periph\src/stm32f4xx_usart.c ****   tmpreg |= (uint32_t)USART_ClockInitStruct->USART_Clock | USART_ClockInitStruct->USART_CPOL | 
 387:.\stm32f4periph\src/stm32f4xx_usart.c ****                  USART_ClockInitStruct->USART_CPHA | USART_ClockInitStruct->USART_LastBit;
 418              		.loc 1 387 0
 419 0172 0B88     		ldrh	r3, [r1, #0]	@, USART_ClockInitStruct_6(D)->USART_Clock
 378:.\stm32f4periph\src/stm32f4xx_usart.c ****   tmpreg = USARTx->CR2;
 420              		.loc 1 378 0
 421 0174 028A     		ldrh	r2, [r0, #16]	@, USARTx_2(D)->CR2
 368:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 422              		.loc 1 368 0
 423 0176 10B5     		push	{r4, lr}	@
 424              	.LCFI3:
 425              		.cfi_def_cfa_offset 8
 426              		.cfi_offset 4, -8
 427              		.cfi_offset 14, -4
 428              		.loc 1 387 0
 429 0178 4C88     		ldrh	r4, [r1, #2]	@, USART_ClockInitStruct_6(D)->USART_CPOL
 430 017a 2343     		orrs	r3, r3, r4	@, tmp153, USART_ClockInitStruct_6(D)->USART_Clock, USART_ClockInitStruct_6(D)->US
 431 017c 8C88     		ldrh	r4, [r1, #4]	@, USART_ClockInitStruct_6(D)->USART_CPHA
 432 017e C988     		ldrh	r1, [r1, #6]	@, USART_ClockInitStruct_6(D)->USART_LastBit
 433              	.LVL44:
 434 0180 2343     		orrs	r3, r3, r4	@, tmp156, tmp153, USART_ClockInitStruct_6(D)->USART_CPHA
 378:.\stm32f4periph\src/stm32f4xx_usart.c ****   tmpreg = USARTx->CR2;
 435              		.loc 1 378 0
 436 0182 92B2     		uxth	r2, r2	@ D.7600, USARTx_2(D)->CR2
 437              	.LVL45:
 438              		.loc 1 387 0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 16


 439 0184 0B43     		orrs	r3, r3, r1	@, tmp159, tmp156, USART_ClockInitStruct_6(D)->USART_LastBit
 380:.\stm32f4periph\src/stm32f4xx_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)CR2_CLOCK_CLEAR_MASK);
 440              		.loc 1 380 0
 441 0186 22F47062 		bic	r2, r2, #3840	@ tmpreg, D.7600,
 442              	.LVL46:
 443              		.loc 1 387 0
 444 018a 9BB2     		uxth	r3, r3	@ tmp160, tmp159
 388:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Write to USART CR2 */
 389:.\stm32f4periph\src/stm32f4xx_usart.c ****   USARTx->CR2 = (uint16_t)tmpreg;
 445              		.loc 1 389 0
 446 018c 1343     		orrs	r3, r3, r2	@, D.7609, tmp160, tmpreg
 447 018e 0382     		strh	r3, [r0, #16]	@ movhi	@ D.7609, USARTx_2(D)->CR2
 448 0190 10BD     		pop	{r4, pc}	@
 449              		.cfi_endproc
 450              	.LFE113:
 451              		.size	USART_ClockInit, .-USART_ClockInit
 452              		.align	1
 453              		.global	USART_ClockStructInit
 454              		.thumb
 455              		.thumb_func
 456              		.type	USART_ClockStructInit, %function
 457              	USART_ClockStructInit:
 458              	.LFB114:
 390:.\stm32f4periph\src/stm32f4xx_usart.c **** }
 391:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 392:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
 393:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @brief  Fills each USART_ClockInitStruct member with its default value.
 394:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USART_ClockInitStruct: pointer to a USART_ClockInitTypeDef structure
 395:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         which will be initialized.
 396:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @retval None
 397:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 398:.\stm32f4periph\src/stm32f4xx_usart.c **** void USART_ClockStructInit(USART_ClockInitTypeDef* USART_ClockInitStruct)
 399:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 459              		.loc 1 399 0
 460              		.cfi_startproc
 461              		@ args = 0, pretend = 0, frame = 0
 462              		@ frame_needed = 0, uses_anonymous_args = 0
 463              		@ link register save eliminated.
 464              	.LVL47:
 400:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* USART_ClockInitStruct members default value */
 401:.\stm32f4periph\src/stm32f4xx_usart.c ****   USART_ClockInitStruct->USART_Clock = USART_Clock_Disable;
 465              		.loc 1 401 0
 466 0192 0023     		movs	r3, #0	@ tmp136,
 467 0194 0380     		strh	r3, [r0, #0]	@ movhi	@ tmp136, USART_ClockInitStruct_1(D)->USART_Clock
 402:.\stm32f4periph\src/stm32f4xx_usart.c ****   USART_ClockInitStruct->USART_CPOL = USART_CPOL_Low;
 468              		.loc 1 402 0
 469 0196 4380     		strh	r3, [r0, #2]	@ movhi	@ tmp136, USART_ClockInitStruct_1(D)->USART_CPOL
 403:.\stm32f4periph\src/stm32f4xx_usart.c ****   USART_ClockInitStruct->USART_CPHA = USART_CPHA_1Edge;
 470              		.loc 1 403 0
 471 0198 8380     		strh	r3, [r0, #4]	@ movhi	@ tmp136, USART_ClockInitStruct_1(D)->USART_CPHA
 404:.\stm32f4periph\src/stm32f4xx_usart.c ****   USART_ClockInitStruct->USART_LastBit = USART_LastBit_Disable;
 472              		.loc 1 404 0
 473 019a C380     		strh	r3, [r0, #6]	@ movhi	@ tmp136, USART_ClockInitStruct_1(D)->USART_LastBit
 474 019c 7047     		bx	lr	@
 475              		.cfi_endproc
 476              	.LFE114:
 477              		.size	USART_ClockStructInit, .-USART_ClockStructInit
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 17


 478              		.align	1
 479              		.global	USART_Cmd
 480              		.thumb
 481              		.thumb_func
 482              		.type	USART_Cmd, %function
 483              	USART_Cmd:
 484              	.LFB115:
 405:.\stm32f4periph\src/stm32f4xx_usart.c **** }
 406:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 407:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
 408:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @brief  Enables or disables the specified USART peripheral.
 409:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 410:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         UART peripheral.
 411:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  NewState: new state of the USARTx peripheral.
 412:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
 413:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @retval None
 414:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 415:.\stm32f4periph\src/stm32f4xx_usart.c **** void USART_Cmd(USART_TypeDef* USARTx, FunctionalState NewState)
 416:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 485              		.loc 1 416 0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 0
 488              		@ frame_needed = 0, uses_anonymous_args = 0
 489              		@ link register save eliminated.
 490              	.LVL48:
 417:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Check the parameters */
 418:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 419:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 420:.\stm32f4periph\src/stm32f4xx_usart.c ****   
 421:.\stm32f4periph\src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 422:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
 423:.\stm32f4periph\src/stm32f4xx_usart.c ****     /* Enable the selected USART by setting the UE bit in the CR1 register */
 424:.\stm32f4periph\src/stm32f4xx_usart.c ****     USARTx->CR1 |= USART_CR1_UE;
 491              		.loc 1 424 0
 492 019e 8389     		ldrh	r3, [r0, #12]	@,
 421:.\stm32f4periph\src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 493              		.loc 1 421 0
 494 01a0 19B1     		cbz	r1, .L28	@ NewState,
 495              		.loc 1 424 0
 496 01a2 9BB2     		uxth	r3, r3	@ D.7595, USARTx_2(D)->CR1
 497 01a4 43F40053 		orr	r3, r3, #8192	@ D.7596, D.7595,
 498 01a8 03E0     		b	.L30	@
 499              	.L28:
 425:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
 426:.\stm32f4periph\src/stm32f4xx_usart.c ****   else
 427:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
 428:.\stm32f4periph\src/stm32f4xx_usart.c ****     /* Disable the selected USART by clearing the UE bit in the CR1 register */
 429:.\stm32f4periph\src/stm32f4xx_usart.c ****     USARTx->CR1 &= (uint16_t)~((uint16_t)USART_CR1_UE);
 500              		.loc 1 429 0
 501 01aa 23F40053 		bic	r3, r3, #8192	@ D.7599, USARTx_2(D)->CR1,
 502 01ae 1B04     		lsls	r3, r3, #16	@ D.7599, D.7599,
 503 01b0 1B0C     		lsrs	r3, r3, #16	@ D.7599, D.7599,
 504              	.L30:
 505 01b2 8381     		strh	r3, [r0, #12]	@ movhi	@ D.7599,
 506 01b4 7047     		bx	lr	@
 507              		.cfi_endproc
 508              	.LFE115:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 18


 509              		.size	USART_Cmd, .-USART_Cmd
 510              		.align	1
 511              		.global	USART_SetPrescaler
 512              		.thumb
 513              		.thumb_func
 514              		.type	USART_SetPrescaler, %function
 515              	USART_SetPrescaler:
 516              	.LFB116:
 430:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
 431:.\stm32f4periph\src/stm32f4xx_usart.c **** }
 432:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 433:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
 434:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @brief  Sets the system clock prescaler.
 435:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 436:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         UART peripheral.
 437:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USART_Prescaler: specifies the prescaler clock. 
 438:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @note   The function is used for IrDA mode with UART4 and UART5.   
 439:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @retval None
 440:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 441:.\stm32f4periph\src/stm32f4xx_usart.c **** void USART_SetPrescaler(USART_TypeDef* USARTx, uint8_t USART_Prescaler)
 442:.\stm32f4periph\src/stm32f4xx_usart.c **** { 
 517              		.loc 1 442 0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 0
 520              		@ frame_needed = 0, uses_anonymous_args = 0
 521              		@ link register save eliminated.
 522              	.LVL49:
 443:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Check the parameters */
 444:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 445:.\stm32f4periph\src/stm32f4xx_usart.c ****   
 446:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Clear the USART prescaler */
 447:.\stm32f4periph\src/stm32f4xx_usart.c ****   USARTx->GTPR &= USART_GTPR_GT;
 523              		.loc 1 447 0
 524 01b6 038B     		ldrh	r3, [r0, #24]	@, USARTx_1(D)->GTPR
 525 01b8 03F47F43 		and	r3, r3, #65280	@ D.7589, USARTx_1(D)->GTPR,
 526 01bc 0383     		strh	r3, [r0, #24]	@ movhi	@ D.7589, USARTx_1(D)->GTPR
 448:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Set the USART prescaler */
 449:.\stm32f4periph\src/stm32f4xx_usart.c ****   USARTx->GTPR |= USART_Prescaler;
 527              		.loc 1 449 0
 528 01be 038B     		ldrh	r3, [r0, #24]	@, USARTx_1(D)->GTPR
 529 01c0 9BB2     		uxth	r3, r3	@ D.7590, USARTx_1(D)->GTPR
 530 01c2 1943     		orrs	r1, r1, r3	@, D.7592, USART_Prescaler, D.7590
 531              	.LVL50:
 532 01c4 0183     		strh	r1, [r0, #24]	@ movhi	@ D.7592, USARTx_1(D)->GTPR
 533 01c6 7047     		bx	lr	@
 534              		.cfi_endproc
 535              	.LFE116:
 536              		.size	USART_SetPrescaler, .-USART_SetPrescaler
 537              		.align	1
 538              		.global	USART_OverSampling8Cmd
 539              		.thumb
 540              		.thumb_func
 541              		.type	USART_OverSampling8Cmd, %function
 542              	USART_OverSampling8Cmd:
 543              	.LFB117:
 450:.\stm32f4periph\src/stm32f4xx_usart.c **** }
 451:.\stm32f4periph\src/stm32f4xx_usart.c **** 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 19


 452:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
 453:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @brief  Enables or disables the USART's 8x oversampling mode.
 454:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @note   This function has to be called before calling USART_Init() function
 455:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         in order to have correct baudrate Divider value.
 456:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 457:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         UART peripheral.
 458:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  NewState: new state of the USART 8x oversampling mode.
 459:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
 460:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @retval None
 461:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 462:.\stm32f4periph\src/stm32f4xx_usart.c **** void USART_OverSampling8Cmd(USART_TypeDef* USARTx, FunctionalState NewState)
 463:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 544              		.loc 1 463 0
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 0
 547              		@ frame_needed = 0, uses_anonymous_args = 0
 548              		@ link register save eliminated.
 549              	.LVL51:
 464:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Check the parameters */
 465:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 466:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 467:.\stm32f4periph\src/stm32f4xx_usart.c ****   
 468:.\stm32f4periph\src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 469:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
 470:.\stm32f4periph\src/stm32f4xx_usart.c ****     /* Enable the 8x Oversampling mode by setting the OVER8 bit in the CR1 register */
 471:.\stm32f4periph\src/stm32f4xx_usart.c ****     USARTx->CR1 |= USART_CR1_OVER8;
 550              		.loc 1 471 0
 551 01c8 8389     		ldrh	r3, [r0, #12]	@,
 468:.\stm32f4periph\src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 552              		.loc 1 468 0
 553 01ca 21B1     		cbz	r1, .L33	@ NewState,
 554              		.loc 1 471 0
 555 01cc 6FEA4343 		mvn	r3, r3, lsl #17	@ tmp142, USARTx_2(D)->CR1,
 556 01d0 6FEA5343 		mvn	r3, r3, lsr #17	@ tmp142, tmp142,
 557 01d4 01E0     		b	.L35	@
 558              	.L33:
 472:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
 473:.\stm32f4periph\src/stm32f4xx_usart.c ****   else
 474:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
 475:.\stm32f4periph\src/stm32f4xx_usart.c ****     /* Disable the 8x Oversampling mode by clearing the OVER8 bit in the CR1 register */
 476:.\stm32f4periph\src/stm32f4xx_usart.c ****     USARTx->CR1 &= (uint16_t)~((uint16_t)USART_CR1_OVER8);
 559              		.loc 1 476 0
 560 01d6 5B04     		lsls	r3, r3, #17	@ tmp148, USARTx_2(D)->CR1,
 561 01d8 5B0C     		lsrs	r3, r3, #17	@ D.7587, tmp148,
 562              	.L35:
 563 01da 8381     		strh	r3, [r0, #12]	@ movhi	@ D.7587,
 564 01dc 7047     		bx	lr	@
 565              		.cfi_endproc
 566              	.LFE117:
 567              		.size	USART_OverSampling8Cmd, .-USART_OverSampling8Cmd
 568              		.align	1
 569              		.global	USART_OneBitMethodCmd
 570              		.thumb
 571              		.thumb_func
 572              		.type	USART_OneBitMethodCmd, %function
 573              	USART_OneBitMethodCmd:
 574              	.LFB118:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 20


 477:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
 478:.\stm32f4periph\src/stm32f4xx_usart.c **** }  
 479:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 480:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
 481:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @brief  Enables or disables the USART's one bit sampling method.
 482:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 483:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         UART peripheral.
 484:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  NewState: new state of the USART one bit sampling method.
 485:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
 486:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @retval None
 487:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 488:.\stm32f4periph\src/stm32f4xx_usart.c **** void USART_OneBitMethodCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 489:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 575              		.loc 1 489 0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579              		@ link register save eliminated.
 580              	.LVL52:
 490:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Check the parameters */
 491:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 492:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 493:.\stm32f4periph\src/stm32f4xx_usart.c ****   
 494:.\stm32f4periph\src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 495:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
 496:.\stm32f4periph\src/stm32f4xx_usart.c ****     /* Enable the one bit method by setting the ONEBITE bit in the CR3 register */
 497:.\stm32f4periph\src/stm32f4xx_usart.c ****     USARTx->CR3 |= USART_CR3_ONEBIT;
 581              		.loc 1 497 0
 582 01de 838A     		ldrh	r3, [r0, #20]	@,
 494:.\stm32f4periph\src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 583              		.loc 1 494 0
 584 01e0 19B1     		cbz	r1, .L37	@ NewState,
 585              		.loc 1 497 0
 586 01e2 9BB2     		uxth	r3, r3	@ D.7576, USARTx_2(D)->CR3
 587 01e4 43F40063 		orr	r3, r3, #2048	@ D.7577, D.7576,
 588 01e8 03E0     		b	.L39	@
 589              	.L37:
 498:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
 499:.\stm32f4periph\src/stm32f4xx_usart.c ****   else
 500:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
 501:.\stm32f4periph\src/stm32f4xx_usart.c ****     /* Disable the one bit method by clearing the ONEBITE bit in the CR3 register */
 502:.\stm32f4periph\src/stm32f4xx_usart.c ****     USARTx->CR3 &= (uint16_t)~((uint16_t)USART_CR3_ONEBIT);
 590              		.loc 1 502 0
 591 01ea 23F40063 		bic	r3, r3, #2048	@ D.7580, USARTx_2(D)->CR3,
 592 01ee 1B04     		lsls	r3, r3, #16	@ D.7580, D.7580,
 593 01f0 1B0C     		lsrs	r3, r3, #16	@ D.7580, D.7580,
 594              	.L39:
 595 01f2 8382     		strh	r3, [r0, #20]	@ movhi	@ D.7580,
 596 01f4 7047     		bx	lr	@
 597              		.cfi_endproc
 598              	.LFE118:
 599              		.size	USART_OneBitMethodCmd, .-USART_OneBitMethodCmd
 600              		.align	1
 601              		.global	USART_SendData
 602              		.thumb
 603              		.thumb_func
 604              		.type	USART_SendData, %function
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 21


 605              	USART_SendData:
 606              	.LFB119:
 503:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
 504:.\stm32f4periph\src/stm32f4xx_usart.c **** }
 505:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 506:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
 507:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @}
 508:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 509:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 510:.\stm32f4periph\src/stm32f4xx_usart.c **** /** @defgroup USART_Group2 Data transfers functions
 511:.\stm32f4periph\src/stm32f4xx_usart.c ****  *  @brief   Data transfers functions 
 512:.\stm32f4periph\src/stm32f4xx_usart.c ****  *
 513:.\stm32f4periph\src/stm32f4xx_usart.c **** @verbatim   
 514:.\stm32f4periph\src/stm32f4xx_usart.c ****  ===============================================================================
 515:.\stm32f4periph\src/stm32f4xx_usart.c ****                             Data transfers functions
 516:.\stm32f4periph\src/stm32f4xx_usart.c ****  ===============================================================================  
 517:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 518:.\stm32f4periph\src/stm32f4xx_usart.c ****   This subsection provides a set of functions allowing to manage the USART data 
 519:.\stm32f4periph\src/stm32f4xx_usart.c ****   transfers.
 520:.\stm32f4periph\src/stm32f4xx_usart.c ****   
 521:.\stm32f4periph\src/stm32f4xx_usart.c ****   During an USART reception, data shifts in least significant bit first through 
 522:.\stm32f4periph\src/stm32f4xx_usart.c ****   the RX pin. In this mode, the USART_DR register consists of a buffer (RDR) 
 523:.\stm32f4periph\src/stm32f4xx_usart.c ****   between the internal bus and the received shift register.
 524:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 525:.\stm32f4periph\src/stm32f4xx_usart.c ****   When a transmission is taking place, a write instruction to the USART_DR register 
 526:.\stm32f4periph\src/stm32f4xx_usart.c ****   stores the data in the TDR register and which is copied in the shift register 
 527:.\stm32f4periph\src/stm32f4xx_usart.c ****   at the end of the current transmission.
 528:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 529:.\stm32f4periph\src/stm32f4xx_usart.c ****   The read access of the USART_DR register can be done using the USART_ReceiveData()
 530:.\stm32f4periph\src/stm32f4xx_usart.c ****   function and returns the RDR buffered value. Whereas a write access to the USART_DR 
 531:.\stm32f4periph\src/stm32f4xx_usart.c ****   can be done using USART_SendData() function and stores the written data into 
 532:.\stm32f4periph\src/stm32f4xx_usart.c ****   TDR buffer.
 533:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 534:.\stm32f4periph\src/stm32f4xx_usart.c **** @endverbatim
 535:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @{
 536:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 537:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 538:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
 539:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @brief  Transmits single data through the USARTx peripheral.
 540:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 541:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         UART peripheral.
 542:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  Data: the data to transmit.
 543:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @retval None
 544:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 545:.\stm32f4periph\src/stm32f4xx_usart.c **** void USART_SendData(USART_TypeDef* USARTx, uint16_t Data)
 546:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 607              		.loc 1 546 0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 0
 610              		@ frame_needed = 0, uses_anonymous_args = 0
 611              		@ link register save eliminated.
 612              	.LVL53:
 547:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Check the parameters */
 548:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 549:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_DATA(Data)); 
 550:.\stm32f4periph\src/stm32f4xx_usart.c ****     
 551:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Transmit Data */
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 22


 552:.\stm32f4periph\src/stm32f4xx_usart.c ****   USARTx->DR = (Data & (uint16_t)0x01FF);
 613              		.loc 1 552 0
 614 01f6 C905     		lsls	r1, r1, #23	@ tmp138, Data,
 615              	.LVL54:
 616 01f8 C90D     		lsrs	r1, r1, #23	@ D.7573, tmp138,
 617 01fa 8180     		strh	r1, [r0, #4]	@ movhi	@ D.7573, USARTx_3(D)->DR
 618 01fc 7047     		bx	lr	@
 619              		.cfi_endproc
 620              	.LFE119:
 621              		.size	USART_SendData, .-USART_SendData
 622              		.align	1
 623              		.global	USART_ReceiveData
 624              		.thumb
 625              		.thumb_func
 626              		.type	USART_ReceiveData, %function
 627              	USART_ReceiveData:
 628              	.LFB120:
 553:.\stm32f4periph\src/stm32f4xx_usart.c **** }
 554:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 555:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
 556:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @brief  Returns the most recent received data by the USARTx peripheral.
 557:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 558:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         UART peripheral.
 559:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @retval The received data.
 560:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 561:.\stm32f4periph\src/stm32f4xx_usart.c **** uint16_t USART_ReceiveData(USART_TypeDef* USARTx)
 562:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 629              		.loc 1 562 0
 630              		.cfi_startproc
 631              		@ args = 0, pretend = 0, frame = 0
 632              		@ frame_needed = 0, uses_anonymous_args = 0
 633              		@ link register save eliminated.
 634              	.LVL55:
 563:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Check the parameters */
 564:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 565:.\stm32f4periph\src/stm32f4xx_usart.c ****   
 566:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Receive Data */
 567:.\stm32f4periph\src/stm32f4xx_usart.c ****   return (uint16_t)(USARTx->DR & (uint16_t)0x01FF);
 635              		.loc 1 567 0
 636 01fe 8088     		ldrh	r0, [r0, #4]	@, USARTx_1(D)->DR
 637              	.LVL56:
 638 0200 C005     		lsls	r0, r0, #23	@ tmp142, USARTx_1(D)->DR,
 568:.\stm32f4periph\src/stm32f4xx_usart.c **** }
 639              		.loc 1 568 0
 640 0202 C00D     		lsrs	r0, r0, #23	@, tmp142,
 641 0204 7047     		bx	lr	@
 642              		.cfi_endproc
 643              	.LFE120:
 644              		.size	USART_ReceiveData, .-USART_ReceiveData
 645              		.align	1
 646              		.global	USART_SetAddress
 647              		.thumb
 648              		.thumb_func
 649              		.type	USART_SetAddress, %function
 650              	USART_SetAddress:
 651              	.LFB121:
 569:.\stm32f4periph\src/stm32f4xx_usart.c **** 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 23


 570:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
 571:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @}
 572:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 573:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 574:.\stm32f4periph\src/stm32f4xx_usart.c **** /** @defgroup USART_Group3 MultiProcessor Communication functions
 575:.\stm32f4periph\src/stm32f4xx_usart.c ****  *  @brief   Multi-Processor Communication functions 
 576:.\stm32f4periph\src/stm32f4xx_usart.c ****  *
 577:.\stm32f4periph\src/stm32f4xx_usart.c **** @verbatim   
 578:.\stm32f4periph\src/stm32f4xx_usart.c ****  ===============================================================================
 579:.\stm32f4periph\src/stm32f4xx_usart.c ****                     Multi-Processor Communication functions
 580:.\stm32f4periph\src/stm32f4xx_usart.c ****  ===============================================================================  
 581:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 582:.\stm32f4periph\src/stm32f4xx_usart.c ****   This subsection provides a set of functions allowing to manage the USART 
 583:.\stm32f4periph\src/stm32f4xx_usart.c ****   multiprocessor communication.
 584:.\stm32f4periph\src/stm32f4xx_usart.c ****   
 585:.\stm32f4periph\src/stm32f4xx_usart.c ****   For instance one of the USARTs can be the master, its TX output is connected to 
 586:.\stm32f4periph\src/stm32f4xx_usart.c ****   the RX input of the other USART. The others are slaves, their respective TX outputs 
 587:.\stm32f4periph\src/stm32f4xx_usart.c ****   are logically ANDed together and connected to the RX input of the master.
 588:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 589:.\stm32f4periph\src/stm32f4xx_usart.c ****   USART multiprocessor communication is possible through the following procedure:
 590:.\stm32f4periph\src/stm32f4xx_usart.c ****      1. Program the Baud rate, Word length = 9 bits, Stop bits, Parity, Mode transmitter 
 591:.\stm32f4periph\src/stm32f4xx_usart.c ****         or Mode receiver and hardware flow control values using the USART_Init()
 592:.\stm32f4periph\src/stm32f4xx_usart.c ****         function.
 593:.\stm32f4periph\src/stm32f4xx_usart.c ****      2. Configures the USART address using the USART_SetAddress() function.
 594:.\stm32f4periph\src/stm32f4xx_usart.c ****      3. Configures the wake up method (USART_WakeUp_IdleLine or USART_WakeUp_AddressMark)
 595:.\stm32f4periph\src/stm32f4xx_usart.c ****         using USART_WakeUpConfig() function only for the slaves.
 596:.\stm32f4periph\src/stm32f4xx_usart.c ****      4. Enable the USART using the USART_Cmd() function.
 597:.\stm32f4periph\src/stm32f4xx_usart.c ****      5. Enter the USART slaves in mute mode using USART_ReceiverWakeUpCmd() function.
 598:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 599:.\stm32f4periph\src/stm32f4xx_usart.c ****   The USART Slave exit from mute mode when receive the wake up condition.
 600:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 601:.\stm32f4periph\src/stm32f4xx_usart.c **** @endverbatim
 602:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @{
 603:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 604:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 605:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
 606:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @brief  Sets the address of the USART node.
 607:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 608:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         UART peripheral.
 609:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USART_Address: Indicates the address of the USART node.
 610:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @retval None
 611:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 612:.\stm32f4periph\src/stm32f4xx_usart.c **** void USART_SetAddress(USART_TypeDef* USARTx, uint8_t USART_Address)
 613:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 652              		.loc 1 613 0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 0
 655              		@ frame_needed = 0, uses_anonymous_args = 0
 656              		@ link register save eliminated.
 657              	.LVL57:
 614:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Check the parameters */
 615:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 616:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_ADDRESS(USART_Address)); 
 617:.\stm32f4periph\src/stm32f4xx_usart.c ****     
 618:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Clear the USART address */
 619:.\stm32f4periph\src/stm32f4xx_usart.c ****   USARTx->CR2 &= (uint16_t)~((uint16_t)USART_CR2_ADD);
 658              		.loc 1 619 0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 24


 659 0206 038A     		ldrh	r3, [r0, #16]	@, USARTx_1(D)->CR2
 660 0208 23F00F03 		bic	r3, r3, #15	@ D.7566, USARTx_1(D)->CR2,
 661 020c 1B04     		lsls	r3, r3, #16	@ D.7566, D.7566,
 662 020e 1B0C     		lsrs	r3, r3, #16	@ D.7566, D.7566,
 663 0210 0382     		strh	r3, [r0, #16]	@ movhi	@ D.7566, USARTx_1(D)->CR2
 620:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Set the USART address node */
 621:.\stm32f4periph\src/stm32f4xx_usart.c ****   USARTx->CR2 |= USART_Address;
 664              		.loc 1 621 0
 665 0212 038A     		ldrh	r3, [r0, #16]	@, USARTx_1(D)->CR2
 666 0214 9BB2     		uxth	r3, r3	@ D.7567, USARTx_1(D)->CR2
 667 0216 1943     		orrs	r1, r1, r3	@, D.7569, USART_Address, D.7567
 668              	.LVL58:
 669 0218 0182     		strh	r1, [r0, #16]	@ movhi	@ D.7569, USARTx_1(D)->CR2
 670 021a 7047     		bx	lr	@
 671              		.cfi_endproc
 672              	.LFE121:
 673              		.size	USART_SetAddress, .-USART_SetAddress
 674              		.align	1
 675              		.global	USART_ReceiverWakeUpCmd
 676              		.thumb
 677              		.thumb_func
 678              		.type	USART_ReceiverWakeUpCmd, %function
 679              	USART_ReceiverWakeUpCmd:
 680              	.LFB122:
 622:.\stm32f4periph\src/stm32f4xx_usart.c **** }
 623:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 624:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
 625:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @brief  Determines if the USART is in mute mode or not.
 626:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 627:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         UART peripheral.
 628:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  NewState: new state of the USART mute mode.
 629:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
 630:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @retval None
 631:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 632:.\stm32f4periph\src/stm32f4xx_usart.c **** void USART_ReceiverWakeUpCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 633:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 681              		.loc 1 633 0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 0
 684              		@ frame_needed = 0, uses_anonymous_args = 0
 685              		@ link register save eliminated.
 686              	.LVL59:
 634:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Check the parameters */
 635:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 636:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState)); 
 637:.\stm32f4periph\src/stm32f4xx_usart.c ****   
 638:.\stm32f4periph\src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 639:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
 640:.\stm32f4periph\src/stm32f4xx_usart.c ****     /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
 641:.\stm32f4periph\src/stm32f4xx_usart.c ****     USARTx->CR1 |= USART_CR1_RWU;
 687              		.loc 1 641 0
 688 021c 8389     		ldrh	r3, [r0, #12]	@,
 638:.\stm32f4periph\src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 689              		.loc 1 638 0
 690 021e 19B1     		cbz	r1, .L44	@ NewState,
 691              		.loc 1 641 0
 692 0220 9BB2     		uxth	r3, r3	@ D.7560, USARTx_2(D)->CR1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 25


 693 0222 43F00203 		orr	r3, r3, #2	@ D.7561, D.7560,
 694 0226 03E0     		b	.L46	@
 695              	.L44:
 642:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
 643:.\stm32f4periph\src/stm32f4xx_usart.c ****   else
 644:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
 645:.\stm32f4periph\src/stm32f4xx_usart.c ****     /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
 646:.\stm32f4periph\src/stm32f4xx_usart.c ****     USARTx->CR1 &= (uint16_t)~((uint16_t)USART_CR1_RWU);
 696              		.loc 1 646 0
 697 0228 23F00203 		bic	r3, r3, #2	@ D.7564, USARTx_2(D)->CR1,
 698 022c 1B04     		lsls	r3, r3, #16	@ D.7564, D.7564,
 699 022e 1B0C     		lsrs	r3, r3, #16	@ D.7564, D.7564,
 700              	.L46:
 701 0230 8381     		strh	r3, [r0, #12]	@ movhi	@ D.7564,
 702 0232 7047     		bx	lr	@
 703              		.cfi_endproc
 704              	.LFE122:
 705              		.size	USART_ReceiverWakeUpCmd, .-USART_ReceiverWakeUpCmd
 706              		.align	1
 707              		.global	USART_WakeUpConfig
 708              		.thumb
 709              		.thumb_func
 710              		.type	USART_WakeUpConfig, %function
 711              	USART_WakeUpConfig:
 712              	.LFB123:
 647:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
 648:.\stm32f4periph\src/stm32f4xx_usart.c **** }
 649:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
 650:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @brief  Selects the USART WakeUp method.
 651:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 652:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         UART peripheral.
 653:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USART_WakeUp: specifies the USART wakeup method.
 654:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          This parameter can be one of the following values:
 655:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_WakeUp_IdleLine: WakeUp by an idle line detection
 656:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_WakeUp_AddressMark: WakeUp by an address mark
 657:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @retval None
 658:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 659:.\stm32f4periph\src/stm32f4xx_usart.c **** void USART_WakeUpConfig(USART_TypeDef* USARTx, uint16_t USART_WakeUp)
 660:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 713              		.loc 1 660 0
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 0
 716              		@ frame_needed = 0, uses_anonymous_args = 0
 717              		@ link register save eliminated.
 718              	.LVL60:
 661:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Check the parameters */
 662:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 663:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_WAKEUP(USART_WakeUp));
 664:.\stm32f4periph\src/stm32f4xx_usart.c ****   
 665:.\stm32f4periph\src/stm32f4xx_usart.c ****   USARTx->CR1 &= (uint16_t)~((uint16_t)USART_CR1_WAKE);
 719              		.loc 1 665 0
 720 0234 8389     		ldrh	r3, [r0, #12]	@, USARTx_1(D)->CR1
 721 0236 23F40063 		bic	r3, r3, #2048	@ D.7555, USARTx_1(D)->CR1,
 722 023a 1B04     		lsls	r3, r3, #16	@ D.7555, D.7555,
 723 023c 1B0C     		lsrs	r3, r3, #16	@ D.7555, D.7555,
 724 023e 8381     		strh	r3, [r0, #12]	@ movhi	@ D.7555, USARTx_1(D)->CR1
 666:.\stm32f4periph\src/stm32f4xx_usart.c ****   USARTx->CR1 |= USART_WakeUp;
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 26


 725              		.loc 1 666 0
 726 0240 8389     		ldrh	r3, [r0, #12]	@, USARTx_1(D)->CR1
 727 0242 9BB2     		uxth	r3, r3	@ D.7556, USARTx_1(D)->CR1
 728 0244 1943     		orrs	r1, r1, r3	@, D.7557, USART_WakeUp, D.7556
 729              	.LVL61:
 730 0246 8181     		strh	r1, [r0, #12]	@ movhi	@ D.7557, USARTx_1(D)->CR1
 731 0248 7047     		bx	lr	@
 732              		.cfi_endproc
 733              	.LFE123:
 734              		.size	USART_WakeUpConfig, .-USART_WakeUpConfig
 735              		.align	1
 736              		.global	USART_LINBreakDetectLengthConfig
 737              		.thumb
 738              		.thumb_func
 739              		.type	USART_LINBreakDetectLengthConfig, %function
 740              	USART_LINBreakDetectLengthConfig:
 741              	.LFB124:
 667:.\stm32f4periph\src/stm32f4xx_usart.c **** }
 668:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 669:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
 670:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @}
 671:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 672:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 673:.\stm32f4periph\src/stm32f4xx_usart.c **** /** @defgroup USART_Group4 LIN mode functions
 674:.\stm32f4periph\src/stm32f4xx_usart.c ****  *  @brief   LIN mode functions 
 675:.\stm32f4periph\src/stm32f4xx_usart.c ****  *
 676:.\stm32f4periph\src/stm32f4xx_usart.c **** @verbatim   
 677:.\stm32f4periph\src/stm32f4xx_usart.c ****  ===============================================================================
 678:.\stm32f4periph\src/stm32f4xx_usart.c ****                                 LIN mode functions
 679:.\stm32f4periph\src/stm32f4xx_usart.c ****  ===============================================================================  
 680:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 681:.\stm32f4periph\src/stm32f4xx_usart.c ****   This subsection provides a set of functions allowing to manage the USART LIN 
 682:.\stm32f4periph\src/stm32f4xx_usart.c ****   Mode communication.
 683:.\stm32f4periph\src/stm32f4xx_usart.c ****   
 684:.\stm32f4periph\src/stm32f4xx_usart.c ****   In LIN mode, 8-bit data format with 1 stop bit is required in accordance with 
 685:.\stm32f4periph\src/stm32f4xx_usart.c ****   the LIN standard.
 686:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 687:.\stm32f4periph\src/stm32f4xx_usart.c ****   Only this LIN Feature is supported by the USART IP:
 688:.\stm32f4periph\src/stm32f4xx_usart.c ****     - LIN Master Synchronous Break send capability and LIN slave break detection
 689:.\stm32f4periph\src/stm32f4xx_usart.c ****       capability :  13-bit break generation and 10/11 bit break detection
 690:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 691:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 692:.\stm32f4periph\src/stm32f4xx_usart.c ****   USART LIN Master transmitter communication is possible through the following procedure:
 693:.\stm32f4periph\src/stm32f4xx_usart.c ****      1. Program the Baud rate, Word length = 8bits, Stop bits = 1bit, Parity, 
 694:.\stm32f4periph\src/stm32f4xx_usart.c ****         Mode transmitter or Mode receiver and hardware flow control values using 
 695:.\stm32f4periph\src/stm32f4xx_usart.c ****         the USART_Init() function.
 696:.\stm32f4periph\src/stm32f4xx_usart.c ****      2. Enable the USART using the USART_Cmd() function.
 697:.\stm32f4periph\src/stm32f4xx_usart.c ****      3. Enable the LIN mode using the USART_LINCmd() function.
 698:.\stm32f4periph\src/stm32f4xx_usart.c ****      4. Send the break character using USART_SendBreak() function.
 699:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 700:.\stm32f4periph\src/stm32f4xx_usart.c ****   USART LIN Master receiver communication is possible through the following procedure:
 701:.\stm32f4periph\src/stm32f4xx_usart.c ****      1. Program the Baud rate, Word length = 8bits, Stop bits = 1bit, Parity, 
 702:.\stm32f4periph\src/stm32f4xx_usart.c ****         Mode transmitter or Mode receiver and hardware flow control values using 
 703:.\stm32f4periph\src/stm32f4xx_usart.c ****         the USART_Init() function.
 704:.\stm32f4periph\src/stm32f4xx_usart.c ****      2. Enable the USART using the USART_Cmd() function.
 705:.\stm32f4periph\src/stm32f4xx_usart.c ****      3. Configures the break detection length using the USART_LINBreakDetectLengthConfig()
 706:.\stm32f4periph\src/stm32f4xx_usart.c ****         function.
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 27


 707:.\stm32f4periph\src/stm32f4xx_usart.c ****      4. Enable the LIN mode using the USART_LINCmd() function.
 708:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 709:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 710:.\stm32f4periph\src/stm32f4xx_usart.c **** @note In LIN mode, the following bits must be kept cleared:
 711:.\stm32f4periph\src/stm32f4xx_usart.c ****         - CLKEN in the USART_CR2 register,
 712:.\stm32f4periph\src/stm32f4xx_usart.c ****         - STOP[1:0], SCEN, HDSEL and IREN in the USART_CR3 register.
 713:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 714:.\stm32f4periph\src/stm32f4xx_usart.c **** @endverbatim
 715:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @{
 716:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 717:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 718:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
 719:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @brief  Sets the USART LIN Break detection length.
 720:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 721:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         UART peripheral.
 722:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USART_LINBreakDetectLength: specifies the LIN break detection length.
 723:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          This parameter can be one of the following values:
 724:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_LINBreakDetectLength_10b: 10-bit break detection
 725:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_LINBreakDetectLength_11b: 11-bit break detection
 726:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @retval None
 727:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 728:.\stm32f4periph\src/stm32f4xx_usart.c **** void USART_LINBreakDetectLengthConfig(USART_TypeDef* USARTx, uint16_t USART_LINBreakDetectLength)
 729:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 742              		.loc 1 729 0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746              		@ link register save eliminated.
 747              	.LVL62:
 730:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Check the parameters */
 731:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 732:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_LIN_BREAK_DETECT_LENGTH(USART_LINBreakDetectLength));
 733:.\stm32f4periph\src/stm32f4xx_usart.c ****   
 734:.\stm32f4periph\src/stm32f4xx_usart.c ****   USARTx->CR2 &= (uint16_t)~((uint16_t)USART_CR2_LBDL);
 748              		.loc 1 734 0
 749 024a 038A     		ldrh	r3, [r0, #16]	@, USARTx_1(D)->CR2
 750 024c 23F02003 		bic	r3, r3, #32	@ D.7551, USARTx_1(D)->CR2,
 751 0250 1B04     		lsls	r3, r3, #16	@ D.7551, D.7551,
 752 0252 1B0C     		lsrs	r3, r3, #16	@ D.7551, D.7551,
 753 0254 0382     		strh	r3, [r0, #16]	@ movhi	@ D.7551, USARTx_1(D)->CR2
 735:.\stm32f4periph\src/stm32f4xx_usart.c ****   USARTx->CR2 |= USART_LINBreakDetectLength;  
 754              		.loc 1 735 0
 755 0256 038A     		ldrh	r3, [r0, #16]	@, USARTx_1(D)->CR2
 756 0258 9BB2     		uxth	r3, r3	@ D.7552, USARTx_1(D)->CR2
 757 025a 1943     		orrs	r1, r1, r3	@, D.7553, USART_LINBreakDetectLength, D.7552
 758              	.LVL63:
 759 025c 0182     		strh	r1, [r0, #16]	@ movhi	@ D.7553, USARTx_1(D)->CR2
 760 025e 7047     		bx	lr	@
 761              		.cfi_endproc
 762              	.LFE124:
 763              		.size	USART_LINBreakDetectLengthConfig, .-USART_LINBreakDetectLengthConfig
 764              		.align	1
 765              		.global	USART_LINCmd
 766              		.thumb
 767              		.thumb_func
 768              		.type	USART_LINCmd, %function
 769              	USART_LINCmd:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 28


 770              	.LFB125:
 736:.\stm32f4periph\src/stm32f4xx_usart.c **** }
 737:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 738:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
 739:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @brief  Enables or disables the USART's LIN mode.
 740:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 741:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         UART peripheral.
 742:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  NewState: new state of the USART LIN mode.
 743:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
 744:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @retval None
 745:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 746:.\stm32f4periph\src/stm32f4xx_usart.c **** void USART_LINCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 747:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 771              		.loc 1 747 0
 772              		.cfi_startproc
 773              		@ args = 0, pretend = 0, frame = 0
 774              		@ frame_needed = 0, uses_anonymous_args = 0
 775              		@ link register save eliminated.
 776              	.LVL64:
 748:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Check the parameters */
 749:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 750:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 751:.\stm32f4periph\src/stm32f4xx_usart.c ****   
 752:.\stm32f4periph\src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 753:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
 754:.\stm32f4periph\src/stm32f4xx_usart.c ****     /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 755:.\stm32f4periph\src/stm32f4xx_usart.c ****     USARTx->CR2 |= USART_CR2_LINEN;
 777              		.loc 1 755 0
 778 0260 038A     		ldrh	r3, [r0, #16]	@,
 752:.\stm32f4periph\src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 779              		.loc 1 752 0
 780 0262 19B1     		cbz	r1, .L50	@ NewState,
 781              		.loc 1 755 0
 782 0264 9BB2     		uxth	r3, r3	@ D.7545, USARTx_2(D)->CR2
 783 0266 43F48043 		orr	r3, r3, #16384	@ D.7546, D.7545,
 784 026a 03E0     		b	.L52	@
 785              	.L50:
 756:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
 757:.\stm32f4periph\src/stm32f4xx_usart.c ****   else
 758:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
 759:.\stm32f4periph\src/stm32f4xx_usart.c ****     /* Disable the LIN mode by clearing the LINEN bit in the CR2 register */
 760:.\stm32f4periph\src/stm32f4xx_usart.c ****     USARTx->CR2 &= (uint16_t)~((uint16_t)USART_CR2_LINEN);
 786              		.loc 1 760 0
 787 026c 23F48043 		bic	r3, r3, #16384	@ D.7549, USARTx_2(D)->CR2,
 788 0270 1B04     		lsls	r3, r3, #16	@ D.7549, D.7549,
 789 0272 1B0C     		lsrs	r3, r3, #16	@ D.7549, D.7549,
 790              	.L52:
 791 0274 0382     		strh	r3, [r0, #16]	@ movhi	@ D.7549,
 792 0276 7047     		bx	lr	@
 793              		.cfi_endproc
 794              	.LFE125:
 795              		.size	USART_LINCmd, .-USART_LINCmd
 796              		.align	1
 797              		.global	USART_SendBreak
 798              		.thumb
 799              		.thumb_func
 800              		.type	USART_SendBreak, %function
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 29


 801              	USART_SendBreak:
 802              	.LFB126:
 761:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
 762:.\stm32f4periph\src/stm32f4xx_usart.c **** }
 763:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 764:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
 765:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @brief  Transmits break characters.
 766:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 767:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         UART peripheral.
 768:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @retval None
 769:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 770:.\stm32f4periph\src/stm32f4xx_usart.c **** void USART_SendBreak(USART_TypeDef* USARTx)
 771:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 803              		.loc 1 771 0
 804              		.cfi_startproc
 805              		@ args = 0, pretend = 0, frame = 0
 806              		@ frame_needed = 0, uses_anonymous_args = 0
 807              		@ link register save eliminated.
 808              	.LVL65:
 772:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Check the parameters */
 773:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 774:.\stm32f4periph\src/stm32f4xx_usart.c ****   
 775:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Send break characters */
 776:.\stm32f4periph\src/stm32f4xx_usart.c ****   USARTx->CR1 |= USART_CR1_SBK;
 809              		.loc 1 776 0
 810 0278 8389     		ldrh	r3, [r0, #12]	@, USARTx_1(D)->CR1
 811 027a 9BB2     		uxth	r3, r3	@ D.7541, USARTx_1(D)->CR1
 812 027c 43F00103 		orr	r3, r3, #1	@ D.7542, D.7541,
 813 0280 8381     		strh	r3, [r0, #12]	@ movhi	@ D.7542, USARTx_1(D)->CR1
 814 0282 7047     		bx	lr	@
 815              		.cfi_endproc
 816              	.LFE126:
 817              		.size	USART_SendBreak, .-USART_SendBreak
 818              		.align	1
 819              		.global	USART_HalfDuplexCmd
 820              		.thumb
 821              		.thumb_func
 822              		.type	USART_HalfDuplexCmd, %function
 823              	USART_HalfDuplexCmd:
 824              	.LFB127:
 777:.\stm32f4periph\src/stm32f4xx_usart.c **** }
 778:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 779:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
 780:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @}
 781:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 782:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 783:.\stm32f4periph\src/stm32f4xx_usart.c **** /** @defgroup USART_Group5 Halfduplex mode function
 784:.\stm32f4periph\src/stm32f4xx_usart.c ****  *  @brief   Half-duplex mode function 
 785:.\stm32f4periph\src/stm32f4xx_usart.c ****  *
 786:.\stm32f4periph\src/stm32f4xx_usart.c **** @verbatim   
 787:.\stm32f4periph\src/stm32f4xx_usart.c ****  ===============================================================================
 788:.\stm32f4periph\src/stm32f4xx_usart.c ****                          Half-duplex mode function
 789:.\stm32f4periph\src/stm32f4xx_usart.c ****  ===============================================================================  
 790:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 791:.\stm32f4periph\src/stm32f4xx_usart.c ****   This subsection provides a set of functions allowing to manage the USART 
 792:.\stm32f4periph\src/stm32f4xx_usart.c ****   Half-duplex communication.
 793:.\stm32f4periph\src/stm32f4xx_usart.c ****   
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 30


 794:.\stm32f4periph\src/stm32f4xx_usart.c ****   The USART can be configured to follow a single-wire half-duplex protocol where 
 795:.\stm32f4periph\src/stm32f4xx_usart.c ****   the TX and RX lines are internally connected.
 796:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 797:.\stm32f4periph\src/stm32f4xx_usart.c ****   USART Half duplex communication is possible through the following procedure:
 798:.\stm32f4periph\src/stm32f4xx_usart.c ****      1. Program the Baud rate, Word length, Stop bits, Parity, Mode transmitter 
 799:.\stm32f4periph\src/stm32f4xx_usart.c ****         or Mode receiver and hardware flow control values using the USART_Init()
 800:.\stm32f4periph\src/stm32f4xx_usart.c ****         function.
 801:.\stm32f4periph\src/stm32f4xx_usart.c ****      2. Configures the USART address using the USART_SetAddress() function.
 802:.\stm32f4periph\src/stm32f4xx_usart.c ****      3. Enable the USART using the USART_Cmd() function.
 803:.\stm32f4periph\src/stm32f4xx_usart.c ****      4. Enable the half duplex mode using USART_HalfDuplexCmd() function.
 804:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 805:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 806:.\stm32f4periph\src/stm32f4xx_usart.c **** @note The RX pin is no longer used
 807:.\stm32f4periph\src/stm32f4xx_usart.c **** @note In Half-duplex mode the following bits must be kept cleared:
 808:.\stm32f4periph\src/stm32f4xx_usart.c ****         - LINEN and CLKEN bits in the USART_CR2 register.
 809:.\stm32f4periph\src/stm32f4xx_usart.c ****         - SCEN and IREN bits in the USART_CR3 register.
 810:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 811:.\stm32f4periph\src/stm32f4xx_usart.c **** @endverbatim
 812:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @{
 813:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 814:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 815:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
 816:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @brief  Enables or disables the USART's Half Duplex communication.
 817:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 818:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         UART peripheral.
 819:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  NewState: new state of the USART Communication.
 820:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
 821:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @retval None
 822:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 823:.\stm32f4periph\src/stm32f4xx_usart.c **** void USART_HalfDuplexCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 824:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 825              		.loc 1 824 0
 826              		.cfi_startproc
 827              		@ args = 0, pretend = 0, frame = 0
 828              		@ frame_needed = 0, uses_anonymous_args = 0
 829              		@ link register save eliminated.
 830              	.LVL66:
 825:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Check the parameters */
 826:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 827:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 828:.\stm32f4periph\src/stm32f4xx_usart.c ****   
 829:.\stm32f4periph\src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 830:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
 831:.\stm32f4periph\src/stm32f4xx_usart.c ****     /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 832:.\stm32f4periph\src/stm32f4xx_usart.c ****     USARTx->CR3 |= USART_CR3_HDSEL;
 831              		.loc 1 832 0
 832 0284 838A     		ldrh	r3, [r0, #20]	@,
 829:.\stm32f4periph\src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 833              		.loc 1 829 0
 834 0286 19B1     		cbz	r1, .L55	@ NewState,
 835              		.loc 1 832 0
 836 0288 9BB2     		uxth	r3, r3	@ D.7536, USARTx_2(D)->CR3
 837 028a 43F00803 		orr	r3, r3, #8	@ D.7537, D.7536,
 838 028e 03E0     		b	.L57	@
 839              	.L55:
 833:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
 834:.\stm32f4periph\src/stm32f4xx_usart.c ****   else
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 31


 835:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
 836:.\stm32f4periph\src/stm32f4xx_usart.c ****     /* Disable the Half-Duplex mode by clearing the HDSEL bit in the CR3 register */
 837:.\stm32f4periph\src/stm32f4xx_usart.c ****     USARTx->CR3 &= (uint16_t)~((uint16_t)USART_CR3_HDSEL);
 840              		.loc 1 837 0
 841 0290 23F00803 		bic	r3, r3, #8	@ D.7540, USARTx_2(D)->CR3,
 842 0294 1B04     		lsls	r3, r3, #16	@ D.7540, D.7540,
 843 0296 1B0C     		lsrs	r3, r3, #16	@ D.7540, D.7540,
 844              	.L57:
 845 0298 8382     		strh	r3, [r0, #20]	@ movhi	@ D.7540,
 846 029a 7047     		bx	lr	@
 847              		.cfi_endproc
 848              	.LFE127:
 849              		.size	USART_HalfDuplexCmd, .-USART_HalfDuplexCmd
 850              		.align	1
 851              		.global	USART_SetGuardTime
 852              		.thumb
 853              		.thumb_func
 854              		.type	USART_SetGuardTime, %function
 855              	USART_SetGuardTime:
 856              	.LFB128:
 838:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
 839:.\stm32f4periph\src/stm32f4xx_usart.c **** }
 840:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 841:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
 842:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @}
 843:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 844:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 845:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 846:.\stm32f4periph\src/stm32f4xx_usart.c **** /** @defgroup USART_Group6 Smartcard mode functions
 847:.\stm32f4periph\src/stm32f4xx_usart.c ****  *  @brief   Smartcard mode functions 
 848:.\stm32f4periph\src/stm32f4xx_usart.c ****  *
 849:.\stm32f4periph\src/stm32f4xx_usart.c **** @verbatim   
 850:.\stm32f4periph\src/stm32f4xx_usart.c ****  ===============================================================================
 851:.\stm32f4periph\src/stm32f4xx_usart.c ****                                Smartcard mode functions
 852:.\stm32f4periph\src/stm32f4xx_usart.c ****  ===============================================================================  
 853:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 854:.\stm32f4periph\src/stm32f4xx_usart.c ****   This subsection provides a set of functions allowing to manage the USART 
 855:.\stm32f4periph\src/stm32f4xx_usart.c ****   Smartcard communication.
 856:.\stm32f4periph\src/stm32f4xx_usart.c ****   
 857:.\stm32f4periph\src/stm32f4xx_usart.c ****   The Smartcard interface is designed to support asynchronous protocol Smartcards as
 858:.\stm32f4periph\src/stm32f4xx_usart.c ****   defined in the ISO 7816-3 standard.
 859:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 860:.\stm32f4periph\src/stm32f4xx_usart.c ****   The USART can provide a clock to the smartcard through the SCLK output.
 861:.\stm32f4periph\src/stm32f4xx_usart.c ****   In smartcard mode, SCLK is not associated to the communication but is simply derived 
 862:.\stm32f4periph\src/stm32f4xx_usart.c ****   from the internal peripheral input clock through a 5-bit prescaler.
 863:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 864:.\stm32f4periph\src/stm32f4xx_usart.c ****   Smartcard communication is possible through the following procedure:
 865:.\stm32f4periph\src/stm32f4xx_usart.c ****      1. Configures the Smartcard Prescaler using the USART_SetPrescaler() function.
 866:.\stm32f4periph\src/stm32f4xx_usart.c ****      2. Configures the Smartcard Guard Time using the USART_SetGuardTime() function.
 867:.\stm32f4periph\src/stm32f4xx_usart.c ****      3. Program the USART clock using the USART_ClockInit() function as following:
 868:.\stm32f4periph\src/stm32f4xx_usart.c ****         - USART Clock enabled
 869:.\stm32f4periph\src/stm32f4xx_usart.c ****         - USART CPOL Low
 870:.\stm32f4periph\src/stm32f4xx_usart.c ****         - USART CPHA on first edge
 871:.\stm32f4periph\src/stm32f4xx_usart.c ****         - USART Last Bit Clock Enabled
 872:.\stm32f4periph\src/stm32f4xx_usart.c ****      4. Program the Smartcard interface using the USART_Init() function as following:
 873:.\stm32f4periph\src/stm32f4xx_usart.c ****         - Word Length = 9 Bits
 874:.\stm32f4periph\src/stm32f4xx_usart.c ****         - 1.5 Stop Bit
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 32


 875:.\stm32f4periph\src/stm32f4xx_usart.c ****         - Even parity
 876:.\stm32f4periph\src/stm32f4xx_usart.c ****         - BaudRate = 12096 baud
 877:.\stm32f4periph\src/stm32f4xx_usart.c ****         - Hardware flow control disabled (RTS and CTS signals)
 878:.\stm32f4periph\src/stm32f4xx_usart.c ****         - Tx and Rx enabled
 879:.\stm32f4periph\src/stm32f4xx_usart.c ****      5. Optionally you can enable the parity error interrupt using the USART_ITConfig()
 880:.\stm32f4periph\src/stm32f4xx_usart.c ****         function
 881:.\stm32f4periph\src/stm32f4xx_usart.c ****      6. Enable the USART using the USART_Cmd() function.
 882:.\stm32f4periph\src/stm32f4xx_usart.c ****      7. Enable the Smartcard NACK using the USART_SmartCardNACKCmd() function.
 883:.\stm32f4periph\src/stm32f4xx_usart.c ****      8. Enable the Smartcard interface using the USART_SmartCardCmd() function.
 884:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 885:.\stm32f4periph\src/stm32f4xx_usart.c ****   Please refer to the ISO 7816-3 specification for more details.
 886:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 887:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 888:.\stm32f4periph\src/stm32f4xx_usart.c **** @note It is also possible to choose 0.5 stop bit for receiving but it is recommended 
 889:.\stm32f4periph\src/stm32f4xx_usart.c ****       to use 1.5 stop bits for both transmitting and receiving to avoid switching 
 890:.\stm32f4periph\src/stm32f4xx_usart.c ****       between the two configurations.
 891:.\stm32f4periph\src/stm32f4xx_usart.c **** @note In smartcard mode, the following bits must be kept cleared:
 892:.\stm32f4periph\src/stm32f4xx_usart.c ****         - LINEN bit in the USART_CR2 register.
 893:.\stm32f4periph\src/stm32f4xx_usart.c ****         - HDSEL and IREN bits in the USART_CR3 register.
 894:.\stm32f4periph\src/stm32f4xx_usart.c **** @note Smartcard mode is available on USART peripherals only (not available on UART4 
 895:.\stm32f4periph\src/stm32f4xx_usart.c ****       and UART5 peripherals).
 896:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 897:.\stm32f4periph\src/stm32f4xx_usart.c **** @endverbatim
 898:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @{
 899:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 900:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 901:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
 902:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @brief  Sets the specified USART guard time.
 903:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3 or 6 to select the USART or 
 904:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         UART peripheral.
 905:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USART_GuardTime: specifies the guard time.   
 906:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @retval None
 907:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 908:.\stm32f4periph\src/stm32f4xx_usart.c **** void USART_SetGuardTime(USART_TypeDef* USARTx, uint8_t USART_GuardTime)
 909:.\stm32f4periph\src/stm32f4xx_usart.c **** {    
 857              		.loc 1 909 0
 858              		.cfi_startproc
 859              		@ args = 0, pretend = 0, frame = 0
 860              		@ frame_needed = 0, uses_anonymous_args = 0
 861              		@ link register save eliminated.
 862              	.LVL67:
 910:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Check the parameters */
 911:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_1236_PERIPH(USARTx));
 912:.\stm32f4periph\src/stm32f4xx_usart.c ****   
 913:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Clear the USART Guard time */
 914:.\stm32f4periph\src/stm32f4xx_usart.c ****   USARTx->GTPR &= USART_GTPR_PSC;
 863              		.loc 1 914 0
 864 029c 038B     		ldrh	r3, [r0, #24]	@, USARTx_1(D)->GTPR
 865 029e DBB2     		uxtb	r3, r3	@ D.7529, USARTx_1(D)->GTPR
 866 02a0 0383     		strh	r3, [r0, #24]	@ movhi	@ D.7529, USARTx_1(D)->GTPR
 915:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Set the USART guard time */
 916:.\stm32f4periph\src/stm32f4xx_usart.c ****   USARTx->GTPR |= (uint16_t)((uint16_t)USART_GuardTime << 0x08);
 867              		.loc 1 916 0
 868 02a2 038B     		ldrh	r3, [r0, #24]	@, USARTx_1(D)->GTPR
 869 02a4 9BB2     		uxth	r3, r3	@ D.7530, USARTx_1(D)->GTPR
 870 02a6 43EA0121 		orr	r1, r3, r1, lsl #8	@, D.7533, D.7530, USART_GuardTime,
 871              	.LVL68:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 33


 872 02aa 0183     		strh	r1, [r0, #24]	@ movhi	@ D.7533, USARTx_1(D)->GTPR
 873 02ac 7047     		bx	lr	@
 874              		.cfi_endproc
 875              	.LFE128:
 876              		.size	USART_SetGuardTime, .-USART_SetGuardTime
 877              		.align	1
 878              		.global	USART_SmartCardCmd
 879              		.thumb
 880              		.thumb_func
 881              		.type	USART_SmartCardCmd, %function
 882              	USART_SmartCardCmd:
 883              	.LFB129:
 917:.\stm32f4periph\src/stm32f4xx_usart.c **** }
 918:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 919:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
 920:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @brief  Enables or disables the USART's Smart Card mode.
 921:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3 or 6 to select the USART or 
 922:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         UART peripheral.
 923:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  NewState: new state of the Smart Card mode.
 924:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.      
 925:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @retval None
 926:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 927:.\stm32f4periph\src/stm32f4xx_usart.c **** void USART_SmartCardCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 928:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 884              		.loc 1 928 0
 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 0
 887              		@ frame_needed = 0, uses_anonymous_args = 0
 888              		@ link register save eliminated.
 889              	.LVL69:
 929:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Check the parameters */
 930:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_1236_PERIPH(USARTx));
 931:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 932:.\stm32f4periph\src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 933:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
 934:.\stm32f4periph\src/stm32f4xx_usart.c ****     /* Enable the SC mode by setting the SCEN bit in the CR3 register */
 935:.\stm32f4periph\src/stm32f4xx_usart.c ****     USARTx->CR3 |= USART_CR3_SCEN;
 890              		.loc 1 935 0
 891 02ae 838A     		ldrh	r3, [r0, #20]	@,
 932:.\stm32f4periph\src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 892              		.loc 1 932 0
 893 02b0 19B1     		cbz	r1, .L60	@ NewState,
 894              		.loc 1 935 0
 895 02b2 9BB2     		uxth	r3, r3	@ D.7523, USARTx_2(D)->CR3
 896 02b4 43F02003 		orr	r3, r3, #32	@ D.7524, D.7523,
 897 02b8 03E0     		b	.L62	@
 898              	.L60:
 936:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
 937:.\stm32f4periph\src/stm32f4xx_usart.c ****   else
 938:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
 939:.\stm32f4periph\src/stm32f4xx_usart.c ****     /* Disable the SC mode by clearing the SCEN bit in the CR3 register */
 940:.\stm32f4periph\src/stm32f4xx_usart.c ****     USARTx->CR3 &= (uint16_t)~((uint16_t)USART_CR3_SCEN);
 899              		.loc 1 940 0
 900 02ba 23F02003 		bic	r3, r3, #32	@ D.7527, USARTx_2(D)->CR3,
 901 02be 1B04     		lsls	r3, r3, #16	@ D.7527, D.7527,
 902 02c0 1B0C     		lsrs	r3, r3, #16	@ D.7527, D.7527,
 903              	.L62:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 34


 904 02c2 8382     		strh	r3, [r0, #20]	@ movhi	@ D.7527,
 905 02c4 7047     		bx	lr	@
 906              		.cfi_endproc
 907              	.LFE129:
 908              		.size	USART_SmartCardCmd, .-USART_SmartCardCmd
 909              		.align	1
 910              		.global	USART_SmartCardNACKCmd
 911              		.thumb
 912              		.thumb_func
 913              		.type	USART_SmartCardNACKCmd, %function
 914              	USART_SmartCardNACKCmd:
 915              	.LFB130:
 941:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
 942:.\stm32f4periph\src/stm32f4xx_usart.c **** }
 943:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 944:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
 945:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @brief  Enables or disables NACK transmission.
 946:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3 or 6 to select the USART or 
 947:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         UART peripheral.
 948:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  NewState: new state of the NACK transmission.
 949:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.  
 950:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @retval None
 951:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 952:.\stm32f4periph\src/stm32f4xx_usart.c **** void USART_SmartCardNACKCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 953:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 916              		.loc 1 953 0
 917              		.cfi_startproc
 918              		@ args = 0, pretend = 0, frame = 0
 919              		@ frame_needed = 0, uses_anonymous_args = 0
 920              		@ link register save eliminated.
 921              	.LVL70:
 954:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Check the parameters */
 955:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_1236_PERIPH(USARTx)); 
 956:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 957:.\stm32f4periph\src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 958:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
 959:.\stm32f4periph\src/stm32f4xx_usart.c ****     /* Enable the NACK transmission by setting the NACK bit in the CR3 register */
 960:.\stm32f4periph\src/stm32f4xx_usart.c ****     USARTx->CR3 |= USART_CR3_NACK;
 922              		.loc 1 960 0
 923 02c6 838A     		ldrh	r3, [r0, #20]	@,
 957:.\stm32f4periph\src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 924              		.loc 1 957 0
 925 02c8 19B1     		cbz	r1, .L64	@ NewState,
 926              		.loc 1 960 0
 927 02ca 9BB2     		uxth	r3, r3	@ D.7516, USARTx_2(D)->CR3
 928 02cc 43F01003 		orr	r3, r3, #16	@ D.7517, D.7516,
 929 02d0 03E0     		b	.L66	@
 930              	.L64:
 961:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
 962:.\stm32f4periph\src/stm32f4xx_usart.c ****   else
 963:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
 964:.\stm32f4periph\src/stm32f4xx_usart.c ****     /* Disable the NACK transmission by clearing the NACK bit in the CR3 register */
 965:.\stm32f4periph\src/stm32f4xx_usart.c ****     USARTx->CR3 &= (uint16_t)~((uint16_t)USART_CR3_NACK);
 931              		.loc 1 965 0
 932 02d2 23F01003 		bic	r3, r3, #16	@ D.7520, USARTx_2(D)->CR3,
 933 02d6 1B04     		lsls	r3, r3, #16	@ D.7520, D.7520,
 934 02d8 1B0C     		lsrs	r3, r3, #16	@ D.7520, D.7520,
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 35


 935              	.L66:
 936 02da 8382     		strh	r3, [r0, #20]	@ movhi	@ D.7520,
 937 02dc 7047     		bx	lr	@
 938              		.cfi_endproc
 939              	.LFE130:
 940              		.size	USART_SmartCardNACKCmd, .-USART_SmartCardNACKCmd
 941              		.align	1
 942              		.global	USART_IrDAConfig
 943              		.thumb
 944              		.thumb_func
 945              		.type	USART_IrDAConfig, %function
 946              	USART_IrDAConfig:
 947              	.LFB131:
 966:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
 967:.\stm32f4periph\src/stm32f4xx_usart.c **** }
 968:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 969:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
 970:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @}
 971:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
 972:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 973:.\stm32f4periph\src/stm32f4xx_usart.c **** /** @defgroup USART_Group7 IrDA mode functions
 974:.\stm32f4periph\src/stm32f4xx_usart.c ****  *  @brief   IrDA mode functions 
 975:.\stm32f4periph\src/stm32f4xx_usart.c ****  *
 976:.\stm32f4periph\src/stm32f4xx_usart.c **** @verbatim   
 977:.\stm32f4periph\src/stm32f4xx_usart.c ****  ===============================================================================
 978:.\stm32f4periph\src/stm32f4xx_usart.c ****                                 IrDA mode functions
 979:.\stm32f4periph\src/stm32f4xx_usart.c ****  ===============================================================================  
 980:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 981:.\stm32f4periph\src/stm32f4xx_usart.c ****   This subsection provides a set of functions allowing to manage the USART 
 982:.\stm32f4periph\src/stm32f4xx_usart.c ****   IrDA communication.
 983:.\stm32f4periph\src/stm32f4xx_usart.c ****   
 984:.\stm32f4periph\src/stm32f4xx_usart.c ****   IrDA is a half duplex communication protocol. If the Transmitter is busy, any data
 985:.\stm32f4periph\src/stm32f4xx_usart.c ****   on the IrDA receive line will be ignored by the IrDA decoder and if the Receiver 
 986:.\stm32f4periph\src/stm32f4xx_usart.c ****   is busy, data on the TX from the USART to IrDA will not be encoded by IrDA.
 987:.\stm32f4periph\src/stm32f4xx_usart.c ****   While receiving data, transmission should be avoided as the data to be transmitted
 988:.\stm32f4periph\src/stm32f4xx_usart.c ****   could be corrupted.
 989:.\stm32f4periph\src/stm32f4xx_usart.c **** 
 990:.\stm32f4periph\src/stm32f4xx_usart.c ****   IrDA communication is possible through the following procedure:
 991:.\stm32f4periph\src/stm32f4xx_usart.c ****      1. Program the Baud rate, Word length = 8 bits, Stop bits, Parity, Transmitter/Receiver 
 992:.\stm32f4periph\src/stm32f4xx_usart.c ****         modes and hardware flow control values using the USART_Init() function.
 993:.\stm32f4periph\src/stm32f4xx_usart.c ****      2. Enable the USART using the USART_Cmd() function.
 994:.\stm32f4periph\src/stm32f4xx_usart.c ****      3. Configures the IrDA pulse width by configuring the prescaler using  
 995:.\stm32f4periph\src/stm32f4xx_usart.c ****         the USART_SetPrescaler() function.
 996:.\stm32f4periph\src/stm32f4xx_usart.c ****      4. Configures the IrDA  USART_IrDAMode_LowPower or USART_IrDAMode_Normal mode
 997:.\stm32f4periph\src/stm32f4xx_usart.c ****         using the USART_IrDAConfig() function.
 998:.\stm32f4periph\src/stm32f4xx_usart.c ****      5. Enable the IrDA using the USART_IrDACmd() function.
 999:.\stm32f4periph\src/stm32f4xx_usart.c **** 
1000:.\stm32f4periph\src/stm32f4xx_usart.c **** @note A pulse of width less than two and greater than one PSC period(s) may or may
1001:.\stm32f4periph\src/stm32f4xx_usart.c ****       not be rejected.
1002:.\stm32f4periph\src/stm32f4xx_usart.c **** @note The receiver set up time should be managed by software. The IrDA physical layer
1003:.\stm32f4periph\src/stm32f4xx_usart.c ****       specification specifies a minimum of 10 ms delay between transmission and 
1004:.\stm32f4periph\src/stm32f4xx_usart.c ****       reception (IrDA is a half duplex protocol).
1005:.\stm32f4periph\src/stm32f4xx_usart.c **** @note In IrDA mode, the following bits must be kept cleared:
1006:.\stm32f4periph\src/stm32f4xx_usart.c ****         - LINEN, STOP and CLKEN bits in the USART_CR2 register.
1007:.\stm32f4periph\src/stm32f4xx_usart.c ****         - SCEN and HDSEL bits in the USART_CR3 register.
1008:.\stm32f4periph\src/stm32f4xx_usart.c **** 
1009:.\stm32f4periph\src/stm32f4xx_usart.c **** @endverbatim
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 36


1010:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @{
1011:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
1012:.\stm32f4periph\src/stm32f4xx_usart.c **** 
1013:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
1014:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @brief  Configures the USART's IrDA interface.
1015:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
1016:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         UART peripheral.
1017:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USART_IrDAMode: specifies the IrDA mode.
1018:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          This parameter can be one of the following values:
1019:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_IrDAMode_LowPower
1020:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_IrDAMode_Normal
1021:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @retval None
1022:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
1023:.\stm32f4periph\src/stm32f4xx_usart.c **** void USART_IrDAConfig(USART_TypeDef* USARTx, uint16_t USART_IrDAMode)
1024:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 948              		.loc 1 1024 0
 949              		.cfi_startproc
 950              		@ args = 0, pretend = 0, frame = 0
 951              		@ frame_needed = 0, uses_anonymous_args = 0
 952              		@ link register save eliminated.
 953              	.LVL71:
1025:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Check the parameters */
1026:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1027:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_IRDA_MODE(USART_IrDAMode));
1028:.\stm32f4periph\src/stm32f4xx_usart.c ****     
1029:.\stm32f4periph\src/stm32f4xx_usart.c ****   USARTx->CR3 &= (uint16_t)~((uint16_t)USART_CR3_IRLP);
 954              		.loc 1 1029 0
 955 02de 838A     		ldrh	r3, [r0, #20]	@, USARTx_1(D)->CR3
 956 02e0 23F00403 		bic	r3, r3, #4	@ D.7511, USARTx_1(D)->CR3,
 957 02e4 1B04     		lsls	r3, r3, #16	@ D.7511, D.7511,
 958 02e6 1B0C     		lsrs	r3, r3, #16	@ D.7511, D.7511,
 959 02e8 8382     		strh	r3, [r0, #20]	@ movhi	@ D.7511, USARTx_1(D)->CR3
1030:.\stm32f4periph\src/stm32f4xx_usart.c ****   USARTx->CR3 |= USART_IrDAMode;
 960              		.loc 1 1030 0
 961 02ea 838A     		ldrh	r3, [r0, #20]	@, USARTx_1(D)->CR3
 962 02ec 9BB2     		uxth	r3, r3	@ D.7512, USARTx_1(D)->CR3
 963 02ee 1943     		orrs	r1, r1, r3	@, D.7513, USART_IrDAMode, D.7512
 964              	.LVL72:
 965 02f0 8182     		strh	r1, [r0, #20]	@ movhi	@ D.7513, USARTx_1(D)->CR3
 966 02f2 7047     		bx	lr	@
 967              		.cfi_endproc
 968              	.LFE131:
 969              		.size	USART_IrDAConfig, .-USART_IrDAConfig
 970              		.align	1
 971              		.global	USART_IrDACmd
 972              		.thumb
 973              		.thumb_func
 974              		.type	USART_IrDACmd, %function
 975              	USART_IrDACmd:
 976              	.LFB132:
1031:.\stm32f4periph\src/stm32f4xx_usart.c **** }
1032:.\stm32f4periph\src/stm32f4xx_usart.c **** 
1033:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
1034:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @brief  Enables or disables the USART's IrDA interface.
1035:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
1036:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         UART peripheral.
1037:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  NewState: new state of the IrDA mode.
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 37


1038:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
1039:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @retval None
1040:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
1041:.\stm32f4periph\src/stm32f4xx_usart.c **** void USART_IrDACmd(USART_TypeDef* USARTx, FunctionalState NewState)
1042:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 977              		.loc 1 1042 0
 978              		.cfi_startproc
 979              		@ args = 0, pretend = 0, frame = 0
 980              		@ frame_needed = 0, uses_anonymous_args = 0
 981              		@ link register save eliminated.
 982              	.LVL73:
1043:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Check the parameters */
1044:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1045:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1046:.\stm32f4periph\src/stm32f4xx_usart.c ****     
1047:.\stm32f4periph\src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
1048:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
1049:.\stm32f4periph\src/stm32f4xx_usart.c ****     /* Enable the IrDA mode by setting the IREN bit in the CR3 register */
1050:.\stm32f4periph\src/stm32f4xx_usart.c ****     USARTx->CR3 |= USART_CR3_IREN;
 983              		.loc 1 1050 0
 984 02f4 838A     		ldrh	r3, [r0, #20]	@,
1047:.\stm32f4periph\src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 985              		.loc 1 1047 0
 986 02f6 19B1     		cbz	r1, .L69	@ NewState,
 987              		.loc 1 1050 0
 988 02f8 9BB2     		uxth	r3, r3	@ D.7505, USARTx_2(D)->CR3
 989 02fa 43F00203 		orr	r3, r3, #2	@ D.7506, D.7505,
 990 02fe 03E0     		b	.L71	@
 991              	.L69:
1051:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
1052:.\stm32f4periph\src/stm32f4xx_usart.c ****   else
1053:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
1054:.\stm32f4periph\src/stm32f4xx_usart.c ****     /* Disable the IrDA mode by clearing the IREN bit in the CR3 register */
1055:.\stm32f4periph\src/stm32f4xx_usart.c ****     USARTx->CR3 &= (uint16_t)~((uint16_t)USART_CR3_IREN);
 992              		.loc 1 1055 0
 993 0300 23F00203 		bic	r3, r3, #2	@ D.7509, USARTx_2(D)->CR3,
 994 0304 1B04     		lsls	r3, r3, #16	@ D.7509, D.7509,
 995 0306 1B0C     		lsrs	r3, r3, #16	@ D.7509, D.7509,
 996              	.L71:
 997 0308 8382     		strh	r3, [r0, #20]	@ movhi	@ D.7509,
 998 030a 7047     		bx	lr	@
 999              		.cfi_endproc
 1000              	.LFE132:
 1001              		.size	USART_IrDACmd, .-USART_IrDACmd
 1002              		.align	1
 1003              		.global	USART_DMACmd
 1004              		.thumb
 1005              		.thumb_func
 1006              		.type	USART_DMACmd, %function
 1007              	USART_DMACmd:
 1008              	.LFB133:
1056:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
1057:.\stm32f4periph\src/stm32f4xx_usart.c **** }
1058:.\stm32f4periph\src/stm32f4xx_usart.c **** 
1059:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
1060:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @}
1061:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 38


1062:.\stm32f4periph\src/stm32f4xx_usart.c **** 
1063:.\stm32f4periph\src/stm32f4xx_usart.c **** /** @defgroup USART_Group8 DMA transfers management functions
1064:.\stm32f4periph\src/stm32f4xx_usart.c ****  *  @brief   DMA transfers management functions
1065:.\stm32f4periph\src/stm32f4xx_usart.c ****  *
1066:.\stm32f4periph\src/stm32f4xx_usart.c **** @verbatim   
1067:.\stm32f4periph\src/stm32f4xx_usart.c ****  ===============================================================================
1068:.\stm32f4periph\src/stm32f4xx_usart.c ****                       DMA transfers management functions
1069:.\stm32f4periph\src/stm32f4xx_usart.c ****  ===============================================================================  
1070:.\stm32f4periph\src/stm32f4xx_usart.c **** 
1071:.\stm32f4periph\src/stm32f4xx_usart.c **** @endverbatim
1072:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @{
1073:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
1074:.\stm32f4periph\src/stm32f4xx_usart.c ****   
1075:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
1076:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @brief  Enables or disables the USART's DMA interface.
1077:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
1078:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         UART peripheral.
1079:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USART_DMAReq: specifies the DMA request.
1080:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          This parameter can be any combination of the following values:
1081:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_DMAReq_Tx: USART DMA transmit request
1082:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_DMAReq_Rx: USART DMA receive request
1083:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  NewState: new state of the DMA Request sources.
1084:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.   
1085:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @retval None
1086:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
1087:.\stm32f4periph\src/stm32f4xx_usart.c **** void USART_DMACmd(USART_TypeDef* USARTx, uint16_t USART_DMAReq, FunctionalState NewState)
1088:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 1009              		.loc 1 1088 0
 1010              		.cfi_startproc
 1011              		@ args = 0, pretend = 0, frame = 0
 1012              		@ frame_needed = 0, uses_anonymous_args = 0
 1013              		@ link register save eliminated.
 1014              	.LVL74:
1089:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Check the parameters */
1090:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1091:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_DMAREQ(USART_DMAReq));  
1092:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState)); 
1093:.\stm32f4periph\src/stm32f4xx_usart.c **** 
1094:.\stm32f4periph\src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
1095:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
1096:.\stm32f4periph\src/stm32f4xx_usart.c ****     /* Enable the DMA transfer for selected requests by setting the DMAT and/or
1097:.\stm32f4periph\src/stm32f4xx_usart.c ****        DMAR bits in the USART CR3 register */
1098:.\stm32f4periph\src/stm32f4xx_usart.c ****     USARTx->CR3 |= USART_DMAReq;
 1015              		.loc 1 1098 0
 1016 030c 838A     		ldrh	r3, [r0, #20]	@,
 1017 030e 9BB2     		uxth	r3, r3	@ D.7497, USARTx_2(D)->CR3
1094:.\stm32f4periph\src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 1018              		.loc 1 1094 0
 1019 0310 0AB1     		cbz	r2, .L73	@ NewState,
 1020              		.loc 1 1098 0
 1021 0312 1943     		orrs	r1, r1, r3	@, D.7498, USART_DMAReq, D.7497
 1022              	.LVL75:
 1023 0314 01E0     		b	.L75	@
 1024              	.LVL76:
 1025              	.L73:
1099:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
1100:.\stm32f4periph\src/stm32f4xx_usart.c ****   else
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 39


1101:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
1102:.\stm32f4periph\src/stm32f4xx_usart.c ****     /* Disable the DMA transfer for selected requests by clearing the DMAT and/or
1103:.\stm32f4periph\src/stm32f4xx_usart.c ****        DMAR bits in the USART CR3 register */
1104:.\stm32f4periph\src/stm32f4xx_usart.c ****     USARTx->CR3 &= (uint16_t)~USART_DMAReq;
 1026              		.loc 1 1104 0
 1027 0316 23EA0101 		bic	r1, r3, r1	@ D.7502, D.7500, USART_DMAReq
 1028              	.LVL77:
 1029              	.L75:
 1030 031a 8182     		strh	r1, [r0, #20]	@ movhi	@ D.7502,
 1031 031c 7047     		bx	lr	@
 1032              		.cfi_endproc
 1033              	.LFE133:
 1034              		.size	USART_DMACmd, .-USART_DMACmd
 1035              		.align	1
 1036              		.global	USART_ITConfig
 1037              		.thumb
 1038              		.thumb_func
 1039              		.type	USART_ITConfig, %function
 1040              	USART_ITConfig:
 1041              	.LFB134:
1105:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
1106:.\stm32f4periph\src/stm32f4xx_usart.c **** }
1107:.\stm32f4periph\src/stm32f4xx_usart.c **** 
1108:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
1109:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @}
1110:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
1111:.\stm32f4periph\src/stm32f4xx_usart.c ****   
1112:.\stm32f4periph\src/stm32f4xx_usart.c **** /** @defgroup USART_Group9 Interrupts and flags management functions
1113:.\stm32f4periph\src/stm32f4xx_usart.c ****  *  @brief   Interrupts and flags management functions 
1114:.\stm32f4periph\src/stm32f4xx_usart.c ****  *
1115:.\stm32f4periph\src/stm32f4xx_usart.c **** @verbatim   
1116:.\stm32f4periph\src/stm32f4xx_usart.c ****  ===============================================================================
1117:.\stm32f4periph\src/stm32f4xx_usart.c ****                    Interrupts and flags management functions
1118:.\stm32f4periph\src/stm32f4xx_usart.c ****  ===============================================================================  
1119:.\stm32f4periph\src/stm32f4xx_usart.c **** 
1120:.\stm32f4periph\src/stm32f4xx_usart.c ****   This subsection provides a set of functions allowing to configure the USART 
1121:.\stm32f4periph\src/stm32f4xx_usart.c ****   Interrupts sources, DMA channels requests and check or clear the flags or 
1122:.\stm32f4periph\src/stm32f4xx_usart.c ****   pending bits status.
1123:.\stm32f4periph\src/stm32f4xx_usart.c ****   The user should identify which mode will be used in his application to manage 
1124:.\stm32f4periph\src/stm32f4xx_usart.c ****   the communication: Polling mode, Interrupt mode or DMA mode. 
1125:.\stm32f4periph\src/stm32f4xx_usart.c ****     
1126:.\stm32f4periph\src/stm32f4xx_usart.c ****   Polling Mode
1127:.\stm32f4periph\src/stm32f4xx_usart.c ****   =============
1128:.\stm32f4periph\src/stm32f4xx_usart.c ****   In Polling Mode, the SPI communication can be managed by 10 flags:
1129:.\stm32f4periph\src/stm32f4xx_usart.c ****      1. USART_FLAG_TXE : to indicate the status of the transmit buffer register
1130:.\stm32f4periph\src/stm32f4xx_usart.c ****      2. USART_FLAG_RXNE : to indicate the status of the receive buffer register
1131:.\stm32f4periph\src/stm32f4xx_usart.c ****      3. USART_FLAG_TC : to indicate the status of the transmit operation
1132:.\stm32f4periph\src/stm32f4xx_usart.c ****      4. USART_FLAG_IDLE : to indicate the status of the Idle Line             
1133:.\stm32f4periph\src/stm32f4xx_usart.c ****      5. USART_FLAG_CTS : to indicate the status of the nCTS input
1134:.\stm32f4periph\src/stm32f4xx_usart.c ****      6. USART_FLAG_LBD : to indicate the status of the LIN break detection
1135:.\stm32f4periph\src/stm32f4xx_usart.c ****      7. USART_FLAG_NE : to indicate if a noise error occur
1136:.\stm32f4periph\src/stm32f4xx_usart.c ****      8. USART_FLAG_FE : to indicate if a frame error occur
1137:.\stm32f4periph\src/stm32f4xx_usart.c ****      9. USART_FLAG_PE : to indicate if a parity error occur
1138:.\stm32f4periph\src/stm32f4xx_usart.c ****      10. USART_FLAG_ORE : to indicate if an Overrun error occur
1139:.\stm32f4periph\src/stm32f4xx_usart.c **** 
1140:.\stm32f4periph\src/stm32f4xx_usart.c ****   In this Mode it is advised to use the following functions:
1141:.\stm32f4periph\src/stm32f4xx_usart.c ****       - FlagStatus USART_GetFlagStatus(USART_TypeDef* USARTx, uint16_t USART_FLAG);
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 40


1142:.\stm32f4periph\src/stm32f4xx_usart.c ****       - void USART_ClearFlag(USART_TypeDef* USARTx, uint16_t USART_FLAG);
1143:.\stm32f4periph\src/stm32f4xx_usart.c **** 
1144:.\stm32f4periph\src/stm32f4xx_usart.c ****   Interrupt Mode
1145:.\stm32f4periph\src/stm32f4xx_usart.c ****   ===============
1146:.\stm32f4periph\src/stm32f4xx_usart.c ****   In Interrupt Mode, the USART communication can be managed by 8 interrupt sources
1147:.\stm32f4periph\src/stm32f4xx_usart.c ****   and 10 pending bits: 
1148:.\stm32f4periph\src/stm32f4xx_usart.c **** 
1149:.\stm32f4periph\src/stm32f4xx_usart.c ****   Pending Bits:
1150:.\stm32f4periph\src/stm32f4xx_usart.c ****   ------------- 
1151:.\stm32f4periph\src/stm32f4xx_usart.c ****      1. USART_IT_TXE : to indicate the status of the transmit buffer register
1152:.\stm32f4periph\src/stm32f4xx_usart.c ****      2. USART_IT_RXNE : to indicate the status of the receive buffer register
1153:.\stm32f4periph\src/stm32f4xx_usart.c ****      3. USART_IT_TC : to indicate the status of the transmit operation
1154:.\stm32f4periph\src/stm32f4xx_usart.c ****      4. USART_IT_IDLE : to indicate the status of the Idle Line             
1155:.\stm32f4periph\src/stm32f4xx_usart.c ****      5. USART_IT_CTS : to indicate the status of the nCTS input
1156:.\stm32f4periph\src/stm32f4xx_usart.c ****      6. USART_IT_LBD : to indicate the status of the LIN break detection
1157:.\stm32f4periph\src/stm32f4xx_usart.c ****      7. USART_IT_NE : to indicate if a noise error occur
1158:.\stm32f4periph\src/stm32f4xx_usart.c ****      8. USART_IT_FE : to indicate if a frame error occur
1159:.\stm32f4periph\src/stm32f4xx_usart.c ****      9. USART_IT_PE : to indicate if a parity error occur
1160:.\stm32f4periph\src/stm32f4xx_usart.c ****      10. USART_IT_ORE : to indicate if an Overrun error occur
1161:.\stm32f4periph\src/stm32f4xx_usart.c **** 
1162:.\stm32f4periph\src/stm32f4xx_usart.c ****   Interrupt Source:
1163:.\stm32f4periph\src/stm32f4xx_usart.c ****   -----------------
1164:.\stm32f4periph\src/stm32f4xx_usart.c ****      1. USART_IT_TXE : specifies the interrupt source for the Tx buffer empty 
1165:.\stm32f4periph\src/stm32f4xx_usart.c ****                        interrupt. 
1166:.\stm32f4periph\src/stm32f4xx_usart.c ****      2. USART_IT_RXNE : specifies the interrupt source for the Rx buffer not 
1167:.\stm32f4periph\src/stm32f4xx_usart.c ****                         empty interrupt.
1168:.\stm32f4periph\src/stm32f4xx_usart.c ****      3. USART_IT_TC : specifies the interrupt source for the Transmit complete 
1169:.\stm32f4periph\src/stm32f4xx_usart.c ****                        interrupt. 
1170:.\stm32f4periph\src/stm32f4xx_usart.c ****      4. USART_IT_IDLE : specifies the interrupt source for the Idle Line interrupt.             
1171:.\stm32f4periph\src/stm32f4xx_usart.c ****      5. USART_IT_CTS : specifies the interrupt source for the CTS interrupt. 
1172:.\stm32f4periph\src/stm32f4xx_usart.c ****      6. USART_IT_LBD : specifies the interrupt source for the LIN break detection
1173:.\stm32f4periph\src/stm32f4xx_usart.c ****                        interrupt. 
1174:.\stm32f4periph\src/stm32f4xx_usart.c ****      7. USART_IT_PE : specifies the interrupt source for the parity error interrupt. 
1175:.\stm32f4periph\src/stm32f4xx_usart.c ****      8. USART_IT_ERR :  specifies the interrupt source for the errors interrupt.
1176:.\stm32f4periph\src/stm32f4xx_usart.c **** 
1177:.\stm32f4periph\src/stm32f4xx_usart.c **** @note Some parameters are coded in order to use them as interrupt source or as pending bits.
1178:.\stm32f4periph\src/stm32f4xx_usart.c **** 
1179:.\stm32f4periph\src/stm32f4xx_usart.c ****   In this Mode it is advised to use the following functions:
1180:.\stm32f4periph\src/stm32f4xx_usart.c ****      - void USART_ITConfig(USART_TypeDef* USARTx, uint16_t USART_IT, FunctionalState NewState);
1181:.\stm32f4periph\src/stm32f4xx_usart.c ****      - ITStatus USART_GetITStatus(USART_TypeDef* USARTx, uint16_t USART_IT);
1182:.\stm32f4periph\src/stm32f4xx_usart.c ****      - void USART_ClearITPendingBit(USART_TypeDef* USARTx, uint16_t USART_IT);
1183:.\stm32f4periph\src/stm32f4xx_usart.c **** 
1184:.\stm32f4periph\src/stm32f4xx_usart.c ****   DMA Mode
1185:.\stm32f4periph\src/stm32f4xx_usart.c ****   ========
1186:.\stm32f4periph\src/stm32f4xx_usart.c ****   In DMA Mode, the USART communication can be managed by 2 DMA Channel requests:
1187:.\stm32f4periph\src/stm32f4xx_usart.c ****      1. USART_DMAReq_Tx: specifies the Tx buffer DMA transfer request
1188:.\stm32f4periph\src/stm32f4xx_usart.c ****      2. USART_DMAReq_Rx: specifies the Rx buffer DMA transfer request
1189:.\stm32f4periph\src/stm32f4xx_usart.c **** 
1190:.\stm32f4periph\src/stm32f4xx_usart.c ****   In this Mode it is advised to use the following function:
1191:.\stm32f4periph\src/stm32f4xx_usart.c ****      - void USART_DMACmd(USART_TypeDef* USARTx, uint16_t USART_DMAReq, FunctionalState NewState);
1192:.\stm32f4periph\src/stm32f4xx_usart.c **** 
1193:.\stm32f4periph\src/stm32f4xx_usart.c **** @endverbatim
1194:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @{
1195:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
1196:.\stm32f4periph\src/stm32f4xx_usart.c **** 
1197:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
1198:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @brief  Enables or disables the specified USART interrupts.
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 41


1199:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
1200:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         UART peripheral.
1201:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USART_IT: specifies the USART interrupt sources to be enabled or disabled.
1202:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          This parameter can be one of the following values:
1203:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_IT_CTS:  CTS change interrupt
1204:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_IT_LBD:  LIN Break detection interrupt
1205:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_IT_TXE:  Transmit Data Register empty interrupt
1206:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_IT_TC:   Transmission complete interrupt
1207:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_IT_RXNE: Receive Data register not empty interrupt
1208:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_IT_IDLE: Idle line detection interrupt
1209:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_IT_PE:   Parity Error interrupt
1210:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_IT_ERR:  Error interrupt(Frame error, noise error, overrun error)
1211:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  NewState: new state of the specified USARTx interrupts.
1212:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
1213:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @retval None
1214:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
1215:.\stm32f4periph\src/stm32f4xx_usart.c **** void USART_ITConfig(USART_TypeDef* USARTx, uint16_t USART_IT, FunctionalState NewState)
1216:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 1042              		.loc 1 1216 0
 1043              		.cfi_startproc
 1044              		@ args = 0, pretend = 0, frame = 0
 1045              		@ frame_needed = 0, uses_anonymous_args = 0
 1046              	.LVL78:
1217:.\stm32f4periph\src/stm32f4xx_usart.c ****   uint32_t usartreg = 0x00, itpos = 0x00, itmask = 0x00;
1218:.\stm32f4periph\src/stm32f4xx_usart.c ****   uint32_t usartxbase = 0x00;
1219:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Check the parameters */
1220:.\stm32f4periph\src/stm32f4xx_usart.c ****     
1221:.\stm32f4periph\src/stm32f4xx_usart.c ****   usartxbase = (uint32_t)USARTx;
1222:.\stm32f4periph\src/stm32f4xx_usart.c **** 
1223:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Get the USART register index */
1224:.\stm32f4periph\src/stm32f4xx_usart.c ****   usartreg = (((uint8_t)USART_IT) >> 0x05);
 1047              		.loc 1 1224 0
 1048 031e C1F34213 		ubfx	r3, r1, #5, #3	@ usartreg, USART_IT,,
 1049              	.LVL79:
1216:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 1050              		.loc 1 1216 0
 1051 0322 10B5     		push	{r4, lr}	@
 1052              	.LCFI4:
 1053              		.cfi_def_cfa_offset 8
 1054              		.cfi_offset 4, -8
 1055              		.cfi_offset 14, -4
1225:.\stm32f4periph\src/stm32f4xx_usart.c **** 
1226:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Get the interrupt position */
1227:.\stm32f4periph\src/stm32f4xx_usart.c ****   itpos = USART_IT & IT_MASK;
1228:.\stm32f4periph\src/stm32f4xx_usart.c ****   itmask = (((uint32_t)0x01) << itpos);
 1056              		.loc 1 1228 0
 1057 0324 0124     		movs	r4, #1	@ tmp156,
 1058 0326 01F01F01 		and	r1, r1, #31	@ tmp155, USART_IT,
 1059              	.LVL80:
1229:.\stm32f4periph\src/stm32f4xx_usart.c ****     
1230:.\stm32f4periph\src/stm32f4xx_usart.c ****   if (usartreg == 0x01) /* The IT is in CR1 register */
 1060              		.loc 1 1230 0
 1061 032a A342     		cmp	r3, r4	@ usartreg,
1228:.\stm32f4periph\src/stm32f4xx_usart.c ****   itmask = (((uint32_t)0x01) << itpos);
 1062              		.loc 1 1228 0
 1063 032c 04FA01F1 		lsl	r1, r4, r1	@ itmask, tmp156, tmp155
 1064              	.LVL81:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 42


 1065              		.loc 1 1230 0
 1066 0330 01D1     		bne	.L77	@,
1231:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
1232:.\stm32f4periph\src/stm32f4xx_usart.c ****     usartxbase += 0x0C;
 1067              		.loc 1 1232 0
 1068 0332 0C30     		adds	r0, r0, #12	@ usartxbase, USARTx,
 1069              	.LVL82:
 1070 0334 04E0     		b	.L78	@
 1071              	.LVL83:
 1072              	.L77:
1233:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
1234:.\stm32f4periph\src/stm32f4xx_usart.c ****   else if (usartreg == 0x02) /* The IT is in CR2 register */
 1073              		.loc 1 1234 0
 1074 0336 022B     		cmp	r3, #2	@ usartreg,
 1075 0338 01D1     		bne	.L79	@,
1235:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
1236:.\stm32f4periph\src/stm32f4xx_usart.c ****     usartxbase += 0x10;
 1076              		.loc 1 1236 0
 1077 033a 1030     		adds	r0, r0, #16	@ usartxbase, USARTx,
 1078              	.LVL84:
 1079 033c 00E0     		b	.L78	@
 1080              	.LVL85:
 1081              	.L79:
1237:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
1238:.\stm32f4periph\src/stm32f4xx_usart.c ****   else /* The IT is in CR3 register */
1239:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
1240:.\stm32f4periph\src/stm32f4xx_usart.c ****     usartxbase += 0x14; 
 1082              		.loc 1 1240 0
 1083 033e 1430     		adds	r0, r0, #20	@ usartxbase, USARTx,
 1084              	.LVL86:
 1085              	.L78:
1241:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
1242:.\stm32f4periph\src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
1243:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
1244:.\stm32f4periph\src/stm32f4xx_usart.c ****     *(__IO uint32_t*)usartxbase  |= itmask;
 1086              		.loc 1 1244 0
 1087 0340 0368     		ldr	r3, [r0, #0]	@ D.7489,* usartxbase
 1088              	.LVL87:
1242:.\stm32f4periph\src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 1089              		.loc 1 1242 0
 1090 0342 0AB1     		cbz	r2, .L80	@ NewState,
 1091              		.loc 1 1244 0
 1092 0344 1943     		orrs	r1, r1, r3	@, D.7490, itmask, D.7489
 1093              	.LVL88:
 1094 0346 01E0     		b	.L82	@
 1095              	.LVL89:
 1096              	.L80:
1245:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
1246:.\stm32f4periph\src/stm32f4xx_usart.c ****   else
1247:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
1248:.\stm32f4periph\src/stm32f4xx_usart.c ****     *(__IO uint32_t*)usartxbase &= ~itmask;
 1097              		.loc 1 1248 0
 1098 0348 23EA0101 		bic	r1, r3, r1	@ D.7494, D.7492, itmask
 1099              	.LVL90:
 1100              	.L82:
 1101 034c 0160     		str	r1, [r0, #0]	@ D.7494,* usartxbase
 1102 034e 10BD     		pop	{r4, pc}	@
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 43


 1103              		.cfi_endproc
 1104              	.LFE134:
 1105              		.size	USART_ITConfig, .-USART_ITConfig
 1106              		.align	1
 1107              		.global	USART_GetFlagStatus
 1108              		.thumb
 1109              		.thumb_func
 1110              		.type	USART_GetFlagStatus, %function
 1111              	USART_GetFlagStatus:
 1112              	.LFB135:
1249:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
1250:.\stm32f4periph\src/stm32f4xx_usart.c **** }
1251:.\stm32f4periph\src/stm32f4xx_usart.c **** 
1252:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
1253:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @brief  Checks whether the specified USART flag is set or not.
1254:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
1255:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         UART peripheral.
1256:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USART_FLAG: specifies the flag to check.
1257:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          This parameter can be one of the following values:
1258:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_CTS:  CTS Change flag (not available for UART4 and UART5)
1259:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_LBD:  LIN Break detection flag
1260:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_TXE:  Transmit data register empty flag
1261:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_TC:   Transmission Complete flag
1262:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_RXNE: Receive data register not empty flag
1263:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_IDLE: Idle Line detection flag
1264:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_ORE:  OverRun Error flag
1265:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_NE:   Noise Error flag
1266:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_FE:   Framing Error flag
1267:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_PE:   Parity Error flag
1268:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @retval The new state of USART_FLAG (SET or RESET).
1269:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
1270:.\stm32f4periph\src/stm32f4xx_usart.c **** FlagStatus USART_GetFlagStatus(USART_TypeDef* USARTx, uint16_t USART_FLAG)
1271:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 1113              		.loc 1 1271 0
 1114              		.cfi_startproc
 1115              		@ args = 0, pretend = 0, frame = 0
 1116              		@ frame_needed = 0, uses_anonymous_args = 0
 1117              		@ link register save eliminated.
 1118              	.LVL91:
1272:.\stm32f4periph\src/stm32f4xx_usart.c ****   FlagStatus bitstatus = RESET;
1273:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Check the parameters */
1274:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1275:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_FLAG(USART_FLAG));
1276:.\stm32f4periph\src/stm32f4xx_usart.c **** 
1277:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* The CTS flag is not available for UART4 and UART5 */
1278:.\stm32f4periph\src/stm32f4xx_usart.c ****   if (USART_FLAG == USART_FLAG_CTS)
1279:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
1280:.\stm32f4periph\src/stm32f4xx_usart.c ****     assert_param(IS_USART_1236_PERIPH(USARTx));
1281:.\stm32f4periph\src/stm32f4xx_usart.c ****   } 
1282:.\stm32f4periph\src/stm32f4xx_usart.c ****     
1283:.\stm32f4periph\src/stm32f4xx_usart.c ****   if ((USARTx->SR & USART_FLAG) != (uint16_t)RESET)
 1119              		.loc 1 1283 0
 1120 0350 0388     		ldrh	r3, [r0, #0]	@, USARTx_3(D)->SR
 1121              	.LVL92:
 1122 0352 1942     		tst	r1, r3	@ USART_FLAG, USARTx_3(D)->SR
1284:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
1285:.\stm32f4periph\src/stm32f4xx_usart.c ****     bitstatus = SET;
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 44


1286:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
1287:.\stm32f4periph\src/stm32f4xx_usart.c ****   else
1288:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
1289:.\stm32f4periph\src/stm32f4xx_usart.c ****     bitstatus = RESET;
1290:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
1291:.\stm32f4periph\src/stm32f4xx_usart.c ****   return bitstatus;
1292:.\stm32f4periph\src/stm32f4xx_usart.c **** }
 1123              		.loc 1 1292 0
 1124 0354 0CBF     		ite	eq	@
 1125 0356 0020     		moveq	r0, #0	@,
 1126 0358 0120     		movne	r0, #1	@,
 1127              	.LVL93:
 1128 035a 7047     		bx	lr	@
 1129              		.cfi_endproc
 1130              	.LFE135:
 1131              		.size	USART_GetFlagStatus, .-USART_GetFlagStatus
 1132              		.align	1
 1133              		.global	USART_ClearFlag
 1134              		.thumb
 1135              		.thumb_func
 1136              		.type	USART_ClearFlag, %function
 1137              	USART_ClearFlag:
 1138              	.LFB136:
1293:.\stm32f4periph\src/stm32f4xx_usart.c **** 
1294:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
1295:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @brief  Clears the USARTx's pending flags.
1296:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
1297:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         UART peripheral.
1298:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USART_FLAG: specifies the flag to clear.
1299:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          This parameter can be any combination of the following values:
1300:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_CTS:  CTS Change flag (not available for UART4 and UART5).
1301:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_LBD:  LIN Break detection flag.
1302:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_TC:   Transmission Complete flag.
1303:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_RXNE: Receive data register not empty flag.
1304:.\stm32f4periph\src/stm32f4xx_usart.c ****   *   
1305:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @note   PE (Parity error), FE (Framing error), NE (Noise error), ORE (OverRun 
1306:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          error) and IDLE (Idle line detected) flags are cleared by software 
1307:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          sequence: a read operation to USART_SR register (USART_GetFlagStatus()) 
1308:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          followed by a read operation to USART_DR register (USART_ReceiveData()).
1309:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @note   RXNE flag can be also cleared by a read to the USART_DR register 
1310:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          (USART_ReceiveData()).
1311:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @note   TC flag can be also cleared by software sequence: a read operation to 
1312:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          USART_SR register (USART_GetFlagStatus()) followed by a write operation
1313:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          to USART_DR register (USART_SendData()).
1314:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @note   TXE flag is cleared only by a write to the USART_DR register 
1315:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          (USART_SendData()).
1316:.\stm32f4periph\src/stm32f4xx_usart.c ****   *   
1317:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @retval None
1318:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
1319:.\stm32f4periph\src/stm32f4xx_usart.c **** void USART_ClearFlag(USART_TypeDef* USARTx, uint16_t USART_FLAG)
1320:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 1139              		.loc 1 1320 0
 1140              		.cfi_startproc
 1141              		@ args = 0, pretend = 0, frame = 0
 1142              		@ frame_needed = 0, uses_anonymous_args = 0
 1143              		@ link register save eliminated.
 1144              	.LVL94:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 45


1321:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Check the parameters */
1322:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1323:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_CLEAR_FLAG(USART_FLAG));
1324:.\stm32f4periph\src/stm32f4xx_usart.c **** 
1325:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* The CTS flag is not available for UART4 and UART5 */
1326:.\stm32f4periph\src/stm32f4xx_usart.c ****   if ((USART_FLAG & USART_FLAG_CTS) == USART_FLAG_CTS)
1327:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
1328:.\stm32f4periph\src/stm32f4xx_usart.c ****     assert_param(IS_USART_1236_PERIPH(USARTx));
1329:.\stm32f4periph\src/stm32f4xx_usart.c ****   } 
1330:.\stm32f4periph\src/stm32f4xx_usart.c ****        
1331:.\stm32f4periph\src/stm32f4xx_usart.c ****   USARTx->SR = (uint16_t)~USART_FLAG;
 1145              		.loc 1 1331 0
 1146 035c C943     		mvns	r1, r1	@ tmp137, USART_FLAG
 1147              	.LVL95:
 1148 035e 0180     		strh	r1, [r0, #0]	@ movhi	@ D.7466, USARTx_5(D)->SR
 1149 0360 7047     		bx	lr	@
 1150              		.cfi_endproc
 1151              	.LFE136:
 1152              		.size	USART_ClearFlag, .-USART_ClearFlag
 1153              		.align	1
 1154              		.global	USART_GetITStatus
 1155              		.thumb
 1156              		.thumb_func
 1157              		.type	USART_GetITStatus, %function
 1158              	USART_GetITStatus:
 1159              	.LFB137:
1332:.\stm32f4periph\src/stm32f4xx_usart.c **** }
1333:.\stm32f4periph\src/stm32f4xx_usart.c **** 
1334:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
1335:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @brief  Checks whether the specified USART interrupt has occurred or not.
1336:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
1337:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         UART peripheral.
1338:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USART_IT: specifies the USART interrupt source to check.
1339:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          This parameter can be one of the following values:
1340:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_IT_CTS:  CTS change interrupt (not available for UART4 and UART5)
1341:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_IT_LBD:  LIN Break detection interrupt
1342:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_IT_TXE:  Transmit Data Register empty interrupt
1343:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_IT_TC:   Transmission complete interrupt
1344:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_IT_RXNE: Receive Data register not empty interrupt
1345:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_IT_IDLE: Idle line detection interrupt
1346:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_IT_ORE_RX : OverRun Error interrupt if the RXNEIE bit is set
1347:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_IT_ORE_ER : OverRun Error interrupt if the EIE bit is set  
1348:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_IT_NE:   Noise Error interrupt
1349:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_IT_FE:   Framing Error interrupt
1350:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_IT_PE:   Parity Error interrupt
1351:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @retval The new state of USART_IT (SET or RESET).
1352:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
1353:.\stm32f4periph\src/stm32f4xx_usart.c **** ITStatus USART_GetITStatus(USART_TypeDef* USARTx, uint16_t USART_IT)
1354:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 1160              		.loc 1 1354 0
 1161              		.cfi_startproc
 1162              		@ args = 0, pretend = 0, frame = 0
 1163              		@ frame_needed = 0, uses_anonymous_args = 0
 1164              	.LVL96:
 1165 0362 10B5     		push	{r4, lr}	@
 1166              	.LCFI5:
 1167              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 46


 1168              		.cfi_offset 4, -8
 1169              		.cfi_offset 14, -4
1355:.\stm32f4periph\src/stm32f4xx_usart.c ****   uint32_t bitpos = 0x00, itmask = 0x00, usartreg = 0x00;
1356:.\stm32f4periph\src/stm32f4xx_usart.c ****   ITStatus bitstatus = RESET;
1357:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Check the parameters */
1358:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1359:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_GET_IT(USART_IT)); 
1360:.\stm32f4periph\src/stm32f4xx_usart.c **** 
1361:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* The CTS interrupt is not available for UART4 and UART5 */ 
1362:.\stm32f4periph\src/stm32f4xx_usart.c ****   if (USART_IT == USART_IT_CTS)
1363:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
1364:.\stm32f4periph\src/stm32f4xx_usart.c ****     assert_param(IS_USART_1236_PERIPH(USARTx));
1365:.\stm32f4periph\src/stm32f4xx_usart.c ****   } 
1366:.\stm32f4periph\src/stm32f4xx_usart.c ****     
1367:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Get the USART register index */
1368:.\stm32f4periph\src/stm32f4xx_usart.c ****   usartreg = (((uint8_t)USART_IT) >> 0x05);
 1170              		.loc 1 1368 0
 1171 0364 C1F34214 		ubfx	r4, r1, #5, #3	@ usartreg, USART_IT,,
 1172              	.LVL97:
1369:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Get the interrupt position */
1370:.\stm32f4periph\src/stm32f4xx_usart.c ****   itmask = USART_IT & IT_MASK;
1371:.\stm32f4periph\src/stm32f4xx_usart.c ****   itmask = (uint32_t)0x01 << itmask;
 1173              		.loc 1 1371 0
 1174 0368 0122     		movs	r2, #1	@ tmp162,
 1175 036a 01F01F03 		and	r3, r1, #31	@ tmp161, USART_IT,
1372:.\stm32f4periph\src/stm32f4xx_usart.c ****   
1373:.\stm32f4periph\src/stm32f4xx_usart.c ****   if (usartreg == 0x01) /* The IT  is in CR1 register */
 1176              		.loc 1 1373 0
 1177 036e 012C     		cmp	r4, #1	@ usartreg,
1371:.\stm32f4periph\src/stm32f4xx_usart.c ****   itmask = (uint32_t)0x01 << itmask;
 1178              		.loc 1 1371 0
 1179 0370 02FA03F2 		lsl	r2, r2, r3	@ itmask, tmp162, tmp161
 1180              	.LVL98:
 1181              		.loc 1 1373 0
 1182 0374 01D1     		bne	.L86	@,
1374:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
1375:.\stm32f4periph\src/stm32f4xx_usart.c ****     itmask &= USARTx->CR1;
 1183              		.loc 1 1375 0
 1184 0376 8389     		ldrh	r3, [r0, #12]	@, USARTx_15(D)->CR1
 1185 0378 03E0     		b	.L91	@
 1186              	.L86:
1376:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
1377:.\stm32f4periph\src/stm32f4xx_usart.c ****   else if (usartreg == 0x02) /* The IT  is in CR2 register */
 1187              		.loc 1 1377 0
 1188 037a 022C     		cmp	r4, #2	@ usartreg,
1378:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
1379:.\stm32f4periph\src/stm32f4xx_usart.c ****     itmask &= USARTx->CR2;
 1189              		.loc 1 1379 0
 1190 037c 0CBF     		ite	eq
 1191 037e 038A     		ldrheq	r3, [r0, #16]	@, USARTx_15(D)->CR2
1380:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
1381:.\stm32f4periph\src/stm32f4xx_usart.c ****   else /* The IT  is in CR3 register */
1382:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
1383:.\stm32f4periph\src/stm32f4xx_usart.c ****     itmask &= USARTx->CR3;
 1192              		.loc 1 1383 0
 1193 0380 838A     		ldrhne	r3, [r0, #20]	@, USARTx_15(D)->CR3
 1194              	.L91:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 47


 1195 0382 9BB2     		uxth	r3, r3	@ D.7450, USARTx_15(D)->CR3
 1196 0384 1340     		ands	r3, r3, r2	@, itmask, D.7450, itmask
 1197              	.LVL99:
1384:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
1385:.\stm32f4periph\src/stm32f4xx_usart.c ****   
1386:.\stm32f4periph\src/stm32f4xx_usart.c ****   bitpos = USART_IT >> 0x08;
1387:.\stm32f4periph\src/stm32f4xx_usart.c ****   bitpos = (uint32_t)0x01 << bitpos;
1388:.\stm32f4periph\src/stm32f4xx_usart.c ****   bitpos &= USARTx->SR;
 1198              		.loc 1 1388 0
 1199 0386 0288     		ldrh	r2, [r0, #0]	@, USARTx_15(D)->SR
 1200 0388 92B2     		uxth	r2, r2	@ D.7454, USARTx_15(D)->SR
 1201              	.LVL100:
1389:.\stm32f4periph\src/stm32f4xx_usart.c ****   if ((itmask != (uint16_t)RESET)&&(bitpos != (uint16_t)RESET))
 1202              		.loc 1 1389 0
 1203 038a 43B1     		cbz	r3, .L90	@ itmask,
1387:.\stm32f4periph\src/stm32f4xx_usart.c ****   bitpos = (uint32_t)0x01 << bitpos;
 1204              		.loc 1 1387 0 discriminator 1
 1205 038c 0123     		movs	r3, #1	@ tmp172,
 1206              	.LVL101:
 1207 038e 090A     		lsrs	r1, r1, #8	@ tmp171, USART_IT,
 1208              	.LVL102:
 1209 0390 03FA01F1 		lsl	r1, r3, r1	@ bitpos, tmp172, tmp171
 1210              		.loc 1 1389 0 discriminator 1
 1211 0394 1142     		tst	r1, r2	@ bitpos, D.7454
1390:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
1391:.\stm32f4periph\src/stm32f4xx_usart.c ****     bitstatus = SET;
 1212              		.loc 1 1391 0 discriminator 1
 1213 0396 0CBF     		ite	eq	@
 1214 0398 0020     		moveq	r0, #0	@, bitstatus
 1215 039a 0120     		movne	r0, #1	@, bitstatus
 1216              	.LVL103:
 1217 039c 10BD     		pop	{r4, pc}	@
 1218              	.LVL104:
 1219              	.L90:
1392:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
1393:.\stm32f4periph\src/stm32f4xx_usart.c ****   else
1394:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
1395:.\stm32f4periph\src/stm32f4xx_usart.c ****     bitstatus = RESET;
 1220              		.loc 1 1395 0
 1221 039e 1846     		mov	r0, r3	@ bitstatus, itmask
 1222              	.LVL105:
1396:.\stm32f4periph\src/stm32f4xx_usart.c ****   }
1397:.\stm32f4periph\src/stm32f4xx_usart.c ****   
1398:.\stm32f4periph\src/stm32f4xx_usart.c ****   return bitstatus;  
1399:.\stm32f4periph\src/stm32f4xx_usart.c **** }
 1223              		.loc 1 1399 0
 1224 03a0 10BD     		pop	{r4, pc}	@
 1225              		.cfi_endproc
 1226              	.LFE137:
 1227              		.size	USART_GetITStatus, .-USART_GetITStatus
 1228              		.align	1
 1229              		.global	USART_ClearITPendingBit
 1230              		.thumb
 1231              		.thumb_func
 1232              		.type	USART_ClearITPendingBit, %function
 1233              	USART_ClearITPendingBit:
 1234              	.LFB138:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 48


1400:.\stm32f4periph\src/stm32f4xx_usart.c **** 
1401:.\stm32f4periph\src/stm32f4xx_usart.c **** /**
1402:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @brief  Clears the USARTx's interrupt pending bits.
1403:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
1404:.\stm32f4periph\src/stm32f4xx_usart.c ****   *         UART peripheral.
1405:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @param  USART_IT: specifies the interrupt pending bit to clear.
1406:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          This parameter can be one of the following values:
1407:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_IT_CTS:  CTS change interrupt (not available for UART4 and UART5)
1408:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_IT_LBD:  LIN Break detection interrupt
1409:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_IT_TC:   Transmission complete interrupt. 
1410:.\stm32f4periph\src/stm32f4xx_usart.c ****   *            @arg USART_IT_RXNE: Receive Data register not empty interrupt.
1411:.\stm32f4periph\src/stm32f4xx_usart.c ****   *
1412:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @note   PE (Parity error), FE (Framing error), NE (Noise error), ORE (OverRun 
1413:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          error) and IDLE (Idle line detected) pending bits are cleared by 
1414:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          software sequence: a read operation to USART_SR register 
1415:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          (USART_GetITStatus()) followed by a read operation to USART_DR register 
1416:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          (USART_ReceiveData()).
1417:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @note   RXNE pending bit can be also cleared by a read to the USART_DR register 
1418:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          (USART_ReceiveData()).
1419:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @note   TC pending bit can be also cleared by software sequence: a read 
1420:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          operation to USART_SR register (USART_GetITStatus()) followed by a write 
1421:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          operation to USART_DR register (USART_SendData()).
1422:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @note   TXE pending bit is cleared only by a write to the USART_DR register 
1423:.\stm32f4periph\src/stm32f4xx_usart.c ****   *          (USART_SendData()).
1424:.\stm32f4periph\src/stm32f4xx_usart.c ****   *  
1425:.\stm32f4periph\src/stm32f4xx_usart.c ****   * @retval None
1426:.\stm32f4periph\src/stm32f4xx_usart.c ****   */
1427:.\stm32f4periph\src/stm32f4xx_usart.c **** void USART_ClearITPendingBit(USART_TypeDef* USARTx, uint16_t USART_IT)
1428:.\stm32f4periph\src/stm32f4xx_usart.c **** {
 1235              		.loc 1 1428 0
 1236              		.cfi_startproc
 1237              		@ args = 0, pretend = 0, frame = 0
 1238              		@ frame_needed = 0, uses_anonymous_args = 0
 1239              		@ link register save eliminated.
 1240              	.LVL106:
1429:.\stm32f4periph\src/stm32f4xx_usart.c ****   uint16_t bitpos = 0x00, itmask = 0x00;
1430:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* Check the parameters */
1431:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1432:.\stm32f4periph\src/stm32f4xx_usart.c ****   assert_param(IS_USART_CLEAR_IT(USART_IT)); 
1433:.\stm32f4periph\src/stm32f4xx_usart.c **** 
1434:.\stm32f4periph\src/stm32f4xx_usart.c ****   /* The CTS interrupt is not available for UART4 and UART5 */
1435:.\stm32f4periph\src/stm32f4xx_usart.c ****   if (USART_IT == USART_IT_CTS)
1436:.\stm32f4periph\src/stm32f4xx_usart.c ****   {
1437:.\stm32f4periph\src/stm32f4xx_usart.c ****     assert_param(IS_USART_1236_PERIPH(USARTx));
1438:.\stm32f4periph\src/stm32f4xx_usart.c ****   } 
1439:.\stm32f4periph\src/stm32f4xx_usart.c ****     
1440:.\stm32f4periph\src/stm32f4xx_usart.c ****   bitpos = USART_IT >> 0x08;
1441:.\stm32f4periph\src/stm32f4xx_usart.c ****   itmask = ((uint16_t)0x01 << (uint16_t)bitpos);
 1241              		.loc 1 1441 0
 1242 03a2 090A     		lsrs	r1, r1, #8	@ tmp142, USART_IT,
 1243              	.LVL107:
 1244 03a4 0123     		movs	r3, #1	@ tmp144,
 1245 03a6 03FA01F3 		lsl	r3, r3, r1	@ tmp143, tmp144, tmp142
1442:.\stm32f4periph\src/stm32f4xx_usart.c ****   USARTx->SR = (uint16_t)~itmask;
 1246              		.loc 1 1442 0
 1247 03aa DB43     		mvns	r3, r3	@ tmp146, tmp143
 1248 03ac 0380     		strh	r3, [r0, #0]	@ movhi	@ D.7433, USARTx_9(D)->SR
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 49


 1249 03ae 7047     		bx	lr	@
 1250              		.cfi_endproc
 1251              	.LFE138:
 1252              		.size	USART_ClearITPendingBit, .-USART_ClearITPendingBit
 1253              	.Letext0:
 1254              		.file 2 "k:\\electronics\\gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/inclu
 1255              		.file 3 ".\\inc/stm32f4xx.h"
 1256              		.file 4 ".\\stm32f4periph\\inc/stm32f4xx_rcc.h"
 1257              		.file 5 ".\\stm32f4periph\\inc/stm32f4xx_usart.h"
 1258              		.file 6 ".\\inc/core_cm4.h"
 1259              		.section	.debug_info,"",%progbits
 1260              	.Ldebug_info0:
 1261 0000 600B0000 		.4byte	0xb60
 1262 0004 0200     		.2byte	0x2
 1263 0006 00000000 		.4byte	.Ldebug_abbrev0
 1264 000a 04       		.byte	0x4
 1265 000b 01       		.uleb128 0x1
 1266 000c 21030000 		.4byte	.LASF103
 1267 0010 01       		.byte	0x1
 1268 0011 2A050000 		.4byte	.LASF104
 1269 0015 EE050000 		.4byte	.LASF105
 1270 0019 00000000 		.4byte	.Ltext0
 1271 001d B0030000 		.4byte	.Letext0
 1272 0021 00000000 		.4byte	.Ldebug_line0
 1273 0025 02       		.uleb128 0x2
 1274 0026 01       		.byte	0x1
 1275 0027 06       		.byte	0x6
 1276 0028 4C010000 		.4byte	.LASF0
 1277 002c 03       		.uleb128 0x3
 1278 002d FF000000 		.4byte	.LASF3
 1279 0031 02       		.byte	0x2
 1280 0032 2A       		.byte	0x2a
 1281 0033 37000000 		.4byte	0x37
 1282 0037 02       		.uleb128 0x2
 1283 0038 01       		.byte	0x1
 1284 0039 08       		.byte	0x8
 1285 003a 9E020000 		.4byte	.LASF1
 1286 003e 02       		.uleb128 0x2
 1287 003f 02       		.byte	0x2
 1288 0040 05       		.byte	0x5
 1289 0041 EC010000 		.4byte	.LASF2
 1290 0045 03       		.uleb128 0x3
 1291 0046 18030000 		.4byte	.LASF4
 1292 004a 02       		.byte	0x2
 1293 004b 36       		.byte	0x36
 1294 004c 50000000 		.4byte	0x50
 1295 0050 02       		.uleb128 0x2
 1296 0051 02       		.byte	0x2
 1297 0052 07       		.byte	0x7
 1298 0053 19040000 		.4byte	.LASF5
 1299 0057 03       		.uleb128 0x3
 1300 0058 F3030000 		.4byte	.LASF6
 1301 005c 02       		.byte	0x2
 1302 005d 4F       		.byte	0x4f
 1303 005e 62000000 		.4byte	0x62
 1304 0062 02       		.uleb128 0x2
 1305 0063 04       		.byte	0x4
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 50


 1306 0064 05       		.byte	0x5
 1307 0065 BB010000 		.4byte	.LASF7
 1308 0069 03       		.uleb128 0x3
 1309 006a EF020000 		.4byte	.LASF8
 1310 006e 02       		.byte	0x2
 1311 006f 50       		.byte	0x50
 1312 0070 74000000 		.4byte	0x74
 1313 0074 02       		.uleb128 0x2
 1314 0075 04       		.byte	0x4
 1315 0076 07       		.byte	0x7
 1316 0077 2D030000 		.4byte	.LASF9
 1317 007b 02       		.uleb128 0x2
 1318 007c 08       		.byte	0x8
 1319 007d 05       		.byte	0x5
 1320 007e 8D010000 		.4byte	.LASF10
 1321 0082 02       		.uleb128 0x2
 1322 0083 08       		.byte	0x8
 1323 0084 07       		.byte	0x7
 1324 0085 D8020000 		.4byte	.LASF11
 1325 0089 04       		.uleb128 0x4
 1326 008a 04       		.byte	0x4
 1327 008b 05       		.byte	0x5
 1328 008c 696E7400 		.ascii	"int\000"
 1329 0090 02       		.uleb128 0x2
 1330 0091 04       		.byte	0x4
 1331 0092 07       		.byte	0x7
 1332 0093 0B030000 		.4byte	.LASF12
 1333 0097 02       		.uleb128 0x2
 1334 0098 04       		.byte	0x4
 1335 0099 07       		.byte	0x7
 1336 009a 54000000 		.4byte	.LASF13
 1337 009e 05       		.uleb128 0x5
 1338 009f 45000000 		.4byte	0x45
 1339 00a3 05       		.uleb128 0x5
 1340 00a4 57000000 		.4byte	0x57
 1341 00a8 06       		.uleb128 0x6
 1342 00a9 01       		.byte	0x1
 1343 00aa 03       		.byte	0x3
 1344 00ab 1E01     		.2byte	0x11e
 1345 00ad BE000000 		.4byte	0xbe
 1346 00b1 07       		.uleb128 0x7
 1347 00b2 5C040000 		.4byte	.LASF14
 1348 00b6 00       		.sleb128 0
 1349 00b7 08       		.uleb128 0x8
 1350 00b8 53455400 		.ascii	"SET\000"
 1351 00bc 01       		.sleb128 1
 1352 00bd 00       		.byte	0
 1353 00be 09       		.uleb128 0x9
 1354 00bf 9D000000 		.4byte	.LASF15
 1355 00c3 03       		.byte	0x3
 1356 00c4 1E01     		.2byte	0x11e
 1357 00c6 A8000000 		.4byte	0xa8
 1358 00ca 09       		.uleb128 0x9
 1359 00cb B2010000 		.4byte	.LASF16
 1360 00cf 03       		.byte	0x3
 1361 00d0 1E01     		.2byte	0x11e
 1362 00d2 A8000000 		.4byte	0xa8
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 51


 1363 00d6 06       		.uleb128 0x6
 1364 00d7 01       		.byte	0x1
 1365 00d8 03       		.byte	0x3
 1366 00d9 2001     		.2byte	0x120
 1367 00db EC000000 		.4byte	0xec
 1368 00df 07       		.uleb128 0x7
 1369 00e0 44010000 		.4byte	.LASF17
 1370 00e4 00       		.sleb128 0
 1371 00e5 07       		.uleb128 0x7
 1372 00e6 23060000 		.4byte	.LASF18
 1373 00ea 01       		.sleb128 1
 1374 00eb 00       		.byte	0
 1375 00ec 09       		.uleb128 0x9
 1376 00ed E4040000 		.4byte	.LASF19
 1377 00f1 03       		.byte	0x3
 1378 00f2 2001     		.2byte	0x120
 1379 00f4 D6000000 		.4byte	0xd6
 1380 00f8 0A       		.uleb128 0xa
 1381 00f9 1C       		.byte	0x1c
 1382 00fa 03       		.byte	0x3
 1383 00fb 9603     		.2byte	0x396
 1384 00fd D2010000 		.4byte	0x1d2
 1385 0101 0B       		.uleb128 0xb
 1386 0102 535200   		.ascii	"SR\000"
 1387 0105 03       		.byte	0x3
 1388 0106 9803     		.2byte	0x398
 1389 0108 9E000000 		.4byte	0x9e
 1390 010c 02       		.byte	0x2
 1391 010d 23       		.byte	0x23
 1392 010e 00       		.uleb128 0
 1393 010f 0C       		.uleb128 0xc
 1394 0110 7E040000 		.4byte	.LASF20
 1395 0114 03       		.byte	0x3
 1396 0115 9903     		.2byte	0x399
 1397 0117 45000000 		.4byte	0x45
 1398 011b 02       		.byte	0x2
 1399 011c 23       		.byte	0x23
 1400 011d 02       		.uleb128 0x2
 1401 011e 0B       		.uleb128 0xb
 1402 011f 445200   		.ascii	"DR\000"
 1403 0122 03       		.byte	0x3
 1404 0123 9A03     		.2byte	0x39a
 1405 0125 9E000000 		.4byte	0x9e
 1406 0129 02       		.byte	0x2
 1407 012a 23       		.byte	0x23
 1408 012b 04       		.uleb128 0x4
 1409 012c 0C       		.uleb128 0xc
 1410 012d 88040000 		.4byte	.LASF21
 1411 0131 03       		.byte	0x3
 1412 0132 9B03     		.2byte	0x39b
 1413 0134 45000000 		.4byte	0x45
 1414 0138 02       		.byte	0x2
 1415 0139 23       		.byte	0x23
 1416 013a 06       		.uleb128 0x6
 1417 013b 0B       		.uleb128 0xb
 1418 013c 42525200 		.ascii	"BRR\000"
 1419 0140 03       		.byte	0x3
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 52


 1420 0141 9C03     		.2byte	0x39c
 1421 0143 9E000000 		.4byte	0x9e
 1422 0147 02       		.byte	0x2
 1423 0148 23       		.byte	0x23
 1424 0149 08       		.uleb128 0x8
 1425 014a 0C       		.uleb128 0xc
 1426 014b 92040000 		.4byte	.LASF22
 1427 014f 03       		.byte	0x3
 1428 0150 9D03     		.2byte	0x39d
 1429 0152 45000000 		.4byte	0x45
 1430 0156 02       		.byte	0x2
 1431 0157 23       		.byte	0x23
 1432 0158 0A       		.uleb128 0xa
 1433 0159 0B       		.uleb128 0xb
 1434 015a 43523100 		.ascii	"CR1\000"
 1435 015e 03       		.byte	0x3
 1436 015f 9E03     		.2byte	0x39e
 1437 0161 9E000000 		.4byte	0x9e
 1438 0165 02       		.byte	0x2
 1439 0166 23       		.byte	0x23
 1440 0167 0C       		.uleb128 0xc
 1441 0168 0C       		.uleb128 0xc
 1442 0169 9C040000 		.4byte	.LASF23
 1443 016d 03       		.byte	0x3
 1444 016e 9F03     		.2byte	0x39f
 1445 0170 45000000 		.4byte	0x45
 1446 0174 02       		.byte	0x2
 1447 0175 23       		.byte	0x23
 1448 0176 0E       		.uleb128 0xe
 1449 0177 0B       		.uleb128 0xb
 1450 0178 43523200 		.ascii	"CR2\000"
 1451 017c 03       		.byte	0x3
 1452 017d A003     		.2byte	0x3a0
 1453 017f 9E000000 		.4byte	0x9e
 1454 0183 02       		.byte	0x2
 1455 0184 23       		.byte	0x23
 1456 0185 10       		.uleb128 0x10
 1457 0186 0C       		.uleb128 0xc
 1458 0187 A6040000 		.4byte	.LASF24
 1459 018b 03       		.byte	0x3
 1460 018c A103     		.2byte	0x3a1
 1461 018e 45000000 		.4byte	0x45
 1462 0192 02       		.byte	0x2
 1463 0193 23       		.byte	0x23
 1464 0194 12       		.uleb128 0x12
 1465 0195 0B       		.uleb128 0xb
 1466 0196 43523300 		.ascii	"CR3\000"
 1467 019a 03       		.byte	0x3
 1468 019b A203     		.2byte	0x3a2
 1469 019d 9E000000 		.4byte	0x9e
 1470 01a1 02       		.byte	0x2
 1471 01a2 23       		.byte	0x23
 1472 01a3 14       		.uleb128 0x14
 1473 01a4 0C       		.uleb128 0xc
 1474 01a5 B0040000 		.4byte	.LASF25
 1475 01a9 03       		.byte	0x3
 1476 01aa A303     		.2byte	0x3a3
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 53


 1477 01ac 45000000 		.4byte	0x45
 1478 01b0 02       		.byte	0x2
 1479 01b1 23       		.byte	0x23
 1480 01b2 16       		.uleb128 0x16
 1481 01b3 0C       		.uleb128 0xc
 1482 01b4 1A000000 		.4byte	.LASF26
 1483 01b8 03       		.byte	0x3
 1484 01b9 A403     		.2byte	0x3a4
 1485 01bb 9E000000 		.4byte	0x9e
 1486 01bf 02       		.byte	0x2
 1487 01c0 23       		.byte	0x23
 1488 01c1 18       		.uleb128 0x18
 1489 01c2 0C       		.uleb128 0xc
 1490 01c3 BA040000 		.4byte	.LASF27
 1491 01c7 03       		.byte	0x3
 1492 01c8 A503     		.2byte	0x3a5
 1493 01ca 45000000 		.4byte	0x45
 1494 01ce 02       		.byte	0x2
 1495 01cf 23       		.byte	0x23
 1496 01d0 1A       		.uleb128 0x1a
 1497 01d1 00       		.byte	0
 1498 01d2 09       		.uleb128 0x9
 1499 01d3 A8000000 		.4byte	.LASF28
 1500 01d7 03       		.byte	0x3
 1501 01d8 A603     		.2byte	0x3a6
 1502 01da F8000000 		.4byte	0xf8
 1503 01de 0D       		.uleb128 0xd
 1504 01df 10       		.byte	0x10
 1505 01e0 04       		.byte	0x4
 1506 01e1 30       		.byte	0x30
 1507 01e2 1F020000 		.4byte	0x21f
 1508 01e6 0E       		.uleb128 0xe
 1509 01e7 25000000 		.4byte	.LASF29
 1510 01eb 04       		.byte	0x4
 1511 01ec 32       		.byte	0x32
 1512 01ed 69000000 		.4byte	0x69
 1513 01f1 02       		.byte	0x2
 1514 01f2 23       		.byte	0x23
 1515 01f3 00       		.uleb128 0
 1516 01f4 0E       		.uleb128 0xe
 1517 01f5 5D000000 		.4byte	.LASF30
 1518 01f9 04       		.byte	0x4
 1519 01fa 33       		.byte	0x33
 1520 01fb 69000000 		.4byte	0x69
 1521 01ff 02       		.byte	0x2
 1522 0200 23       		.byte	0x23
 1523 0201 04       		.uleb128 0x4
 1524 0202 0E       		.uleb128 0xe
 1525 0203 06050000 		.4byte	.LASF31
 1526 0207 04       		.byte	0x4
 1527 0208 34       		.byte	0x34
 1528 0209 69000000 		.4byte	0x69
 1529 020d 02       		.byte	0x2
 1530 020e 23       		.byte	0x23
 1531 020f 08       		.uleb128 0x8
 1532 0210 0E       		.uleb128 0xe
 1533 0211 62040000 		.4byte	.LASF32
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 54


 1534 0215 04       		.byte	0x4
 1535 0216 35       		.byte	0x35
 1536 0217 69000000 		.4byte	0x69
 1537 021b 02       		.byte	0x2
 1538 021c 23       		.byte	0x23
 1539 021d 0C       		.uleb128 0xc
 1540 021e 00       		.byte	0
 1541 021f 03       		.uleb128 0x3
 1542 0220 87030000 		.4byte	.LASF33
 1543 0224 04       		.byte	0x4
 1544 0225 36       		.byte	0x36
 1545 0226 DE010000 		.4byte	0x1de
 1546 022a 0D       		.uleb128 0xd
 1547 022b 10       		.byte	0x10
 1548 022c 05       		.byte	0x5
 1549 022d 36       		.byte	0x36
 1550 022e 87020000 		.4byte	0x287
 1551 0232 0E       		.uleb128 0xe
 1552 0233 66010000 		.4byte	.LASF34
 1553 0237 05       		.byte	0x5
 1554 0238 38       		.byte	0x38
 1555 0239 69000000 		.4byte	0x69
 1556 023d 02       		.byte	0x2
 1557 023e 23       		.byte	0x23
 1558 023f 00       		.uleb128 0
 1559 0240 0E       		.uleb128 0xe
 1560 0241 1D010000 		.4byte	.LASF35
 1561 0245 05       		.byte	0x5
 1562 0246 3E       		.byte	0x3e
 1563 0247 45000000 		.4byte	0x45
 1564 024b 02       		.byte	0x2
 1565 024c 23       		.byte	0x23
 1566 024d 04       		.uleb128 0x4
 1567 024e 0E       		.uleb128 0xe
 1568 024f B6000000 		.4byte	.LASF36
 1569 0253 05       		.byte	0x5
 1570 0254 41       		.byte	0x41
 1571 0255 45000000 		.4byte	0x45
 1572 0259 02       		.byte	0x2
 1573 025a 23       		.byte	0x23
 1574 025b 06       		.uleb128 0x6
 1575 025c 0E       		.uleb128 0xe
 1576 025d 7B020000 		.4byte	.LASF37
 1577 0261 05       		.byte	0x5
 1578 0262 44       		.byte	0x44
 1579 0263 45000000 		.4byte	0x45
 1580 0267 02       		.byte	0x2
 1581 0268 23       		.byte	0x23
 1582 0269 08       		.uleb128 0x8
 1583 026a 0E       		.uleb128 0xe
 1584 026b DA030000 		.4byte	.LASF38
 1585 026f 05       		.byte	0x5
 1586 0270 4B       		.byte	0x4b
 1587 0271 45000000 		.4byte	0x45
 1588 0275 02       		.byte	0x2
 1589 0276 23       		.byte	0x23
 1590 0277 0A       		.uleb128 0xa
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 55


 1591 0278 0E       		.uleb128 0xe
 1592 0279 AD030000 		.4byte	.LASF39
 1593 027d 05       		.byte	0x5
 1594 027e 4E       		.byte	0x4e
 1595 027f 45000000 		.4byte	0x45
 1596 0283 02       		.byte	0x2
 1597 0284 23       		.byte	0x23
 1598 0285 0C       		.uleb128 0xc
 1599 0286 00       		.byte	0
 1600 0287 03       		.uleb128 0x3
 1601 0288 4F030000 		.4byte	.LASF40
 1602 028c 05       		.byte	0x5
 1603 028d 51       		.byte	0x51
 1604 028e 2A020000 		.4byte	0x22a
 1605 0292 0D       		.uleb128 0xd
 1606 0293 08       		.byte	0x8
 1607 0294 05       		.byte	0x5
 1608 0295 57       		.byte	0x57
 1609 0296 D3020000 		.4byte	0x2d3
 1610 029a 0E       		.uleb128 0xe
 1611 029b 72040000 		.4byte	.LASF41
 1612 029f 05       		.byte	0x5
 1613 02a0 5A       		.byte	0x5a
 1614 02a1 45000000 		.4byte	0x45
 1615 02a5 02       		.byte	0x2
 1616 02a6 23       		.byte	0x23
 1617 02a7 00       		.uleb128 0
 1618 02a8 0E       		.uleb128 0xe
 1619 02a9 DC050000 		.4byte	.LASF42
 1620 02ad 05       		.byte	0x5
 1621 02ae 5D       		.byte	0x5d
 1622 02af 45000000 		.4byte	0x45
 1623 02b3 02       		.byte	0x2
 1624 02b4 23       		.byte	0x23
 1625 02b5 02       		.uleb128 0x2
 1626 02b6 0E       		.uleb128 0xe
 1627 02b7 0F000000 		.4byte	.LASF43
 1628 02bb 05       		.byte	0x5
 1629 02bc 60       		.byte	0x60
 1630 02bd 45000000 		.4byte	0x45
 1631 02c1 02       		.byte	0x2
 1632 02c2 23       		.byte	0x23
 1633 02c3 04       		.uleb128 0x4
 1634 02c4 0E       		.uleb128 0xe
 1635 02c5 58010000 		.4byte	.LASF44
 1636 02c9 05       		.byte	0x5
 1637 02ca 63       		.byte	0x63
 1638 02cb 45000000 		.4byte	0x45
 1639 02cf 02       		.byte	0x2
 1640 02d0 23       		.byte	0x23
 1641 02d1 06       		.uleb128 0x6
 1642 02d2 00       		.byte	0
 1643 02d3 03       		.uleb128 0x3
 1644 02d4 CF000000 		.4byte	.LASF45
 1645 02d8 05       		.byte	0x5
 1646 02d9 66       		.byte	0x66
 1647 02da 92020000 		.4byte	0x292
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 56


 1648 02de 0F       		.uleb128 0xf
 1649 02df 01       		.byte	0x1
 1650 02e0 3A020000 		.4byte	.LASF46
 1651 02e4 01       		.byte	0x1
 1652 02e5 BA       		.byte	0xba
 1653 02e6 01       		.byte	0x1
 1654 02e7 00000000 		.4byte	.LFB110
 1655 02eb A8000000 		.4byte	.LFE110
 1656 02ef 00000000 		.4byte	.LLST0
 1657 02f3 01       		.byte	0x1
 1658 02f4 C5030000 		.4byte	0x3c5
 1659 02f8 10       		.uleb128 0x10
 1660 02f9 A6030000 		.4byte	.LASF48
 1661 02fd 01       		.byte	0x1
 1662 02fe BA       		.byte	0xba
 1663 02ff C5030000 		.4byte	0x3c5
 1664 0303 20000000 		.4byte	.LLST1
 1665 0307 11       		.uleb128 0x11
 1666 0308 10000000 		.4byte	.LVL2
 1667 030c 140B0000 		.4byte	0xb14
 1668 0310 1F030000 		.4byte	0x31f
 1669 0314 12       		.uleb128 0x12
 1670 0315 01       		.byte	0x1
 1671 0316 51       		.byte	0x51
 1672 0317 01       		.byte	0x1
 1673 0318 31       		.byte	0x31
 1674 0319 12       		.uleb128 0x12
 1675 031a 01       		.byte	0x1
 1676 031b 50       		.byte	0x50
 1677 031c 01       		.byte	0x1
 1678 031d 40       		.byte	0x40
 1679 031e 00       		.byte	0
 1680 031f 11       		.uleb128 0x11
 1681 0320 24000000 		.4byte	.LVL5
 1682 0324 2E0B0000 		.4byte	0xb2e
 1683 0328 39030000 		.4byte	0x339
 1684 032c 12       		.uleb128 0x12
 1685 032d 01       		.byte	0x1
 1686 032e 51       		.byte	0x51
 1687 032f 01       		.byte	0x1
 1688 0330 31       		.byte	0x31
 1689 0331 12       		.uleb128 0x12
 1690 0332 01       		.byte	0x1
 1691 0333 50       		.byte	0x50
 1692 0334 03       		.byte	0x3
 1693 0335 40       		.byte	0x40
 1694 0336 3D       		.byte	0x3d
 1695 0337 24       		.byte	0x24
 1696 0338 00       		.byte	0
 1697 0339 11       		.uleb128 0x11
 1698 033a 3A000000 		.4byte	.LVL8
 1699 033e 2E0B0000 		.4byte	0xb2e
 1700 0342 53030000 		.4byte	0x353
 1701 0346 12       		.uleb128 0x12
 1702 0347 01       		.byte	0x1
 1703 0348 51       		.byte	0x51
 1704 0349 01       		.byte	0x1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 57


 1705 034a 31       		.byte	0x31
 1706 034b 12       		.uleb128 0x12
 1707 034c 01       		.byte	0x1
 1708 034d 50       		.byte	0x50
 1709 034e 03       		.byte	0x3
 1710 034f 40       		.byte	0x40
 1711 0350 3E       		.byte	0x3e
 1712 0351 24       		.byte	0x24
 1713 0352 00       		.byte	0
 1714 0353 13       		.uleb128 0x13
 1715 0354 48000000 		.4byte	.LVL9
 1716 0358 01       		.byte	0x1
 1717 0359 2E0B0000 		.4byte	0xb2e
 1718 035d 67030000 		.4byte	0x367
 1719 0361 12       		.uleb128 0x12
 1720 0362 01       		.byte	0x1
 1721 0363 51       		.byte	0x51
 1722 0364 01       		.byte	0x1
 1723 0365 30       		.byte	0x30
 1724 0366 00       		.byte	0
 1725 0367 11       		.uleb128 0x11
 1726 0368 58000000 		.4byte	.LVL11
 1727 036c 2E0B0000 		.4byte	0xb2e
 1728 0370 81030000 		.4byte	0x381
 1729 0374 12       		.uleb128 0x12
 1730 0375 01       		.byte	0x1
 1731 0376 51       		.byte	0x51
 1732 0377 01       		.byte	0x1
 1733 0378 31       		.byte	0x31
 1734 0379 12       		.uleb128 0x12
 1735 037a 01       		.byte	0x1
 1736 037b 50       		.byte	0x50
 1737 037c 03       		.byte	0x3
 1738 037d 40       		.byte	0x40
 1739 037e 3F       		.byte	0x3f
 1740 037f 24       		.byte	0x24
 1741 0380 00       		.byte	0
 1742 0381 11       		.uleb128 0x11
 1743 0382 6E000000 		.4byte	.LVL14
 1744 0386 2E0B0000 		.4byte	0xb2e
 1745 038a 9B030000 		.4byte	0x39b
 1746 038e 12       		.uleb128 0x12
 1747 038f 01       		.byte	0x1
 1748 0390 51       		.byte	0x51
 1749 0391 01       		.byte	0x1
 1750 0392 31       		.byte	0x31
 1751 0393 12       		.uleb128 0x12
 1752 0394 01       		.byte	0x1
 1753 0395 50       		.byte	0x50
 1754 0396 03       		.byte	0x3
 1755 0397 40       		.byte	0x40
 1756 0398 40       		.byte	0x40
 1757 0399 24       		.byte	0x24
 1758 039a 00       		.byte	0
 1759 039b 11       		.uleb128 0x11
 1760 039c 82000000 		.4byte	.LVL17
 1761 03a0 140B0000 		.4byte	0xb14
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 58


 1762 03a4 B4030000 		.4byte	0x3b4
 1763 03a8 12       		.uleb128 0x12
 1764 03a9 01       		.byte	0x1
 1765 03aa 51       		.byte	0x51
 1766 03ab 01       		.byte	0x1
 1767 03ac 31       		.byte	0x31
 1768 03ad 12       		.uleb128 0x12
 1769 03ae 01       		.byte	0x1
 1770 03af 50       		.byte	0x50
 1771 03b0 02       		.byte	0x2
 1772 03b1 08       		.byte	0x8
 1773 03b2 20       		.byte	0x20
 1774 03b3 00       		.byte	0
 1775 03b4 14       		.uleb128 0x14
 1776 03b5 8E000000 		.4byte	.LVL18
 1777 03b9 01       		.byte	0x1
 1778 03ba 140B0000 		.4byte	0xb14
 1779 03be 12       		.uleb128 0x12
 1780 03bf 01       		.byte	0x1
 1781 03c0 51       		.byte	0x51
 1782 03c1 01       		.byte	0x1
 1783 03c2 30       		.byte	0x30
 1784 03c3 00       		.byte	0
 1785 03c4 00       		.byte	0
 1786 03c5 15       		.uleb128 0x15
 1787 03c6 04       		.byte	0x4
 1788 03c7 D2010000 		.4byte	0x1d2
 1789 03cb 0F       		.uleb128 0xf
 1790 03cc 01       		.byte	0x1
 1791 03cd 49000000 		.4byte	.LASF47
 1792 03d1 01       		.byte	0x1
 1793 03d2 EA       		.byte	0xea
 1794 03d3 01       		.byte	0x1
 1795 03d4 A8000000 		.4byte	.LFB111
 1796 03d8 5C010000 		.4byte	.LFE111
 1797 03dc C9000000 		.4byte	.LLST2
 1798 03e0 01       		.byte	0x1
 1799 03e1 5E040000 		.4byte	0x45e
 1800 03e5 10       		.uleb128 0x10
 1801 03e6 A6030000 		.4byte	.LASF48
 1802 03ea 01       		.byte	0x1
 1803 03eb EA       		.byte	0xea
 1804 03ec C5030000 		.4byte	0x3c5
 1805 03f0 F5000000 		.4byte	.LLST3
 1806 03f4 10       		.uleb128 0x10
 1807 03f5 62050000 		.4byte	.LASF49
 1808 03f9 01       		.byte	0x1
 1809 03fa EA       		.byte	0xea
 1810 03fb 5E040000 		.4byte	0x45e
 1811 03ff 13010000 		.4byte	.LLST4
 1812 0403 16       		.uleb128 0x16
 1813 0404 74020000 		.4byte	.LASF50
 1814 0408 01       		.byte	0x1
 1815 0409 EC       		.byte	0xec
 1816 040a 69000000 		.4byte	0x69
 1817 040e 31010000 		.4byte	.LLST5
 1818 0412 16       		.uleb128 0x16
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 59


 1819 0413 84010000 		.4byte	.LASF51
 1820 0417 01       		.byte	0x1
 1821 0418 EC       		.byte	0xec
 1822 0419 69000000 		.4byte	0x69
 1823 041d B9010000 		.4byte	.LLST6
 1824 0421 16       		.uleb128 0x16
 1825 0422 00000000 		.4byte	.LASF52
 1826 0426 01       		.byte	0x1
 1827 0427 ED       		.byte	0xed
 1828 0428 69000000 		.4byte	0x69
 1829 042c EF010000 		.4byte	.LLST7
 1830 0430 16       		.uleb128 0x16
 1831 0431 D2040000 		.4byte	.LASF53
 1832 0435 01       		.byte	0x1
 1833 0436 EE       		.byte	0xee
 1834 0437 69000000 		.4byte	0x69
 1835 043b 0E020000 		.4byte	.LLST8
 1836 043f 17       		.uleb128 0x17
 1837 0440 73050000 		.4byte	.LASF54
 1838 0444 01       		.byte	0x1
 1839 0445 EF       		.byte	0xef
 1840 0446 1F020000 		.4byte	0x21f
 1841 044a 02       		.byte	0x2
 1842 044b 91       		.byte	0x91
 1843 044c 60       		.sleb128 -32
 1844 044d 18       		.uleb128 0x18
 1845 044e F0000000 		.4byte	.LVL30
 1846 0452 480B0000 		.4byte	0xb48
 1847 0456 12       		.uleb128 0x12
 1848 0457 01       		.byte	0x1
 1849 0458 50       		.byte	0x50
 1850 0459 02       		.byte	0x2
 1851 045a 7D       		.byte	0x7d
 1852 045b 00       		.sleb128 0
 1853 045c 00       		.byte	0
 1854 045d 00       		.byte	0
 1855 045e 15       		.uleb128 0x15
 1856 045f 04       		.byte	0x4
 1857 0460 87020000 		.4byte	0x287
 1858 0464 19       		.uleb128 0x19
 1859 0465 01       		.byte	0x1
 1860 0466 BB050000 		.4byte	.LASF55
 1861 046a 01       		.byte	0x1
 1862 046b 5B01     		.2byte	0x15b
 1863 046d 01       		.byte	0x1
 1864 046e 5C010000 		.4byte	.LFB112
 1865 0472 72010000 		.4byte	.LFE112
 1866 0476 02       		.byte	0x2
 1867 0477 7D       		.byte	0x7d
 1868 0478 00       		.sleb128 0
 1869 0479 01       		.byte	0x1
 1870 047a 8D040000 		.4byte	0x48d
 1871 047e 1A       		.uleb128 0x1a
 1872 047f 62050000 		.4byte	.LASF49
 1873 0483 01       		.byte	0x1
 1874 0484 5B01     		.2byte	0x15b
 1875 0486 5E040000 		.4byte	0x45e
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 60


 1876 048a 01       		.byte	0x1
 1877 048b 50       		.byte	0x50
 1878 048c 00       		.byte	0
 1879 048d 1B       		.uleb128 0x1b
 1880 048e 01       		.byte	0x1
 1881 048f 84050000 		.4byte	.LASF56
 1882 0493 01       		.byte	0x1
 1883 0494 6F01     		.2byte	0x16f
 1884 0496 01       		.byte	0x1
 1885 0497 72010000 		.4byte	.LFB113
 1886 049b 92010000 		.4byte	.LFE113
 1887 049f 38020000 		.4byte	.LLST9
 1888 04a3 01       		.byte	0x1
 1889 04a4 D7040000 		.4byte	0x4d7
 1890 04a8 1A       		.uleb128 0x1a
 1891 04a9 A6030000 		.4byte	.LASF48
 1892 04ad 01       		.byte	0x1
 1893 04ae 6F01     		.2byte	0x16f
 1894 04b0 C5030000 		.4byte	0x3c5
 1895 04b4 01       		.byte	0x1
 1896 04b5 50       		.byte	0x50
 1897 04b6 1C       		.uleb128 0x1c
 1898 04b7 47020000 		.4byte	.LASF57
 1899 04bb 01       		.byte	0x1
 1900 04bc 6F01     		.2byte	0x16f
 1901 04be D7040000 		.4byte	0x4d7
 1902 04c2 58020000 		.4byte	.LLST10
 1903 04c6 1D       		.uleb128 0x1d
 1904 04c7 74020000 		.4byte	.LASF50
 1905 04cb 01       		.byte	0x1
 1906 04cc 7101     		.2byte	0x171
 1907 04ce 69000000 		.4byte	0x69
 1908 04d2 79020000 		.4byte	.LLST11
 1909 04d6 00       		.byte	0
 1910 04d7 15       		.uleb128 0x15
 1911 04d8 04       		.byte	0x4
 1912 04d9 D3020000 		.4byte	0x2d3
 1913 04dd 19       		.uleb128 0x19
 1914 04de 01       		.byte	0x1
 1915 04df 88020000 		.4byte	.LASF58
 1916 04e3 01       		.byte	0x1
 1917 04e4 8E01     		.2byte	0x18e
 1918 04e6 01       		.byte	0x1
 1919 04e7 92010000 		.4byte	.LFB114
 1920 04eb 9E010000 		.4byte	.LFE114
 1921 04ef 02       		.byte	0x2
 1922 04f0 7D       		.byte	0x7d
 1923 04f1 00       		.sleb128 0
 1924 04f2 01       		.byte	0x1
 1925 04f3 06050000 		.4byte	0x506
 1926 04f7 1A       		.uleb128 0x1a
 1927 04f8 47020000 		.4byte	.LASF57
 1928 04fc 01       		.byte	0x1
 1929 04fd 8E01     		.2byte	0x18e
 1930 04ff D7040000 		.4byte	0x4d7
 1931 0503 01       		.byte	0x1
 1932 0504 50       		.byte	0x50
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 61


 1933 0505 00       		.byte	0
 1934 0506 19       		.uleb128 0x19
 1935 0507 01       		.byte	0x1
 1936 0508 E6000000 		.4byte	.LASF59
 1937 050c 01       		.byte	0x1
 1938 050d 9F01     		.2byte	0x19f
 1939 050f 01       		.byte	0x1
 1940 0510 9E010000 		.4byte	.LFB115
 1941 0514 B6010000 		.4byte	.LFE115
 1942 0518 02       		.byte	0x2
 1943 0519 7D       		.byte	0x7d
 1944 051a 00       		.sleb128 0
 1945 051b 01       		.byte	0x1
 1946 051c 3D050000 		.4byte	0x53d
 1947 0520 1A       		.uleb128 0x1a
 1948 0521 A6030000 		.4byte	.LASF48
 1949 0525 01       		.byte	0x1
 1950 0526 9F01     		.2byte	0x19f
 1951 0528 C5030000 		.4byte	0x3c5
 1952 052c 01       		.byte	0x1
 1953 052d 50       		.byte	0x50
 1954 052e 1A       		.uleb128 0x1a
 1955 052f 2E010000 		.4byte	.LASF60
 1956 0533 01       		.byte	0x1
 1957 0534 9F01     		.2byte	0x19f
 1958 0536 EC000000 		.4byte	0xec
 1959 053a 01       		.byte	0x1
 1960 053b 51       		.byte	0x51
 1961 053c 00       		.byte	0
 1962 053d 19       		.uleb128 0x19
 1963 053e 01       		.byte	0x1
 1964 053f 36000000 		.4byte	.LASF61
 1965 0543 01       		.byte	0x1
 1966 0544 B901     		.2byte	0x1b9
 1967 0546 01       		.byte	0x1
 1968 0547 B6010000 		.4byte	.LFB116
 1969 054b C8010000 		.4byte	.LFE116
 1970 054f 02       		.byte	0x2
 1971 0550 7D       		.byte	0x7d
 1972 0551 00       		.sleb128 0
 1973 0552 01       		.byte	0x1
 1974 0553 76050000 		.4byte	0x576
 1975 0557 1A       		.uleb128 0x1a
 1976 0558 A6030000 		.4byte	.LASF48
 1977 055c 01       		.byte	0x1
 1978 055d B901     		.2byte	0x1b9
 1979 055f C5030000 		.4byte	0x3c5
 1980 0563 01       		.byte	0x1
 1981 0564 50       		.byte	0x50
 1982 0565 1C       		.uleb128 0x1c
 1983 0566 CC050000 		.4byte	.LASF62
 1984 056a 01       		.byte	0x1
 1985 056b B901     		.2byte	0x1b9
 1986 056d 2C000000 		.4byte	0x2c
 1987 0571 98020000 		.4byte	.LLST12
 1988 0575 00       		.byte	0
 1989 0576 19       		.uleb128 0x19
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 62


 1990 0577 01       		.byte	0x1
 1991 0578 02040000 		.4byte	.LASF63
 1992 057c 01       		.byte	0x1
 1993 057d CE01     		.2byte	0x1ce
 1994 057f 01       		.byte	0x1
 1995 0580 C8010000 		.4byte	.LFB117
 1996 0584 DE010000 		.4byte	.LFE117
 1997 0588 02       		.byte	0x2
 1998 0589 7D       		.byte	0x7d
 1999 058a 00       		.sleb128 0
 2000 058b 01       		.byte	0x1
 2001 058c AD050000 		.4byte	0x5ad
 2002 0590 1A       		.uleb128 0x1a
 2003 0591 A6030000 		.4byte	.LASF48
 2004 0595 01       		.byte	0x1
 2005 0596 CE01     		.2byte	0x1ce
 2006 0598 C5030000 		.4byte	0x3c5
 2007 059c 01       		.byte	0x1
 2008 059d 50       		.byte	0x50
 2009 059e 1A       		.uleb128 0x1a
 2010 059f 2E010000 		.4byte	.LASF60
 2011 05a3 01       		.byte	0x1
 2012 05a4 CE01     		.2byte	0x1ce
 2013 05a6 EC000000 		.4byte	0xec
 2014 05aa 01       		.byte	0x1
 2015 05ab 51       		.byte	0x51
 2016 05ac 00       		.byte	0
 2017 05ad 19       		.uleb128 0x19
 2018 05ae 01       		.byte	0x1
 2019 05af 87000000 		.4byte	.LASF64
 2020 05b3 01       		.byte	0x1
 2021 05b4 E801     		.2byte	0x1e8
 2022 05b6 01       		.byte	0x1
 2023 05b7 DE010000 		.4byte	.LFB118
 2024 05bb F6010000 		.4byte	.LFE118
 2025 05bf 02       		.byte	0x2
 2026 05c0 7D       		.byte	0x7d
 2027 05c1 00       		.sleb128 0
 2028 05c2 01       		.byte	0x1
 2029 05c3 E4050000 		.4byte	0x5e4
 2030 05c7 1A       		.uleb128 0x1a
 2031 05c8 A6030000 		.4byte	.LASF48
 2032 05cc 01       		.byte	0x1
 2033 05cd E801     		.2byte	0x1e8
 2034 05cf C5030000 		.4byte	0x3c5
 2035 05d3 01       		.byte	0x1
 2036 05d4 50       		.byte	0x50
 2037 05d5 1A       		.uleb128 0x1a
 2038 05d6 2E010000 		.4byte	.LASF60
 2039 05da 01       		.byte	0x1
 2040 05db E801     		.2byte	0x1e8
 2041 05dd EC000000 		.4byte	0xec
 2042 05e1 01       		.byte	0x1
 2043 05e2 51       		.byte	0x51
 2044 05e3 00       		.byte	0
 2045 05e4 19       		.uleb128 0x19
 2046 05e5 01       		.byte	0x1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 63


 2047 05e6 F0000000 		.4byte	.LASF65
 2048 05ea 01       		.byte	0x1
 2049 05eb 2102     		.2byte	0x221
 2050 05ed 01       		.byte	0x1
 2051 05ee F6010000 		.4byte	.LFB119
 2052 05f2 FE010000 		.4byte	.LFE119
 2053 05f6 02       		.byte	0x2
 2054 05f7 7D       		.byte	0x7d
 2055 05f8 00       		.sleb128 0
 2056 05f9 01       		.byte	0x1
 2057 05fa 1D060000 		.4byte	0x61d
 2058 05fe 1A       		.uleb128 0x1a
 2059 05ff A6030000 		.4byte	.LASF48
 2060 0603 01       		.byte	0x1
 2061 0604 2102     		.2byte	0x221
 2062 0606 C5030000 		.4byte	0x3c5
 2063 060a 01       		.byte	0x1
 2064 060b 50       		.byte	0x50
 2065 060c 1C       		.uleb128 0x1c
 2066 060d F4040000 		.4byte	.LASF66
 2067 0611 01       		.byte	0x1
 2068 0612 2102     		.2byte	0x221
 2069 0614 45000000 		.4byte	0x45
 2070 0618 B9020000 		.4byte	.LLST13
 2071 061c 00       		.byte	0
 2072 061d 1E       		.uleb128 0x1e
 2073 061e 01       		.byte	0x1
 2074 061f 08060000 		.4byte	.LASF92
 2075 0623 01       		.byte	0x1
 2076 0624 3102     		.2byte	0x231
 2077 0626 01       		.byte	0x1
 2078 0627 45000000 		.4byte	0x45
 2079 062b FE010000 		.4byte	.LFB120
 2080 062f 06020000 		.4byte	.LFE120
 2081 0633 02       		.byte	0x2
 2082 0634 7D       		.byte	0x7d
 2083 0635 00       		.sleb128 0
 2084 0636 01       		.byte	0x1
 2085 0637 4C060000 		.4byte	0x64c
 2086 063b 1C       		.uleb128 0x1c
 2087 063c A6030000 		.4byte	.LASF48
 2088 0640 01       		.byte	0x1
 2089 0641 3102     		.2byte	0x231
 2090 0643 C5030000 		.4byte	0x3c5
 2091 0647 DA020000 		.4byte	.LLST14
 2092 064b 00       		.byte	0
 2093 064c 19       		.uleb128 0x19
 2094 064d 01       		.byte	0x1
 2095 064e C7020000 		.4byte	.LASF67
 2096 0652 01       		.byte	0x1
 2097 0653 6402     		.2byte	0x264
 2098 0655 01       		.byte	0x1
 2099 0656 06020000 		.4byte	.LFB121
 2100 065a 1C020000 		.4byte	.LFE121
 2101 065e 02       		.byte	0x2
 2102 065f 7D       		.byte	0x7d
 2103 0660 00       		.sleb128 0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 64


 2104 0661 01       		.byte	0x1
 2105 0662 85060000 		.4byte	0x685
 2106 0666 1A       		.uleb128 0x1a
 2107 0667 A6030000 		.4byte	.LASF48
 2108 066b 01       		.byte	0x1
 2109 066c 6402     		.2byte	0x264
 2110 066e C5030000 		.4byte	0x3c5
 2111 0672 01       		.byte	0x1
 2112 0673 50       		.byte	0x50
 2113 0674 1C       		.uleb128 0x1c
 2114 0675 E5030000 		.4byte	.LASF68
 2115 0679 01       		.byte	0x1
 2116 067a 6402     		.2byte	0x264
 2117 067c 2C000000 		.4byte	0x2c
 2118 0680 FB020000 		.4byte	.LLST15
 2119 0684 00       		.byte	0
 2120 0685 19       		.uleb128 0x19
 2121 0686 01       		.byte	0x1
 2122 0687 22020000 		.4byte	.LASF69
 2123 068b 01       		.byte	0x1
 2124 068c 7802     		.2byte	0x278
 2125 068e 01       		.byte	0x1
 2126 068f 1C020000 		.4byte	.LFB122
 2127 0693 34020000 		.4byte	.LFE122
 2128 0697 02       		.byte	0x2
 2129 0698 7D       		.byte	0x7d
 2130 0699 00       		.sleb128 0
 2131 069a 01       		.byte	0x1
 2132 069b BC060000 		.4byte	0x6bc
 2133 069f 1A       		.uleb128 0x1a
 2134 06a0 A6030000 		.4byte	.LASF48
 2135 06a4 01       		.byte	0x1
 2136 06a5 7802     		.2byte	0x278
 2137 06a7 C5030000 		.4byte	0x3c5
 2138 06ab 01       		.byte	0x1
 2139 06ac 50       		.byte	0x50
 2140 06ad 1A       		.uleb128 0x1a
 2141 06ae 2E010000 		.4byte	.LASF60
 2142 06b2 01       		.byte	0x1
 2143 06b3 7802     		.2byte	0x278
 2144 06b5 EC000000 		.4byte	0xec
 2145 06b9 01       		.byte	0x1
 2146 06ba 51       		.byte	0x51
 2147 06bb 00       		.byte	0
 2148 06bc 19       		.uleb128 0x19
 2149 06bd 01       		.byte	0x1
 2150 06be 94050000 		.4byte	.LASF70
 2151 06c2 01       		.byte	0x1
 2152 06c3 9302     		.2byte	0x293
 2153 06c5 01       		.byte	0x1
 2154 06c6 34020000 		.4byte	.LFB123
 2155 06ca 4A020000 		.4byte	.LFE123
 2156 06ce 02       		.byte	0x2
 2157 06cf 7D       		.byte	0x7d
 2158 06d0 00       		.sleb128 0
 2159 06d1 01       		.byte	0x1
 2160 06d2 F5060000 		.4byte	0x6f5
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 65


 2161 06d6 1A       		.uleb128 0x1a
 2162 06d7 A6030000 		.4byte	.LASF48
 2163 06db 01       		.byte	0x1
 2164 06dc 9302     		.2byte	0x293
 2165 06de C5030000 		.4byte	0x3c5
 2166 06e2 01       		.byte	0x1
 2167 06e3 50       		.byte	0x50
 2168 06e4 1C       		.uleb128 0x1c
 2169 06e5 10010000 		.4byte	.LASF71
 2170 06e9 01       		.byte	0x1
 2171 06ea 9302     		.2byte	0x293
 2172 06ec 45000000 		.4byte	0x45
 2173 06f0 1C030000 		.4byte	.LLST16
 2174 06f4 00       		.byte	0
 2175 06f5 19       		.uleb128 0x19
 2176 06f6 01       		.byte	0x1
 2177 06f7 F6010000 		.4byte	.LASF72
 2178 06fb 01       		.byte	0x1
 2179 06fc D802     		.2byte	0x2d8
 2180 06fe 01       		.byte	0x1
 2181 06ff 4A020000 		.4byte	.LFB124
 2182 0703 60020000 		.4byte	.LFE124
 2183 0707 02       		.byte	0x2
 2184 0708 7D       		.byte	0x7d
 2185 0709 00       		.sleb128 0
 2186 070a 01       		.byte	0x1
 2187 070b 2E070000 		.4byte	0x72e
 2188 070f 1A       		.uleb128 0x1a
 2189 0710 A6030000 		.4byte	.LASF48
 2190 0714 01       		.byte	0x1
 2191 0715 D802     		.2byte	0x2d8
 2192 0717 C5030000 		.4byte	0x3c5
 2193 071b 01       		.byte	0x1
 2194 071c 50       		.byte	0x50
 2195 071d 1C       		.uleb128 0x1c
 2196 071e 6C000000 		.4byte	.LASF73
 2197 0722 01       		.byte	0x1
 2198 0723 D802     		.2byte	0x2d8
 2199 0725 45000000 		.4byte	0x45
 2200 0729 3D030000 		.4byte	.LLST17
 2201 072d 00       		.byte	0
 2202 072e 19       		.uleb128 0x19
 2203 072f 01       		.byte	0x1
 2204 0730 3E040000 		.4byte	.LASF74
 2205 0734 01       		.byte	0x1
 2206 0735 EA02     		.2byte	0x2ea
 2207 0737 01       		.byte	0x1
 2208 0738 60020000 		.4byte	.LFB125
 2209 073c 78020000 		.4byte	.LFE125
 2210 0740 02       		.byte	0x2
 2211 0741 7D       		.byte	0x7d
 2212 0742 00       		.sleb128 0
 2213 0743 01       		.byte	0x1
 2214 0744 65070000 		.4byte	0x765
 2215 0748 1A       		.uleb128 0x1a
 2216 0749 A6030000 		.4byte	.LASF48
 2217 074d 01       		.byte	0x1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 66


 2218 074e EA02     		.2byte	0x2ea
 2219 0750 C5030000 		.4byte	0x3c5
 2220 0754 01       		.byte	0x1
 2221 0755 50       		.byte	0x50
 2222 0756 1A       		.uleb128 0x1a
 2223 0757 2E010000 		.4byte	.LASF60
 2224 075b 01       		.byte	0x1
 2225 075c EA02     		.2byte	0x2ea
 2226 075e EC000000 		.4byte	0xec
 2227 0762 01       		.byte	0x1
 2228 0763 51       		.byte	0x51
 2229 0764 00       		.byte	0
 2230 0765 19       		.uleb128 0x19
 2231 0766 01       		.byte	0x1
 2232 0767 3F030000 		.4byte	.LASF75
 2233 076b 01       		.byte	0x1
 2234 076c 0203     		.2byte	0x302
 2235 076e 01       		.byte	0x1
 2236 076f 78020000 		.4byte	.LFB126
 2237 0773 84020000 		.4byte	.LFE126
 2238 0777 02       		.byte	0x2
 2239 0778 7D       		.byte	0x7d
 2240 0779 00       		.sleb128 0
 2241 077a 01       		.byte	0x1
 2242 077b 8E070000 		.4byte	0x78e
 2243 077f 1A       		.uleb128 0x1a
 2244 0780 A6030000 		.4byte	.LASF48
 2245 0784 01       		.byte	0x1
 2246 0785 0203     		.2byte	0x302
 2247 0787 C5030000 		.4byte	0x3c5
 2248 078b 01       		.byte	0x1
 2249 078c 50       		.byte	0x50
 2250 078d 00       		.byte	0
 2251 078e 19       		.uleb128 0x19
 2252 078f 01       		.byte	0x1
 2253 0790 A7050000 		.4byte	.LASF76
 2254 0794 01       		.byte	0x1
 2255 0795 3703     		.2byte	0x337
 2256 0797 01       		.byte	0x1
 2257 0798 84020000 		.4byte	.LFB127
 2258 079c 9C020000 		.4byte	.LFE127
 2259 07a0 02       		.byte	0x2
 2260 07a1 7D       		.byte	0x7d
 2261 07a2 00       		.sleb128 0
 2262 07a3 01       		.byte	0x1
 2263 07a4 C5070000 		.4byte	0x7c5
 2264 07a8 1A       		.uleb128 0x1a
 2265 07a9 A6030000 		.4byte	.LASF48
 2266 07ad 01       		.byte	0x1
 2267 07ae 3703     		.2byte	0x337
 2268 07b0 C5030000 		.4byte	0x3c5
 2269 07b4 01       		.byte	0x1
 2270 07b5 50       		.byte	0x50
 2271 07b6 1A       		.uleb128 0x1a
 2272 07b7 2E010000 		.4byte	.LASF60
 2273 07bb 01       		.byte	0x1
 2274 07bc 3703     		.2byte	0x337
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 67


 2275 07be EC000000 		.4byte	0xec
 2276 07c2 01       		.byte	0x1
 2277 07c3 51       		.byte	0x51
 2278 07c4 00       		.byte	0
 2279 07c5 19       		.uleb128 0x19
 2280 07c6 01       		.byte	0x1
 2281 07c7 F8020000 		.4byte	.LASF77
 2282 07cb 01       		.byte	0x1
 2283 07cc 8C03     		.2byte	0x38c
 2284 07ce 01       		.byte	0x1
 2285 07cf 9C020000 		.4byte	.LFB128
 2286 07d3 AE020000 		.4byte	.LFE128
 2287 07d7 02       		.byte	0x2
 2288 07d8 7D       		.byte	0x7d
 2289 07d9 00       		.sleb128 0
 2290 07da 01       		.byte	0x1
 2291 07db FE070000 		.4byte	0x7fe
 2292 07df 1A       		.uleb128 0x1a
 2293 07e0 A6030000 		.4byte	.LASF48
 2294 07e4 01       		.byte	0x1
 2295 07e5 8C03     		.2byte	0x38c
 2296 07e7 C5030000 		.4byte	0x3c5
 2297 07eb 01       		.byte	0x1
 2298 07ec 50       		.byte	0x50
 2299 07ed 1C       		.uleb128 0x1c
 2300 07ee DC010000 		.4byte	.LASF78
 2301 07f2 01       		.byte	0x1
 2302 07f3 8C03     		.2byte	0x38c
 2303 07f5 2C000000 		.4byte	0x2c
 2304 07f9 5E030000 		.4byte	.LLST18
 2305 07fd 00       		.byte	0
 2306 07fe 19       		.uleb128 0x19
 2307 07ff 01       		.byte	0x1
 2308 0800 C7030000 		.4byte	.LASF79
 2309 0804 01       		.byte	0x1
 2310 0805 9F03     		.2byte	0x39f
 2311 0807 01       		.byte	0x1
 2312 0808 AE020000 		.4byte	.LFB129
 2313 080c C6020000 		.4byte	.LFE129
 2314 0810 02       		.byte	0x2
 2315 0811 7D       		.byte	0x7d
 2316 0812 00       		.sleb128 0
 2317 0813 01       		.byte	0x1
 2318 0814 35080000 		.4byte	0x835
 2319 0818 1A       		.uleb128 0x1a
 2320 0819 A6030000 		.4byte	.LASF48
 2321 081d 01       		.byte	0x1
 2322 081e 9F03     		.2byte	0x39f
 2323 0820 C5030000 		.4byte	0x3c5
 2324 0824 01       		.byte	0x1
 2325 0825 50       		.byte	0x50
 2326 0826 1A       		.uleb128 0x1a
 2327 0827 2E010000 		.4byte	.LASF60
 2328 082b 01       		.byte	0x1
 2329 082c 9F03     		.2byte	0x39f
 2330 082e EC000000 		.4byte	0xec
 2331 0832 01       		.byte	0x1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 68


 2332 0833 51       		.byte	0x51
 2333 0834 00       		.byte	0
 2334 0835 19       		.uleb128 0x19
 2335 0836 01       		.byte	0x1
 2336 0837 5D020000 		.4byte	.LASF80
 2337 083b 01       		.byte	0x1
 2338 083c B803     		.2byte	0x3b8
 2339 083e 01       		.byte	0x1
 2340 083f C6020000 		.4byte	.LFB130
 2341 0843 DE020000 		.4byte	.LFE130
 2342 0847 02       		.byte	0x2
 2343 0848 7D       		.byte	0x7d
 2344 0849 00       		.sleb128 0
 2345 084a 01       		.byte	0x1
 2346 084b 6C080000 		.4byte	0x86c
 2347 084f 1A       		.uleb128 0x1a
 2348 0850 A6030000 		.4byte	.LASF48
 2349 0854 01       		.byte	0x1
 2350 0855 B803     		.2byte	0x3b8
 2351 0857 C5030000 		.4byte	0x3c5
 2352 085b 01       		.byte	0x1
 2353 085c 50       		.byte	0x50
 2354 085d 1A       		.uleb128 0x1a
 2355 085e 2E010000 		.4byte	.LASF60
 2356 0862 01       		.byte	0x1
 2357 0863 B803     		.2byte	0x3b8
 2358 0865 EC000000 		.4byte	0xec
 2359 0869 01       		.byte	0x1
 2360 086a 51       		.byte	0x51
 2361 086b 00       		.byte	0
 2362 086c 19       		.uleb128 0x19
 2363 086d 01       		.byte	0x1
 2364 086e 4B040000 		.4byte	.LASF81
 2365 0872 01       		.byte	0x1
 2366 0873 FF03     		.2byte	0x3ff
 2367 0875 01       		.byte	0x1
 2368 0876 DE020000 		.4byte	.LFB131
 2369 087a F4020000 		.4byte	.LFE131
 2370 087e 02       		.byte	0x2
 2371 087f 7D       		.byte	0x7d
 2372 0880 00       		.sleb128 0
 2373 0881 01       		.byte	0x1
 2374 0882 A5080000 		.4byte	0x8a5
 2375 0886 1A       		.uleb128 0x1a
 2376 0887 A6030000 		.4byte	.LASF48
 2377 088b 01       		.byte	0x1
 2378 088c FF03     		.2byte	0x3ff
 2379 088e C5030000 		.4byte	0x3c5
 2380 0892 01       		.byte	0x1
 2381 0893 50       		.byte	0x50
 2382 0894 1C       		.uleb128 0x1c
 2383 0895 75010000 		.4byte	.LASF82
 2384 0899 01       		.byte	0x1
 2385 089a FF03     		.2byte	0x3ff
 2386 089c 45000000 		.4byte	0x45
 2387 08a0 7F030000 		.4byte	.LLST19
 2388 08a4 00       		.byte	0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 69


 2389 08a5 19       		.uleb128 0x19
 2390 08a6 01       		.byte	0x1
 2391 08a7 C4040000 		.4byte	.LASF83
 2392 08ab 01       		.byte	0x1
 2393 08ac 1104     		.2byte	0x411
 2394 08ae 01       		.byte	0x1
 2395 08af F4020000 		.4byte	.LFB132
 2396 08b3 0C030000 		.4byte	.LFE132
 2397 08b7 02       		.byte	0x2
 2398 08b8 7D       		.byte	0x7d
 2399 08b9 00       		.sleb128 0
 2400 08ba 01       		.byte	0x1
 2401 08bb DC080000 		.4byte	0x8dc
 2402 08bf 1A       		.uleb128 0x1a
 2403 08c0 A6030000 		.4byte	.LASF48
 2404 08c4 01       		.byte	0x1
 2405 08c5 1104     		.2byte	0x411
 2406 08c7 C5030000 		.4byte	0x3c5
 2407 08cb 01       		.byte	0x1
 2408 08cc 50       		.byte	0x50
 2409 08cd 1A       		.uleb128 0x1a
 2410 08ce 2E010000 		.4byte	.LASF60
 2411 08d2 01       		.byte	0x1
 2412 08d3 1104     		.2byte	0x411
 2413 08d5 EC000000 		.4byte	0xec
 2414 08d9 01       		.byte	0x1
 2415 08da 51       		.byte	0x51
 2416 08db 00       		.byte	0
 2417 08dc 19       		.uleb128 0x19
 2418 08dd 01       		.byte	0x1
 2419 08de 37010000 		.4byte	.LASF84
 2420 08e2 01       		.byte	0x1
 2421 08e3 3F04     		.2byte	0x43f
 2422 08e5 01       		.byte	0x1
 2423 08e6 0C030000 		.4byte	.LFB133
 2424 08ea 1E030000 		.4byte	.LFE133
 2425 08ee 02       		.byte	0x2
 2426 08ef 7D       		.byte	0x7d
 2427 08f0 00       		.sleb128 0
 2428 08f1 01       		.byte	0x1
 2429 08f2 23090000 		.4byte	0x923
 2430 08f6 1A       		.uleb128 0x1a
 2431 08f7 A6030000 		.4byte	.LASF48
 2432 08fb 01       		.byte	0x1
 2433 08fc 3F04     		.2byte	0x43f
 2434 08fe C5030000 		.4byte	0x3c5
 2435 0902 01       		.byte	0x1
 2436 0903 50       		.byte	0x50
 2437 0904 1C       		.uleb128 0x1c
 2438 0905 99030000 		.4byte	.LASF85
 2439 0909 01       		.byte	0x1
 2440 090a 3F04     		.2byte	0x43f
 2441 090c 45000000 		.4byte	0x45
 2442 0910 A0030000 		.4byte	.LLST20
 2443 0914 1A       		.uleb128 0x1a
 2444 0915 2E010000 		.4byte	.LASF60
 2445 0919 01       		.byte	0x1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 70


 2446 091a 3F04     		.2byte	0x43f
 2447 091c EC000000 		.4byte	0xec
 2448 0920 01       		.byte	0x1
 2449 0921 52       		.byte	0x52
 2450 0922 00       		.byte	0
 2451 0923 1B       		.uleb128 0x1b
 2452 0924 01       		.byte	0x1
 2453 0925 78030000 		.4byte	.LASF86
 2454 0929 01       		.byte	0x1
 2455 092a BF04     		.2byte	0x4bf
 2456 092c 01       		.byte	0x1
 2457 092d 1E030000 		.4byte	.LFB134
 2458 0931 50030000 		.4byte	.LFE134
 2459 0935 DA030000 		.4byte	.LLST21
 2460 0939 01       		.byte	0x1
 2461 093a AB090000 		.4byte	0x9ab
 2462 093e 1C       		.uleb128 0x1c
 2463 093f A6030000 		.4byte	.LASF48
 2464 0943 01       		.byte	0x1
 2465 0944 BF04     		.2byte	0x4bf
 2466 0946 C5030000 		.4byte	0x3c5
 2467 094a FA030000 		.4byte	.LLST22
 2468 094e 1C       		.uleb128 0x1c
 2469 094f 07010000 		.4byte	.LASF87
 2470 0953 01       		.byte	0x1
 2471 0954 BF04     		.2byte	0x4bf
 2472 0956 45000000 		.4byte	0x45
 2473 095a 4B040000 		.4byte	.LLST23
 2474 095e 1A       		.uleb128 0x1a
 2475 095f 2E010000 		.4byte	.LASF60
 2476 0963 01       		.byte	0x1
 2477 0964 BF04     		.2byte	0x4bf
 2478 0966 EC000000 		.4byte	0xec
 2479 096a 01       		.byte	0x1
 2480 096b 52       		.byte	0x52
 2481 096c 1D       		.uleb128 0x1d
 2482 096d 1A060000 		.4byte	.LASF88
 2483 0971 01       		.byte	0x1
 2484 0972 C104     		.2byte	0x4c1
 2485 0974 69000000 		.4byte	0x69
 2486 0978 6C040000 		.4byte	.LLST24
 2487 097c 1D       		.uleb128 0x1d
 2488 097d 1F000000 		.4byte	.LASF89
 2489 0981 01       		.byte	0x1
 2490 0982 C104     		.2byte	0x4c1
 2491 0984 69000000 		.4byte	0x69
 2492 0988 8B040000 		.4byte	.LLST25
 2493 098c 1D       		.uleb128 0x1d
 2494 098d E7050000 		.4byte	.LASF90
 2495 0991 01       		.byte	0x1
 2496 0992 C104     		.2byte	0x4c1
 2497 0994 69000000 		.4byte	0x69
 2498 0998 B2040000 		.4byte	.LLST26
 2499 099c 1F       		.uleb128 0x1f
 2500 099d AC020000 		.4byte	.LASF91
 2501 09a1 01       		.byte	0x1
 2502 09a2 C204     		.2byte	0x4c2
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 71


 2503 09a4 69000000 		.4byte	0x69
 2504 09a8 01       		.byte	0x1
 2505 09a9 50       		.byte	0x50
 2506 09aa 00       		.byte	0
 2507 09ab 1E       		.uleb128 0x1e
 2508 09ac 01       		.byte	0x1
 2509 09ad 16050000 		.4byte	.LASF93
 2510 09b1 01       		.byte	0x1
 2511 09b2 F604     		.2byte	0x4f6
 2512 09b4 01       		.byte	0x1
 2513 09b5 BE000000 		.4byte	0xbe
 2514 09b9 50030000 		.4byte	.LFB135
 2515 09bd 5C030000 		.4byte	.LFE135
 2516 09c1 02       		.byte	0x2
 2517 09c2 7D       		.byte	0x7d
 2518 09c3 00       		.sleb128 0
 2519 09c4 01       		.byte	0x1
 2520 09c5 F8090000 		.4byte	0x9f8
 2521 09c9 1C       		.uleb128 0x1c
 2522 09ca A6030000 		.4byte	.LASF48
 2523 09ce 01       		.byte	0x1
 2524 09cf F604     		.2byte	0x4f6
 2525 09d1 C5030000 		.4byte	0x3c5
 2526 09d5 DC040000 		.4byte	.LLST27
 2527 09d9 1A       		.uleb128 0x1a
 2528 09da 17020000 		.4byte	.LASF94
 2529 09de 01       		.byte	0x1
 2530 09df F604     		.2byte	0x4f6
 2531 09e1 45000000 		.4byte	0x45
 2532 09e5 01       		.byte	0x1
 2533 09e6 51       		.byte	0x51
 2534 09e7 1D       		.uleb128 0x1d
 2535 09e8 C5000000 		.4byte	.LASF95
 2536 09ec 01       		.byte	0x1
 2537 09ed F804     		.2byte	0x4f8
 2538 09ef BE000000 		.4byte	0xbe
 2539 09f3 FD040000 		.4byte	.LLST28
 2540 09f7 00       		.byte	0
 2541 09f8 19       		.uleb128 0x19
 2542 09f9 01       		.byte	0x1
 2543 09fa B7020000 		.4byte	.LASF96
 2544 09fe 01       		.byte	0x1
 2545 09ff 2705     		.2byte	0x527
 2546 0a01 01       		.byte	0x1
 2547 0a02 5C030000 		.4byte	.LFB136
 2548 0a06 62030000 		.4byte	.LFE136
 2549 0a0a 02       		.byte	0x2
 2550 0a0b 7D       		.byte	0x7d
 2551 0a0c 00       		.sleb128 0
 2552 0a0d 01       		.byte	0x1
 2553 0a0e 310A0000 		.4byte	0xa31
 2554 0a12 1A       		.uleb128 0x1a
 2555 0a13 A6030000 		.4byte	.LASF48
 2556 0a17 01       		.byte	0x1
 2557 0a18 2705     		.2byte	0x527
 2558 0a1a C5030000 		.4byte	0x3c5
 2559 0a1e 01       		.byte	0x1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 72


 2560 0a1f 50       		.byte	0x50
 2561 0a20 1C       		.uleb128 0x1c
 2562 0a21 17020000 		.4byte	.LASF94
 2563 0a25 01       		.byte	0x1
 2564 0a26 2705     		.2byte	0x527
 2565 0a28 45000000 		.4byte	0x45
 2566 0a2c 25050000 		.4byte	.LLST29
 2567 0a30 00       		.byte	0
 2568 0a31 20       		.uleb128 0x20
 2569 0a32 01       		.byte	0x1
 2570 0a33 2C040000 		.4byte	.LASF97
 2571 0a37 01       		.byte	0x1
 2572 0a38 4905     		.2byte	0x549
 2573 0a3a 01       		.byte	0x1
 2574 0a3b CA000000 		.4byte	0xca
 2575 0a3f 62030000 		.4byte	.LFB137
 2576 0a43 A2030000 		.4byte	.LFE137
 2577 0a47 46050000 		.4byte	.LLST30
 2578 0a4b 01       		.byte	0x1
 2579 0a4c B10A0000 		.4byte	0xab1
 2580 0a50 1C       		.uleb128 0x1c
 2581 0a51 A6030000 		.4byte	.LASF48
 2582 0a55 01       		.byte	0x1
 2583 0a56 4905     		.2byte	0x549
 2584 0a58 C5030000 		.4byte	0x3c5
 2585 0a5c 66050000 		.4byte	.LLST31
 2586 0a60 1C       		.uleb128 0x1c
 2587 0a61 07010000 		.4byte	.LASF87
 2588 0a65 01       		.byte	0x1
 2589 0a66 4905     		.2byte	0x549
 2590 0a68 45000000 		.4byte	0x45
 2591 0a6c A0050000 		.4byte	.LLST32
 2592 0a70 1D       		.uleb128 0x1d
 2593 0a71 FB030000 		.4byte	.LASF98
 2594 0a75 01       		.byte	0x1
 2595 0a76 4B05     		.2byte	0x54b
 2596 0a78 69000000 		.4byte	0x69
 2597 0a7c CC050000 		.4byte	.LLST33
 2598 0a80 1D       		.uleb128 0x1d
 2599 0a81 E7050000 		.4byte	.LASF90
 2600 0a85 01       		.byte	0x1
 2601 0a86 4B05     		.2byte	0x54b
 2602 0a88 69000000 		.4byte	0x69
 2603 0a8c 2D060000 		.4byte	.LLST34
 2604 0a90 1D       		.uleb128 0x1d
 2605 0a91 1A060000 		.4byte	.LASF88
 2606 0a95 01       		.byte	0x1
 2607 0a96 4B05     		.2byte	0x54b
 2608 0a98 69000000 		.4byte	0x69
 2609 0a9c 75060000 		.4byte	.LLST35
 2610 0aa0 1D       		.uleb128 0x1d
 2611 0aa1 C5000000 		.4byte	.LASF95
 2612 0aa5 01       		.byte	0x1
 2613 0aa6 4C05     		.2byte	0x54c
 2614 0aa8 CA000000 		.4byte	0xca
 2615 0aac 94060000 		.4byte	.LLST36
 2616 0ab0 00       		.byte	0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 73


 2617 0ab1 19       		.uleb128 0x19
 2618 0ab2 01       		.byte	0x1
 2619 0ab3 C4010000 		.4byte	.LASF99
 2620 0ab7 01       		.byte	0x1
 2621 0ab8 9305     		.2byte	0x593
 2622 0aba 01       		.byte	0x1
 2623 0abb A2030000 		.4byte	.LFB138
 2624 0abf B0030000 		.4byte	.LFE138
 2625 0ac3 02       		.byte	0x2
 2626 0ac4 7D       		.byte	0x7d
 2627 0ac5 00       		.sleb128 0
 2628 0ac6 01       		.byte	0x1
 2629 0ac7 060B0000 		.4byte	0xb06
 2630 0acb 1A       		.uleb128 0x1a
 2631 0acc A6030000 		.4byte	.LASF48
 2632 0ad0 01       		.byte	0x1
 2633 0ad1 9305     		.2byte	0x593
 2634 0ad3 C5030000 		.4byte	0x3c5
 2635 0ad7 01       		.byte	0x1
 2636 0ad8 50       		.byte	0x50
 2637 0ad9 1C       		.uleb128 0x1c
 2638 0ada 07010000 		.4byte	.LASF87
 2639 0ade 01       		.byte	0x1
 2640 0adf 9305     		.2byte	0x593
 2641 0ae1 45000000 		.4byte	0x45
 2642 0ae5 B3060000 		.4byte	.LLST37
 2643 0ae9 1D       		.uleb128 0x1d
 2644 0aea FB030000 		.4byte	.LASF98
 2645 0aee 01       		.byte	0x1
 2646 0aef 9505     		.2byte	0x595
 2647 0af1 45000000 		.4byte	0x45
 2648 0af5 D4060000 		.4byte	.LLST38
 2649 0af9 21       		.uleb128 0x21
 2650 0afa E7050000 		.4byte	.LASF90
 2651 0afe 01       		.byte	0x1
 2652 0aff 9505     		.2byte	0x595
 2653 0b01 45000000 		.4byte	0x45
 2654 0b05 00       		.byte	0
 2655 0b06 22       		.uleb128 0x22
 2656 0b07 F9040000 		.4byte	.LASF106
 2657 0b0b 06       		.byte	0x6
 2658 0b0c 1A05     		.2byte	0x51a
 2659 0b0e A3000000 		.4byte	0xa3
 2660 0b12 01       		.byte	0x1
 2661 0b13 01       		.byte	0x1
 2662 0b14 23       		.uleb128 0x23
 2663 0b15 01       		.byte	0x1
 2664 0b16 61030000 		.4byte	.LASF100
 2665 0b1a 04       		.byte	0x4
 2666 0b1b E701     		.2byte	0x1e7
 2667 0b1d 01       		.byte	0x1
 2668 0b1e 01       		.byte	0x1
 2669 0b1f 2E0B0000 		.4byte	0xb2e
 2670 0b23 24       		.uleb128 0x24
 2671 0b24 69000000 		.4byte	0x69
 2672 0b28 24       		.uleb128 0x24
 2673 0b29 EC000000 		.4byte	0xec
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 74


 2674 0b2d 00       		.byte	0
 2675 0b2e 23       		.uleb128 0x23
 2676 0b2f 01       		.byte	0x1
 2677 0b30 9B010000 		.4byte	.LASF101
 2678 0b34 04       		.byte	0x4
 2679 0b35 E601     		.2byte	0x1e6
 2680 0b37 01       		.byte	0x1
 2681 0b38 01       		.byte	0x1
 2682 0b39 480B0000 		.4byte	0xb48
 2683 0b3d 24       		.uleb128 0x24
 2684 0b3e 69000000 		.4byte	0x69
 2685 0b42 24       		.uleb128 0x24
 2686 0b43 EC000000 		.4byte	0xec
 2687 0b47 00       		.byte	0
 2688 0b48 23       		.uleb128 0x23
 2689 0b49 01       		.byte	0x1
 2690 0b4a 50050000 		.4byte	.LASF102
 2691 0b4e 04       		.byte	0x4
 2692 0b4f D501     		.2byte	0x1d5
 2693 0b51 01       		.byte	0x1
 2694 0b52 01       		.byte	0x1
 2695 0b53 5D0B0000 		.4byte	0xb5d
 2696 0b57 24       		.uleb128 0x24
 2697 0b58 5D0B0000 		.4byte	0xb5d
 2698 0b5c 00       		.byte	0
 2699 0b5d 15       		.uleb128 0x15
 2700 0b5e 04       		.byte	0x4
 2701 0b5f 1F020000 		.4byte	0x21f
 2702 0b63 00       		.byte	0
 2703              		.section	.debug_abbrev,"",%progbits
 2704              	.Ldebug_abbrev0:
 2705 0000 01       		.uleb128 0x1
 2706 0001 11       		.uleb128 0x11
 2707 0002 01       		.byte	0x1
 2708 0003 25       		.uleb128 0x25
 2709 0004 0E       		.uleb128 0xe
 2710 0005 13       		.uleb128 0x13
 2711 0006 0B       		.uleb128 0xb
 2712 0007 03       		.uleb128 0x3
 2713 0008 0E       		.uleb128 0xe
 2714 0009 1B       		.uleb128 0x1b
 2715 000a 0E       		.uleb128 0xe
 2716 000b 11       		.uleb128 0x11
 2717 000c 01       		.uleb128 0x1
 2718 000d 12       		.uleb128 0x12
 2719 000e 01       		.uleb128 0x1
 2720 000f 10       		.uleb128 0x10
 2721 0010 06       		.uleb128 0x6
 2722 0011 00       		.byte	0
 2723 0012 00       		.byte	0
 2724 0013 02       		.uleb128 0x2
 2725 0014 24       		.uleb128 0x24
 2726 0015 00       		.byte	0
 2727 0016 0B       		.uleb128 0xb
 2728 0017 0B       		.uleb128 0xb
 2729 0018 3E       		.uleb128 0x3e
 2730 0019 0B       		.uleb128 0xb
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 75


 2731 001a 03       		.uleb128 0x3
 2732 001b 0E       		.uleb128 0xe
 2733 001c 00       		.byte	0
 2734 001d 00       		.byte	0
 2735 001e 03       		.uleb128 0x3
 2736 001f 16       		.uleb128 0x16
 2737 0020 00       		.byte	0
 2738 0021 03       		.uleb128 0x3
 2739 0022 0E       		.uleb128 0xe
 2740 0023 3A       		.uleb128 0x3a
 2741 0024 0B       		.uleb128 0xb
 2742 0025 3B       		.uleb128 0x3b
 2743 0026 0B       		.uleb128 0xb
 2744 0027 49       		.uleb128 0x49
 2745 0028 13       		.uleb128 0x13
 2746 0029 00       		.byte	0
 2747 002a 00       		.byte	0
 2748 002b 04       		.uleb128 0x4
 2749 002c 24       		.uleb128 0x24
 2750 002d 00       		.byte	0
 2751 002e 0B       		.uleb128 0xb
 2752 002f 0B       		.uleb128 0xb
 2753 0030 3E       		.uleb128 0x3e
 2754 0031 0B       		.uleb128 0xb
 2755 0032 03       		.uleb128 0x3
 2756 0033 08       		.uleb128 0x8
 2757 0034 00       		.byte	0
 2758 0035 00       		.byte	0
 2759 0036 05       		.uleb128 0x5
 2760 0037 35       		.uleb128 0x35
 2761 0038 00       		.byte	0
 2762 0039 49       		.uleb128 0x49
 2763 003a 13       		.uleb128 0x13
 2764 003b 00       		.byte	0
 2765 003c 00       		.byte	0
 2766 003d 06       		.uleb128 0x6
 2767 003e 04       		.uleb128 0x4
 2768 003f 01       		.byte	0x1
 2769 0040 0B       		.uleb128 0xb
 2770 0041 0B       		.uleb128 0xb
 2771 0042 3A       		.uleb128 0x3a
 2772 0043 0B       		.uleb128 0xb
 2773 0044 3B       		.uleb128 0x3b
 2774 0045 05       		.uleb128 0x5
 2775 0046 01       		.uleb128 0x1
 2776 0047 13       		.uleb128 0x13
 2777 0048 00       		.byte	0
 2778 0049 00       		.byte	0
 2779 004a 07       		.uleb128 0x7
 2780 004b 28       		.uleb128 0x28
 2781 004c 00       		.byte	0
 2782 004d 03       		.uleb128 0x3
 2783 004e 0E       		.uleb128 0xe
 2784 004f 1C       		.uleb128 0x1c
 2785 0050 0D       		.uleb128 0xd
 2786 0051 00       		.byte	0
 2787 0052 00       		.byte	0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 76


 2788 0053 08       		.uleb128 0x8
 2789 0054 28       		.uleb128 0x28
 2790 0055 00       		.byte	0
 2791 0056 03       		.uleb128 0x3
 2792 0057 08       		.uleb128 0x8
 2793 0058 1C       		.uleb128 0x1c
 2794 0059 0D       		.uleb128 0xd
 2795 005a 00       		.byte	0
 2796 005b 00       		.byte	0
 2797 005c 09       		.uleb128 0x9
 2798 005d 16       		.uleb128 0x16
 2799 005e 00       		.byte	0
 2800 005f 03       		.uleb128 0x3
 2801 0060 0E       		.uleb128 0xe
 2802 0061 3A       		.uleb128 0x3a
 2803 0062 0B       		.uleb128 0xb
 2804 0063 3B       		.uleb128 0x3b
 2805 0064 05       		.uleb128 0x5
 2806 0065 49       		.uleb128 0x49
 2807 0066 13       		.uleb128 0x13
 2808 0067 00       		.byte	0
 2809 0068 00       		.byte	0
 2810 0069 0A       		.uleb128 0xa
 2811 006a 13       		.uleb128 0x13
 2812 006b 01       		.byte	0x1
 2813 006c 0B       		.uleb128 0xb
 2814 006d 0B       		.uleb128 0xb
 2815 006e 3A       		.uleb128 0x3a
 2816 006f 0B       		.uleb128 0xb
 2817 0070 3B       		.uleb128 0x3b
 2818 0071 05       		.uleb128 0x5
 2819 0072 01       		.uleb128 0x1
 2820 0073 13       		.uleb128 0x13
 2821 0074 00       		.byte	0
 2822 0075 00       		.byte	0
 2823 0076 0B       		.uleb128 0xb
 2824 0077 0D       		.uleb128 0xd
 2825 0078 00       		.byte	0
 2826 0079 03       		.uleb128 0x3
 2827 007a 08       		.uleb128 0x8
 2828 007b 3A       		.uleb128 0x3a
 2829 007c 0B       		.uleb128 0xb
 2830 007d 3B       		.uleb128 0x3b
 2831 007e 05       		.uleb128 0x5
 2832 007f 49       		.uleb128 0x49
 2833 0080 13       		.uleb128 0x13
 2834 0081 38       		.uleb128 0x38
 2835 0082 0A       		.uleb128 0xa
 2836 0083 00       		.byte	0
 2837 0084 00       		.byte	0
 2838 0085 0C       		.uleb128 0xc
 2839 0086 0D       		.uleb128 0xd
 2840 0087 00       		.byte	0
 2841 0088 03       		.uleb128 0x3
 2842 0089 0E       		.uleb128 0xe
 2843 008a 3A       		.uleb128 0x3a
 2844 008b 0B       		.uleb128 0xb
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 77


 2845 008c 3B       		.uleb128 0x3b
 2846 008d 05       		.uleb128 0x5
 2847 008e 49       		.uleb128 0x49
 2848 008f 13       		.uleb128 0x13
 2849 0090 38       		.uleb128 0x38
 2850 0091 0A       		.uleb128 0xa
 2851 0092 00       		.byte	0
 2852 0093 00       		.byte	0
 2853 0094 0D       		.uleb128 0xd
 2854 0095 13       		.uleb128 0x13
 2855 0096 01       		.byte	0x1
 2856 0097 0B       		.uleb128 0xb
 2857 0098 0B       		.uleb128 0xb
 2858 0099 3A       		.uleb128 0x3a
 2859 009a 0B       		.uleb128 0xb
 2860 009b 3B       		.uleb128 0x3b
 2861 009c 0B       		.uleb128 0xb
 2862 009d 01       		.uleb128 0x1
 2863 009e 13       		.uleb128 0x13
 2864 009f 00       		.byte	0
 2865 00a0 00       		.byte	0
 2866 00a1 0E       		.uleb128 0xe
 2867 00a2 0D       		.uleb128 0xd
 2868 00a3 00       		.byte	0
 2869 00a4 03       		.uleb128 0x3
 2870 00a5 0E       		.uleb128 0xe
 2871 00a6 3A       		.uleb128 0x3a
 2872 00a7 0B       		.uleb128 0xb
 2873 00a8 3B       		.uleb128 0x3b
 2874 00a9 0B       		.uleb128 0xb
 2875 00aa 49       		.uleb128 0x49
 2876 00ab 13       		.uleb128 0x13
 2877 00ac 38       		.uleb128 0x38
 2878 00ad 0A       		.uleb128 0xa
 2879 00ae 00       		.byte	0
 2880 00af 00       		.byte	0
 2881 00b0 0F       		.uleb128 0xf
 2882 00b1 2E       		.uleb128 0x2e
 2883 00b2 01       		.byte	0x1
 2884 00b3 3F       		.uleb128 0x3f
 2885 00b4 0C       		.uleb128 0xc
 2886 00b5 03       		.uleb128 0x3
 2887 00b6 0E       		.uleb128 0xe
 2888 00b7 3A       		.uleb128 0x3a
 2889 00b8 0B       		.uleb128 0xb
 2890 00b9 3B       		.uleb128 0x3b
 2891 00ba 0B       		.uleb128 0xb
 2892 00bb 27       		.uleb128 0x27
 2893 00bc 0C       		.uleb128 0xc
 2894 00bd 11       		.uleb128 0x11
 2895 00be 01       		.uleb128 0x1
 2896 00bf 12       		.uleb128 0x12
 2897 00c0 01       		.uleb128 0x1
 2898 00c1 40       		.uleb128 0x40
 2899 00c2 06       		.uleb128 0x6
 2900 00c3 9742     		.uleb128 0x2117
 2901 00c5 0C       		.uleb128 0xc
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 78


 2902 00c6 01       		.uleb128 0x1
 2903 00c7 13       		.uleb128 0x13
 2904 00c8 00       		.byte	0
 2905 00c9 00       		.byte	0
 2906 00ca 10       		.uleb128 0x10
 2907 00cb 05       		.uleb128 0x5
 2908 00cc 00       		.byte	0
 2909 00cd 03       		.uleb128 0x3
 2910 00ce 0E       		.uleb128 0xe
 2911 00cf 3A       		.uleb128 0x3a
 2912 00d0 0B       		.uleb128 0xb
 2913 00d1 3B       		.uleb128 0x3b
 2914 00d2 0B       		.uleb128 0xb
 2915 00d3 49       		.uleb128 0x49
 2916 00d4 13       		.uleb128 0x13
 2917 00d5 02       		.uleb128 0x2
 2918 00d6 06       		.uleb128 0x6
 2919 00d7 00       		.byte	0
 2920 00d8 00       		.byte	0
 2921 00d9 11       		.uleb128 0x11
 2922 00da 898201   		.uleb128 0x4109
 2923 00dd 01       		.byte	0x1
 2924 00de 11       		.uleb128 0x11
 2925 00df 01       		.uleb128 0x1
 2926 00e0 31       		.uleb128 0x31
 2927 00e1 13       		.uleb128 0x13
 2928 00e2 01       		.uleb128 0x1
 2929 00e3 13       		.uleb128 0x13
 2930 00e4 00       		.byte	0
 2931 00e5 00       		.byte	0
 2932 00e6 12       		.uleb128 0x12
 2933 00e7 8A8201   		.uleb128 0x410a
 2934 00ea 00       		.byte	0
 2935 00eb 02       		.uleb128 0x2
 2936 00ec 0A       		.uleb128 0xa
 2937 00ed 9142     		.uleb128 0x2111
 2938 00ef 0A       		.uleb128 0xa
 2939 00f0 00       		.byte	0
 2940 00f1 00       		.byte	0
 2941 00f2 13       		.uleb128 0x13
 2942 00f3 898201   		.uleb128 0x4109
 2943 00f6 01       		.byte	0x1
 2944 00f7 11       		.uleb128 0x11
 2945 00f8 01       		.uleb128 0x1
 2946 00f9 9542     		.uleb128 0x2115
 2947 00fb 0C       		.uleb128 0xc
 2948 00fc 31       		.uleb128 0x31
 2949 00fd 13       		.uleb128 0x13
 2950 00fe 01       		.uleb128 0x1
 2951 00ff 13       		.uleb128 0x13
 2952 0100 00       		.byte	0
 2953 0101 00       		.byte	0
 2954 0102 14       		.uleb128 0x14
 2955 0103 898201   		.uleb128 0x4109
 2956 0106 01       		.byte	0x1
 2957 0107 11       		.uleb128 0x11
 2958 0108 01       		.uleb128 0x1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 79


 2959 0109 9542     		.uleb128 0x2115
 2960 010b 0C       		.uleb128 0xc
 2961 010c 31       		.uleb128 0x31
 2962 010d 13       		.uleb128 0x13
 2963 010e 00       		.byte	0
 2964 010f 00       		.byte	0
 2965 0110 15       		.uleb128 0x15
 2966 0111 0F       		.uleb128 0xf
 2967 0112 00       		.byte	0
 2968 0113 0B       		.uleb128 0xb
 2969 0114 0B       		.uleb128 0xb
 2970 0115 49       		.uleb128 0x49
 2971 0116 13       		.uleb128 0x13
 2972 0117 00       		.byte	0
 2973 0118 00       		.byte	0
 2974 0119 16       		.uleb128 0x16
 2975 011a 34       		.uleb128 0x34
 2976 011b 00       		.byte	0
 2977 011c 03       		.uleb128 0x3
 2978 011d 0E       		.uleb128 0xe
 2979 011e 3A       		.uleb128 0x3a
 2980 011f 0B       		.uleb128 0xb
 2981 0120 3B       		.uleb128 0x3b
 2982 0121 0B       		.uleb128 0xb
 2983 0122 49       		.uleb128 0x49
 2984 0123 13       		.uleb128 0x13
 2985 0124 02       		.uleb128 0x2
 2986 0125 06       		.uleb128 0x6
 2987 0126 00       		.byte	0
 2988 0127 00       		.byte	0
 2989 0128 17       		.uleb128 0x17
 2990 0129 34       		.uleb128 0x34
 2991 012a 00       		.byte	0
 2992 012b 03       		.uleb128 0x3
 2993 012c 0E       		.uleb128 0xe
 2994 012d 3A       		.uleb128 0x3a
 2995 012e 0B       		.uleb128 0xb
 2996 012f 3B       		.uleb128 0x3b
 2997 0130 0B       		.uleb128 0xb
 2998 0131 49       		.uleb128 0x49
 2999 0132 13       		.uleb128 0x13
 3000 0133 02       		.uleb128 0x2
 3001 0134 0A       		.uleb128 0xa
 3002 0135 00       		.byte	0
 3003 0136 00       		.byte	0
 3004 0137 18       		.uleb128 0x18
 3005 0138 898201   		.uleb128 0x4109
 3006 013b 01       		.byte	0x1
 3007 013c 11       		.uleb128 0x11
 3008 013d 01       		.uleb128 0x1
 3009 013e 31       		.uleb128 0x31
 3010 013f 13       		.uleb128 0x13
 3011 0140 00       		.byte	0
 3012 0141 00       		.byte	0
 3013 0142 19       		.uleb128 0x19
 3014 0143 2E       		.uleb128 0x2e
 3015 0144 01       		.byte	0x1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 80


 3016 0145 3F       		.uleb128 0x3f
 3017 0146 0C       		.uleb128 0xc
 3018 0147 03       		.uleb128 0x3
 3019 0148 0E       		.uleb128 0xe
 3020 0149 3A       		.uleb128 0x3a
 3021 014a 0B       		.uleb128 0xb
 3022 014b 3B       		.uleb128 0x3b
 3023 014c 05       		.uleb128 0x5
 3024 014d 27       		.uleb128 0x27
 3025 014e 0C       		.uleb128 0xc
 3026 014f 11       		.uleb128 0x11
 3027 0150 01       		.uleb128 0x1
 3028 0151 12       		.uleb128 0x12
 3029 0152 01       		.uleb128 0x1
 3030 0153 40       		.uleb128 0x40
 3031 0154 0A       		.uleb128 0xa
 3032 0155 9742     		.uleb128 0x2117
 3033 0157 0C       		.uleb128 0xc
 3034 0158 01       		.uleb128 0x1
 3035 0159 13       		.uleb128 0x13
 3036 015a 00       		.byte	0
 3037 015b 00       		.byte	0
 3038 015c 1A       		.uleb128 0x1a
 3039 015d 05       		.uleb128 0x5
 3040 015e 00       		.byte	0
 3041 015f 03       		.uleb128 0x3
 3042 0160 0E       		.uleb128 0xe
 3043 0161 3A       		.uleb128 0x3a
 3044 0162 0B       		.uleb128 0xb
 3045 0163 3B       		.uleb128 0x3b
 3046 0164 05       		.uleb128 0x5
 3047 0165 49       		.uleb128 0x49
 3048 0166 13       		.uleb128 0x13
 3049 0167 02       		.uleb128 0x2
 3050 0168 0A       		.uleb128 0xa
 3051 0169 00       		.byte	0
 3052 016a 00       		.byte	0
 3053 016b 1B       		.uleb128 0x1b
 3054 016c 2E       		.uleb128 0x2e
 3055 016d 01       		.byte	0x1
 3056 016e 3F       		.uleb128 0x3f
 3057 016f 0C       		.uleb128 0xc
 3058 0170 03       		.uleb128 0x3
 3059 0171 0E       		.uleb128 0xe
 3060 0172 3A       		.uleb128 0x3a
 3061 0173 0B       		.uleb128 0xb
 3062 0174 3B       		.uleb128 0x3b
 3063 0175 05       		.uleb128 0x5
 3064 0176 27       		.uleb128 0x27
 3065 0177 0C       		.uleb128 0xc
 3066 0178 11       		.uleb128 0x11
 3067 0179 01       		.uleb128 0x1
 3068 017a 12       		.uleb128 0x12
 3069 017b 01       		.uleb128 0x1
 3070 017c 40       		.uleb128 0x40
 3071 017d 06       		.uleb128 0x6
 3072 017e 9742     		.uleb128 0x2117
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 81


 3073 0180 0C       		.uleb128 0xc
 3074 0181 01       		.uleb128 0x1
 3075 0182 13       		.uleb128 0x13
 3076 0183 00       		.byte	0
 3077 0184 00       		.byte	0
 3078 0185 1C       		.uleb128 0x1c
 3079 0186 05       		.uleb128 0x5
 3080 0187 00       		.byte	0
 3081 0188 03       		.uleb128 0x3
 3082 0189 0E       		.uleb128 0xe
 3083 018a 3A       		.uleb128 0x3a
 3084 018b 0B       		.uleb128 0xb
 3085 018c 3B       		.uleb128 0x3b
 3086 018d 05       		.uleb128 0x5
 3087 018e 49       		.uleb128 0x49
 3088 018f 13       		.uleb128 0x13
 3089 0190 02       		.uleb128 0x2
 3090 0191 06       		.uleb128 0x6
 3091 0192 00       		.byte	0
 3092 0193 00       		.byte	0
 3093 0194 1D       		.uleb128 0x1d
 3094 0195 34       		.uleb128 0x34
 3095 0196 00       		.byte	0
 3096 0197 03       		.uleb128 0x3
 3097 0198 0E       		.uleb128 0xe
 3098 0199 3A       		.uleb128 0x3a
 3099 019a 0B       		.uleb128 0xb
 3100 019b 3B       		.uleb128 0x3b
 3101 019c 05       		.uleb128 0x5
 3102 019d 49       		.uleb128 0x49
 3103 019e 13       		.uleb128 0x13
 3104 019f 02       		.uleb128 0x2
 3105 01a0 06       		.uleb128 0x6
 3106 01a1 00       		.byte	0
 3107 01a2 00       		.byte	0
 3108 01a3 1E       		.uleb128 0x1e
 3109 01a4 2E       		.uleb128 0x2e
 3110 01a5 01       		.byte	0x1
 3111 01a6 3F       		.uleb128 0x3f
 3112 01a7 0C       		.uleb128 0xc
 3113 01a8 03       		.uleb128 0x3
 3114 01a9 0E       		.uleb128 0xe
 3115 01aa 3A       		.uleb128 0x3a
 3116 01ab 0B       		.uleb128 0xb
 3117 01ac 3B       		.uleb128 0x3b
 3118 01ad 05       		.uleb128 0x5
 3119 01ae 27       		.uleb128 0x27
 3120 01af 0C       		.uleb128 0xc
 3121 01b0 49       		.uleb128 0x49
 3122 01b1 13       		.uleb128 0x13
 3123 01b2 11       		.uleb128 0x11
 3124 01b3 01       		.uleb128 0x1
 3125 01b4 12       		.uleb128 0x12
 3126 01b5 01       		.uleb128 0x1
 3127 01b6 40       		.uleb128 0x40
 3128 01b7 0A       		.uleb128 0xa
 3129 01b8 9742     		.uleb128 0x2117
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 82


 3130 01ba 0C       		.uleb128 0xc
 3131 01bb 01       		.uleb128 0x1
 3132 01bc 13       		.uleb128 0x13
 3133 01bd 00       		.byte	0
 3134 01be 00       		.byte	0
 3135 01bf 1F       		.uleb128 0x1f
 3136 01c0 34       		.uleb128 0x34
 3137 01c1 00       		.byte	0
 3138 01c2 03       		.uleb128 0x3
 3139 01c3 0E       		.uleb128 0xe
 3140 01c4 3A       		.uleb128 0x3a
 3141 01c5 0B       		.uleb128 0xb
 3142 01c6 3B       		.uleb128 0x3b
 3143 01c7 05       		.uleb128 0x5
 3144 01c8 49       		.uleb128 0x49
 3145 01c9 13       		.uleb128 0x13
 3146 01ca 02       		.uleb128 0x2
 3147 01cb 0A       		.uleb128 0xa
 3148 01cc 00       		.byte	0
 3149 01cd 00       		.byte	0
 3150 01ce 20       		.uleb128 0x20
 3151 01cf 2E       		.uleb128 0x2e
 3152 01d0 01       		.byte	0x1
 3153 01d1 3F       		.uleb128 0x3f
 3154 01d2 0C       		.uleb128 0xc
 3155 01d3 03       		.uleb128 0x3
 3156 01d4 0E       		.uleb128 0xe
 3157 01d5 3A       		.uleb128 0x3a
 3158 01d6 0B       		.uleb128 0xb
 3159 01d7 3B       		.uleb128 0x3b
 3160 01d8 05       		.uleb128 0x5
 3161 01d9 27       		.uleb128 0x27
 3162 01da 0C       		.uleb128 0xc
 3163 01db 49       		.uleb128 0x49
 3164 01dc 13       		.uleb128 0x13
 3165 01dd 11       		.uleb128 0x11
 3166 01de 01       		.uleb128 0x1
 3167 01df 12       		.uleb128 0x12
 3168 01e0 01       		.uleb128 0x1
 3169 01e1 40       		.uleb128 0x40
 3170 01e2 06       		.uleb128 0x6
 3171 01e3 9742     		.uleb128 0x2117
 3172 01e5 0C       		.uleb128 0xc
 3173 01e6 01       		.uleb128 0x1
 3174 01e7 13       		.uleb128 0x13
 3175 01e8 00       		.byte	0
 3176 01e9 00       		.byte	0
 3177 01ea 21       		.uleb128 0x21
 3178 01eb 34       		.uleb128 0x34
 3179 01ec 00       		.byte	0
 3180 01ed 03       		.uleb128 0x3
 3181 01ee 0E       		.uleb128 0xe
 3182 01ef 3A       		.uleb128 0x3a
 3183 01f0 0B       		.uleb128 0xb
 3184 01f1 3B       		.uleb128 0x3b
 3185 01f2 05       		.uleb128 0x5
 3186 01f3 49       		.uleb128 0x49
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 83


 3187 01f4 13       		.uleb128 0x13
 3188 01f5 00       		.byte	0
 3189 01f6 00       		.byte	0
 3190 01f7 22       		.uleb128 0x22
 3191 01f8 34       		.uleb128 0x34
 3192 01f9 00       		.byte	0
 3193 01fa 03       		.uleb128 0x3
 3194 01fb 0E       		.uleb128 0xe
 3195 01fc 3A       		.uleb128 0x3a
 3196 01fd 0B       		.uleb128 0xb
 3197 01fe 3B       		.uleb128 0x3b
 3198 01ff 05       		.uleb128 0x5
 3199 0200 49       		.uleb128 0x49
 3200 0201 13       		.uleb128 0x13
 3201 0202 3F       		.uleb128 0x3f
 3202 0203 0C       		.uleb128 0xc
 3203 0204 3C       		.uleb128 0x3c
 3204 0205 0C       		.uleb128 0xc
 3205 0206 00       		.byte	0
 3206 0207 00       		.byte	0
 3207 0208 23       		.uleb128 0x23
 3208 0209 2E       		.uleb128 0x2e
 3209 020a 01       		.byte	0x1
 3210 020b 3F       		.uleb128 0x3f
 3211 020c 0C       		.uleb128 0xc
 3212 020d 03       		.uleb128 0x3
 3213 020e 0E       		.uleb128 0xe
 3214 020f 3A       		.uleb128 0x3a
 3215 0210 0B       		.uleb128 0xb
 3216 0211 3B       		.uleb128 0x3b
 3217 0212 05       		.uleb128 0x5
 3218 0213 27       		.uleb128 0x27
 3219 0214 0C       		.uleb128 0xc
 3220 0215 3C       		.uleb128 0x3c
 3221 0216 0C       		.uleb128 0xc
 3222 0217 01       		.uleb128 0x1
 3223 0218 13       		.uleb128 0x13
 3224 0219 00       		.byte	0
 3225 021a 00       		.byte	0
 3226 021b 24       		.uleb128 0x24
 3227 021c 05       		.uleb128 0x5
 3228 021d 00       		.byte	0
 3229 021e 49       		.uleb128 0x49
 3230 021f 13       		.uleb128 0x13
 3231 0220 00       		.byte	0
 3232 0221 00       		.byte	0
 3233 0222 00       		.byte	0
 3234              		.section	.debug_loc,"",%progbits
 3235              	.Ldebug_loc0:
 3236              	.LLST0:
 3237 0000 00000000 		.4byte	.LFB110-.Ltext0
 3238 0004 02000000 		.4byte	.LCFI0-.Ltext0
 3239 0008 0200     		.2byte	0x2
 3240 000a 7D       		.byte	0x7d
 3241 000b 00       		.sleb128 0
 3242 000c 02000000 		.4byte	.LCFI0-.Ltext0
 3243 0010 A8000000 		.4byte	.LFE110-.Ltext0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 84


 3244 0014 0200     		.2byte	0x2
 3245 0016 7D       		.byte	0x7d
 3246 0017 08       		.sleb128 8
 3247 0018 00000000 		.4byte	0
 3248 001c 00000000 		.4byte	0
 3249              	.LLST1:
 3250 0020 00000000 		.4byte	.LVL0-.Ltext0
 3251 0024 0A000000 		.4byte	.LVL1-.Ltext0
 3252 0028 0100     		.2byte	0x1
 3253 002a 50       		.byte	0x50
 3254 002b 0A000000 		.4byte	.LVL1-.Ltext0
 3255 002f 14000000 		.4byte	.LVL3-.Ltext0
 3256 0033 0400     		.2byte	0x4
 3257 0035 F3       		.byte	0xf3
 3258 0036 01       		.uleb128 0x1
 3259 0037 50       		.byte	0x50
 3260 0038 9F       		.byte	0x9f
 3261 0039 14000000 		.4byte	.LVL3-.Ltext0
 3262 003d 1E000000 		.4byte	.LVL4-.Ltext0
 3263 0041 0100     		.2byte	0x1
 3264 0043 50       		.byte	0x50
 3265 0044 1E000000 		.4byte	.LVL4-.Ltext0
 3266 0048 2A000000 		.4byte	.LVL6-.Ltext0
 3267 004c 0400     		.2byte	0x4
 3268 004e F3       		.byte	0xf3
 3269 004f 01       		.uleb128 0x1
 3270 0050 50       		.byte	0x50
 3271 0051 9F       		.byte	0x9f
 3272 0052 2A000000 		.4byte	.LVL6-.Ltext0
 3273 0056 34000000 		.4byte	.LVL7-.Ltext0
 3274 005a 0100     		.2byte	0x1
 3275 005c 50       		.byte	0x50
 3276 005d 34000000 		.4byte	.LVL7-.Ltext0
 3277 0061 48000000 		.4byte	.LVL9-.Ltext0
 3278 0065 0400     		.2byte	0x4
 3279 0067 F3       		.byte	0xf3
 3280 0068 01       		.uleb128 0x1
 3281 0069 50       		.byte	0x50
 3282 006a 9F       		.byte	0x9f
 3283 006b 48000000 		.4byte	.LVL9-.Ltext0
 3284 006f 52000000 		.4byte	.LVL10-.Ltext0
 3285 0073 0100     		.2byte	0x1
 3286 0075 50       		.byte	0x50
 3287 0076 52000000 		.4byte	.LVL10-.Ltext0
 3288 007a 5E000000 		.4byte	.LVL12-.Ltext0
 3289 007e 0400     		.2byte	0x4
 3290 0080 F3       		.byte	0xf3
 3291 0081 01       		.uleb128 0x1
 3292 0082 50       		.byte	0x50
 3293 0083 9F       		.byte	0x9f
 3294 0084 5E000000 		.4byte	.LVL12-.Ltext0
 3295 0088 68000000 		.4byte	.LVL13-.Ltext0
 3296 008c 0100     		.2byte	0x1
 3297 008e 50       		.byte	0x50
 3298 008f 68000000 		.4byte	.LVL13-.Ltext0
 3299 0093 74000000 		.4byte	.LVL15-.Ltext0
 3300 0097 0400     		.2byte	0x4
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 85


 3301 0099 F3       		.byte	0xf3
 3302 009a 01       		.uleb128 0x1
 3303 009b 50       		.byte	0x50
 3304 009c 9F       		.byte	0x9f
 3305 009d 74000000 		.4byte	.LVL15-.Ltext0
 3306 00a1 7C000000 		.4byte	.LVL16-.Ltext0
 3307 00a5 0100     		.2byte	0x1
 3308 00a7 50       		.byte	0x50
 3309 00a8 7C000000 		.4byte	.LVL16-.Ltext0
 3310 00ac 8E000000 		.4byte	.LVL18-.Ltext0
 3311 00b0 0400     		.2byte	0x4
 3312 00b2 F3       		.byte	0xf3
 3313 00b3 01       		.uleb128 0x1
 3314 00b4 50       		.byte	0x50
 3315 00b5 9F       		.byte	0x9f
 3316 00b6 8E000000 		.4byte	.LVL18-.Ltext0
 3317 00ba A8000000 		.4byte	.LFE110-.Ltext0
 3318 00be 0100     		.2byte	0x1
 3319 00c0 50       		.byte	0x50
 3320 00c1 00000000 		.4byte	0
 3321 00c5 00000000 		.4byte	0
 3322              	.LLST2:
 3323 00c9 A8000000 		.4byte	.LFB111-.Ltext0
 3324 00cd B4000000 		.4byte	.LCFI1-.Ltext0
 3325 00d1 0200     		.2byte	0x2
 3326 00d3 7D       		.byte	0x7d
 3327 00d4 00       		.sleb128 0
 3328 00d5 B4000000 		.4byte	.LCFI1-.Ltext0
 3329 00d9 E6000000 		.4byte	.LCFI2-.Ltext0
 3330 00dd 0200     		.2byte	0x2
 3331 00df 7D       		.byte	0x7d
 3332 00e0 0C       		.sleb128 12
 3333 00e1 E6000000 		.4byte	.LCFI2-.Ltext0
 3334 00e5 5C010000 		.4byte	.LFE111-.Ltext0
 3335 00e9 0200     		.2byte	0x2
 3336 00eb 7D       		.byte	0x7d
 3337 00ec 20       		.sleb128 32
 3338 00ed 00000000 		.4byte	0
 3339 00f1 00000000 		.4byte	0
 3340              	.LLST3:
 3341 00f5 A8000000 		.4byte	.LVL19-.Ltext0
 3342 00f9 EC000000 		.4byte	.LVL29-.Ltext0
 3343 00fd 0100     		.2byte	0x1
 3344 00ff 50       		.byte	0x50
 3345 0100 EC000000 		.4byte	.LVL29-.Ltext0
 3346 0104 5C010000 		.4byte	.LFE111-.Ltext0
 3347 0108 0100     		.2byte	0x1
 3348 010a 54       		.byte	0x54
 3349 010b 00000000 		.4byte	0
 3350 010f 00000000 		.4byte	0
 3351              	.LLST4:
 3352 0113 A8000000 		.4byte	.LVL19-.Ltext0
 3353 0117 BE000000 		.4byte	.LVL24-.Ltext0
 3354 011b 0100     		.2byte	0x1
 3355 011d 51       		.byte	0x51
 3356 011e BE000000 		.4byte	.LVL24-.Ltext0
 3357 0122 5C010000 		.4byte	.LFE111-.Ltext0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 86


 3358 0126 0100     		.2byte	0x1
 3359 0128 55       		.byte	0x55
 3360 0129 00000000 		.4byte	0
 3361 012d 00000000 		.4byte	0
 3362              	.LLST5:
 3363 0131 A8000000 		.4byte	.LVL19-.Ltext0
 3364 0135 AE000000 		.4byte	.LVL20-.Ltext0
 3365 0139 0200     		.2byte	0x2
 3366 013b 30       		.byte	0x30
 3367 013c 9F       		.byte	0x9f
 3368 013d AE000000 		.4byte	.LVL20-.Ltext0
 3369 0141 B2000000 		.4byte	.LVL21-.Ltext0
 3370 0145 0100     		.2byte	0x1
 3371 0147 53       		.byte	0x53
 3372 0148 B2000000 		.4byte	.LVL21-.Ltext0
 3373 014c B6000000 		.4byte	.LVL22-.Ltext0
 3374 0150 0C00     		.2byte	0xc
 3375 0152 71       		.byte	0x71
 3376 0153 06       		.sleb128 6
 3377 0154 94       		.byte	0x94
 3378 0155 02       		.byte	0x2
 3379 0156 0A       		.byte	0xa
 3380 0157 FFFF     		.2byte	0xffff
 3381 0159 1A       		.byte	0x1a
 3382 015a 73       		.byte	0x73
 3383 015b 00       		.sleb128 0
 3384 015c 21       		.byte	0x21
 3385 015d 9F       		.byte	0x9f
 3386 015e B6000000 		.4byte	.LVL22-.Ltext0
 3387 0162 BC000000 		.4byte	.LVL23-.Ltext0
 3388 0166 0100     		.2byte	0x1
 3389 0168 53       		.byte	0x53
 3390 0169 BC000000 		.4byte	.LVL23-.Ltext0
 3391 016d C4000000 		.4byte	.LVL25-.Ltext0
 3392 0171 0700     		.2byte	0x7
 3393 0173 73       		.byte	0x73
 3394 0174 00       		.sleb128 0
 3395 0175 0A       		.byte	0xa
 3396 0176 FFFF     		.2byte	0xffff
 3397 0178 1A       		.byte	0x1a
 3398 0179 9F       		.byte	0x9f
 3399 017a DE000000 		.4byte	.LVL26-.Ltext0
 3400 017e E2000000 		.4byte	.LVL27-.Ltext0
 3401 0182 0100     		.2byte	0x1
 3402 0184 53       		.byte	0x53
 3403 0185 E2000000 		.4byte	.LVL27-.Ltext0
 3404 0189 E4000000 		.4byte	.LVL28-.Ltext0
 3405 018d 0C00     		.2byte	0xc
 3406 018f 75       		.byte	0x75
 3407 0190 0C       		.sleb128 12
 3408 0191 94       		.byte	0x94
 3409 0192 02       		.byte	0x2
 3410 0193 0A       		.byte	0xa
 3411 0194 FFFF     		.2byte	0xffff
 3412 0196 1A       		.byte	0x1a
 3413 0197 73       		.byte	0x73
 3414 0198 00       		.sleb128 0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 87


 3415 0199 21       		.byte	0x21
 3416 019a 9F       		.byte	0x9f
 3417 019b E4000000 		.4byte	.LVL28-.Ltext0
 3418 019f EF000000 		.4byte	.LVL30-1-.Ltext0
 3419 01a3 0100     		.2byte	0x1
 3420 01a5 53       		.byte	0x53
 3421 01a6 28010000 		.4byte	.LVL36-.Ltext0
 3422 01aa 5C010000 		.4byte	.LFE111-.Ltext0
 3423 01ae 0100     		.2byte	0x1
 3424 01b0 52       		.byte	0x52
 3425 01b1 00000000 		.4byte	0
 3426 01b5 00000000 		.4byte	0
 3427              	.LLST6:
 3428 01b9 A8000000 		.4byte	.LVL19-.Ltext0
 3429 01bd 00010000 		.4byte	.LVL31-.Ltext0
 3430 01c1 0200     		.2byte	0x2
 3431 01c3 30       		.byte	0x30
 3432 01c4 9F       		.byte	0x9f
 3433 01c5 00010000 		.4byte	.LVL31-.Ltext0
 3434 01c9 02010000 		.4byte	.LVL32-.Ltext0
 3435 01cd 0100     		.2byte	0x1
 3436 01cf 53       		.byte	0x53
 3437 01d0 02010000 		.4byte	.LVL32-.Ltext0
 3438 01d4 04010000 		.4byte	.LVL33-.Ltext0
 3439 01d8 0200     		.2byte	0x2
 3440 01da 30       		.byte	0x30
 3441 01db 9F       		.byte	0x9f
 3442 01dc 04010000 		.4byte	.LVL33-.Ltext0
 3443 01e0 1E010000 		.4byte	.LVL34-.Ltext0
 3444 01e4 0100     		.2byte	0x1
 3445 01e6 53       		.byte	0x53
 3446 01e7 00000000 		.4byte	0
 3447 01eb 00000000 		.4byte	0
 3448              	.LLST7:
 3449 01ef A8000000 		.4byte	.LVL19-.Ltext0
 3450 01f3 22010000 		.4byte	.LVL35-.Ltext0
 3451 01f7 0200     		.2byte	0x2
 3452 01f9 30       		.byte	0x30
 3453 01fa 9F       		.byte	0x9f
 3454 01fb 22010000 		.4byte	.LVL35-.Ltext0
 3455 01ff 2E010000 		.4byte	.LVL37-.Ltext0
 3456 0203 0100     		.2byte	0x1
 3457 0205 51       		.byte	0x51
 3458 0206 00000000 		.4byte	0
 3459 020a 00000000 		.4byte	0
 3460              	.LLST8:
 3461 020e A8000000 		.4byte	.LVL19-.Ltext0
 3462 0212 2E010000 		.4byte	.LVL37-.Ltext0
 3463 0216 0200     		.2byte	0x2
 3464 0218 30       		.byte	0x30
 3465 0219 9F       		.byte	0x9f
 3466 021a 2E010000 		.4byte	.LVL37-.Ltext0
 3467 021e 38010000 		.4byte	.LVL38-.Ltext0
 3468 0222 0100     		.2byte	0x1
 3469 0224 51       		.byte	0x51
 3470 0225 44010000 		.4byte	.LVL39-.Ltext0
 3471 0229 46010000 		.4byte	.LVL40-.Ltext0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 88


 3472 022d 0100     		.2byte	0x1
 3473 022f 51       		.byte	0x51
 3474 0230 00000000 		.4byte	0
 3475 0234 00000000 		.4byte	0
 3476              	.LLST9:
 3477 0238 72010000 		.4byte	.LFB113-.Ltext0
 3478 023c 78010000 		.4byte	.LCFI3-.Ltext0
 3479 0240 0200     		.2byte	0x2
 3480 0242 7D       		.byte	0x7d
 3481 0243 00       		.sleb128 0
 3482 0244 78010000 		.4byte	.LCFI3-.Ltext0
 3483 0248 92010000 		.4byte	.LFE113-.Ltext0
 3484 024c 0200     		.2byte	0x2
 3485 024e 7D       		.byte	0x7d
 3486 024f 08       		.sleb128 8
 3487 0250 00000000 		.4byte	0
 3488 0254 00000000 		.4byte	0
 3489              	.LLST10:
 3490 0258 72010000 		.4byte	.LVL43-.Ltext0
 3491 025c 80010000 		.4byte	.LVL44-.Ltext0
 3492 0260 0100     		.2byte	0x1
 3493 0262 51       		.byte	0x51
 3494 0263 80010000 		.4byte	.LVL44-.Ltext0
 3495 0267 92010000 		.4byte	.LFE113-.Ltext0
 3496 026b 0400     		.2byte	0x4
 3497 026d F3       		.byte	0xf3
 3498 026e 01       		.uleb128 0x1
 3499 026f 51       		.byte	0x51
 3500 0270 9F       		.byte	0x9f
 3501 0271 00000000 		.4byte	0
 3502 0275 00000000 		.4byte	0
 3503              	.LLST11:
 3504 0279 72010000 		.4byte	.LVL43-.Ltext0
 3505 027d 84010000 		.4byte	.LVL45-.Ltext0
 3506 0281 0200     		.2byte	0x2
 3507 0283 30       		.byte	0x30
 3508 0284 9F       		.byte	0x9f
 3509 0285 84010000 		.4byte	.LVL45-.Ltext0
 3510 0289 8A010000 		.4byte	.LVL46-.Ltext0
 3511 028d 0100     		.2byte	0x1
 3512 028f 52       		.byte	0x52
 3513 0290 00000000 		.4byte	0
 3514 0294 00000000 		.4byte	0
 3515              	.LLST12:
 3516 0298 B6010000 		.4byte	.LVL49-.Ltext0
 3517 029c C4010000 		.4byte	.LVL50-.Ltext0
 3518 02a0 0100     		.2byte	0x1
 3519 02a2 51       		.byte	0x51
 3520 02a3 C4010000 		.4byte	.LVL50-.Ltext0
 3521 02a7 C8010000 		.4byte	.LFE116-.Ltext0
 3522 02ab 0400     		.2byte	0x4
 3523 02ad F3       		.byte	0xf3
 3524 02ae 01       		.uleb128 0x1
 3525 02af 51       		.byte	0x51
 3526 02b0 9F       		.byte	0x9f
 3527 02b1 00000000 		.4byte	0
 3528 02b5 00000000 		.4byte	0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 89


 3529              	.LLST13:
 3530 02b9 F6010000 		.4byte	.LVL53-.Ltext0
 3531 02bd F8010000 		.4byte	.LVL54-.Ltext0
 3532 02c1 0100     		.2byte	0x1
 3533 02c3 51       		.byte	0x51
 3534 02c4 F8010000 		.4byte	.LVL54-.Ltext0
 3535 02c8 FE010000 		.4byte	.LFE119-.Ltext0
 3536 02cc 0400     		.2byte	0x4
 3537 02ce F3       		.byte	0xf3
 3538 02cf 01       		.uleb128 0x1
 3539 02d0 51       		.byte	0x51
 3540 02d1 9F       		.byte	0x9f
 3541 02d2 00000000 		.4byte	0
 3542 02d6 00000000 		.4byte	0
 3543              	.LLST14:
 3544 02da FE010000 		.4byte	.LVL55-.Ltext0
 3545 02de 00020000 		.4byte	.LVL56-.Ltext0
 3546 02e2 0100     		.2byte	0x1
 3547 02e4 50       		.byte	0x50
 3548 02e5 00020000 		.4byte	.LVL56-.Ltext0
 3549 02e9 06020000 		.4byte	.LFE120-.Ltext0
 3550 02ed 0400     		.2byte	0x4
 3551 02ef F3       		.byte	0xf3
 3552 02f0 01       		.uleb128 0x1
 3553 02f1 50       		.byte	0x50
 3554 02f2 9F       		.byte	0x9f
 3555 02f3 00000000 		.4byte	0
 3556 02f7 00000000 		.4byte	0
 3557              	.LLST15:
 3558 02fb 06020000 		.4byte	.LVL57-.Ltext0
 3559 02ff 18020000 		.4byte	.LVL58-.Ltext0
 3560 0303 0100     		.2byte	0x1
 3561 0305 51       		.byte	0x51
 3562 0306 18020000 		.4byte	.LVL58-.Ltext0
 3563 030a 1C020000 		.4byte	.LFE121-.Ltext0
 3564 030e 0400     		.2byte	0x4
 3565 0310 F3       		.byte	0xf3
 3566 0311 01       		.uleb128 0x1
 3567 0312 51       		.byte	0x51
 3568 0313 9F       		.byte	0x9f
 3569 0314 00000000 		.4byte	0
 3570 0318 00000000 		.4byte	0
 3571              	.LLST16:
 3572 031c 34020000 		.4byte	.LVL60-.Ltext0
 3573 0320 46020000 		.4byte	.LVL61-.Ltext0
 3574 0324 0100     		.2byte	0x1
 3575 0326 51       		.byte	0x51
 3576 0327 46020000 		.4byte	.LVL61-.Ltext0
 3577 032b 4A020000 		.4byte	.LFE123-.Ltext0
 3578 032f 0400     		.2byte	0x4
 3579 0331 F3       		.byte	0xf3
 3580 0332 01       		.uleb128 0x1
 3581 0333 51       		.byte	0x51
 3582 0334 9F       		.byte	0x9f
 3583 0335 00000000 		.4byte	0
 3584 0339 00000000 		.4byte	0
 3585              	.LLST17:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 90


 3586 033d 4A020000 		.4byte	.LVL62-.Ltext0
 3587 0341 5C020000 		.4byte	.LVL63-.Ltext0
 3588 0345 0100     		.2byte	0x1
 3589 0347 51       		.byte	0x51
 3590 0348 5C020000 		.4byte	.LVL63-.Ltext0
 3591 034c 60020000 		.4byte	.LFE124-.Ltext0
 3592 0350 0400     		.2byte	0x4
 3593 0352 F3       		.byte	0xf3
 3594 0353 01       		.uleb128 0x1
 3595 0354 51       		.byte	0x51
 3596 0355 9F       		.byte	0x9f
 3597 0356 00000000 		.4byte	0
 3598 035a 00000000 		.4byte	0
 3599              	.LLST18:
 3600 035e 9C020000 		.4byte	.LVL67-.Ltext0
 3601 0362 AA020000 		.4byte	.LVL68-.Ltext0
 3602 0366 0100     		.2byte	0x1
 3603 0368 51       		.byte	0x51
 3604 0369 AA020000 		.4byte	.LVL68-.Ltext0
 3605 036d AE020000 		.4byte	.LFE128-.Ltext0
 3606 0371 0400     		.2byte	0x4
 3607 0373 F3       		.byte	0xf3
 3608 0374 01       		.uleb128 0x1
 3609 0375 51       		.byte	0x51
 3610 0376 9F       		.byte	0x9f
 3611 0377 00000000 		.4byte	0
 3612 037b 00000000 		.4byte	0
 3613              	.LLST19:
 3614 037f DE020000 		.4byte	.LVL71-.Ltext0
 3615 0383 F0020000 		.4byte	.LVL72-.Ltext0
 3616 0387 0100     		.2byte	0x1
 3617 0389 51       		.byte	0x51
 3618 038a F0020000 		.4byte	.LVL72-.Ltext0
 3619 038e F4020000 		.4byte	.LFE131-.Ltext0
 3620 0392 0400     		.2byte	0x4
 3621 0394 F3       		.byte	0xf3
 3622 0395 01       		.uleb128 0x1
 3623 0396 51       		.byte	0x51
 3624 0397 9F       		.byte	0x9f
 3625 0398 00000000 		.4byte	0
 3626 039c 00000000 		.4byte	0
 3627              	.LLST20:
 3628 03a0 0C030000 		.4byte	.LVL74-.Ltext0
 3629 03a4 14030000 		.4byte	.LVL75-.Ltext0
 3630 03a8 0100     		.2byte	0x1
 3631 03aa 51       		.byte	0x51
 3632 03ab 14030000 		.4byte	.LVL75-.Ltext0
 3633 03af 16030000 		.4byte	.LVL76-.Ltext0
 3634 03b3 0400     		.2byte	0x4
 3635 03b5 F3       		.byte	0xf3
 3636 03b6 01       		.uleb128 0x1
 3637 03b7 51       		.byte	0x51
 3638 03b8 9F       		.byte	0x9f
 3639 03b9 16030000 		.4byte	.LVL76-.Ltext0
 3640 03bd 1A030000 		.4byte	.LVL77-.Ltext0
 3641 03c1 0100     		.2byte	0x1
 3642 03c3 51       		.byte	0x51
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 91


 3643 03c4 1A030000 		.4byte	.LVL77-.Ltext0
 3644 03c8 1E030000 		.4byte	.LFE133-.Ltext0
 3645 03cc 0400     		.2byte	0x4
 3646 03ce F3       		.byte	0xf3
 3647 03cf 01       		.uleb128 0x1
 3648 03d0 51       		.byte	0x51
 3649 03d1 9F       		.byte	0x9f
 3650 03d2 00000000 		.4byte	0
 3651 03d6 00000000 		.4byte	0
 3652              	.LLST21:
 3653 03da 1E030000 		.4byte	.LFB134-.Ltext0
 3654 03de 24030000 		.4byte	.LCFI4-.Ltext0
 3655 03e2 0200     		.2byte	0x2
 3656 03e4 7D       		.byte	0x7d
 3657 03e5 00       		.sleb128 0
 3658 03e6 24030000 		.4byte	.LCFI4-.Ltext0
 3659 03ea 50030000 		.4byte	.LFE134-.Ltext0
 3660 03ee 0200     		.2byte	0x2
 3661 03f0 7D       		.byte	0x7d
 3662 03f1 08       		.sleb128 8
 3663 03f2 00000000 		.4byte	0
 3664 03f6 00000000 		.4byte	0
 3665              	.LLST22:
 3666 03fa 1E030000 		.4byte	.LVL78-.Ltext0
 3667 03fe 34030000 		.4byte	.LVL82-.Ltext0
 3668 0402 0100     		.2byte	0x1
 3669 0404 50       		.byte	0x50
 3670 0405 34030000 		.4byte	.LVL82-.Ltext0
 3671 0409 36030000 		.4byte	.LVL83-.Ltext0
 3672 040d 0300     		.2byte	0x3
 3673 040f 70       		.byte	0x70
 3674 0410 74       		.sleb128 -12
 3675 0411 9F       		.byte	0x9f
 3676 0412 36030000 		.4byte	.LVL83-.Ltext0
 3677 0416 3C030000 		.4byte	.LVL84-.Ltext0
 3678 041a 0100     		.2byte	0x1
 3679 041c 50       		.byte	0x50
 3680 041d 3C030000 		.4byte	.LVL84-.Ltext0
 3681 0421 3E030000 		.4byte	.LVL85-.Ltext0
 3682 0425 0300     		.2byte	0x3
 3683 0427 70       		.byte	0x70
 3684 0428 70       		.sleb128 -16
 3685 0429 9F       		.byte	0x9f
 3686 042a 3E030000 		.4byte	.LVL85-.Ltext0
 3687 042e 40030000 		.4byte	.LVL86-.Ltext0
 3688 0432 0100     		.2byte	0x1
 3689 0434 50       		.byte	0x50
 3690 0435 40030000 		.4byte	.LVL86-.Ltext0
 3691 0439 50030000 		.4byte	.LFE134-.Ltext0
 3692 043d 0400     		.2byte	0x4
 3693 043f F3       		.byte	0xf3
 3694 0440 01       		.uleb128 0x1
 3695 0441 50       		.byte	0x50
 3696 0442 9F       		.byte	0x9f
 3697 0443 00000000 		.4byte	0
 3698 0447 00000000 		.4byte	0
 3699              	.LLST23:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 92


 3700 044b 1E030000 		.4byte	.LVL78-.Ltext0
 3701 044f 2A030000 		.4byte	.LVL80-.Ltext0
 3702 0453 0100     		.2byte	0x1
 3703 0455 51       		.byte	0x51
 3704 0456 2A030000 		.4byte	.LVL80-.Ltext0
 3705 045a 50030000 		.4byte	.LFE134-.Ltext0
 3706 045e 0400     		.2byte	0x4
 3707 0460 F3       		.byte	0xf3
 3708 0461 01       		.uleb128 0x1
 3709 0462 51       		.byte	0x51
 3710 0463 9F       		.byte	0x9f
 3711 0464 00000000 		.4byte	0
 3712 0468 00000000 		.4byte	0
 3713              	.LLST24:
 3714 046c 1E030000 		.4byte	.LVL78-.Ltext0
 3715 0470 22030000 		.4byte	.LVL79-.Ltext0
 3716 0474 0200     		.2byte	0x2
 3717 0476 30       		.byte	0x30
 3718 0477 9F       		.byte	0x9f
 3719 0478 22030000 		.4byte	.LVL79-.Ltext0
 3720 047c 42030000 		.4byte	.LVL87-.Ltext0
 3721 0480 0100     		.2byte	0x1
 3722 0482 53       		.byte	0x53
 3723 0483 00000000 		.4byte	0
 3724 0487 00000000 		.4byte	0
 3725              	.LLST25:
 3726 048b 1E030000 		.4byte	.LVL78-.Ltext0
 3727 048f 22030000 		.4byte	.LVL79-.Ltext0
 3728 0493 0200     		.2byte	0x2
 3729 0495 30       		.byte	0x30
 3730 0496 9F       		.byte	0x9f
 3731 0497 22030000 		.4byte	.LVL79-.Ltext0
 3732 049b 2A030000 		.4byte	.LVL80-.Ltext0
 3733 049f 0900     		.2byte	0x9
 3734 04a1 71       		.byte	0x71
 3735 04a2 00       		.sleb128 0
 3736 04a3 4F       		.byte	0x4f
 3737 04a4 1A       		.byte	0x1a
 3738 04a5 0A       		.byte	0xa
 3739 04a6 FFFF     		.2byte	0xffff
 3740 04a8 1A       		.byte	0x1a
 3741 04a9 9F       		.byte	0x9f
 3742 04aa 00000000 		.4byte	0
 3743 04ae 00000000 		.4byte	0
 3744              	.LLST26:
 3745 04b2 1E030000 		.4byte	.LVL78-.Ltext0
 3746 04b6 30030000 		.4byte	.LVL81-.Ltext0
 3747 04ba 0200     		.2byte	0x2
 3748 04bc 30       		.byte	0x30
 3749 04bd 9F       		.byte	0x9f
 3750 04be 30030000 		.4byte	.LVL81-.Ltext0
 3751 04c2 46030000 		.4byte	.LVL88-.Ltext0
 3752 04c6 0100     		.2byte	0x1
 3753 04c8 51       		.byte	0x51
 3754 04c9 48030000 		.4byte	.LVL89-.Ltext0
 3755 04cd 4C030000 		.4byte	.LVL90-.Ltext0
 3756 04d1 0100     		.2byte	0x1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 93


 3757 04d3 51       		.byte	0x51
 3758 04d4 00000000 		.4byte	0
 3759 04d8 00000000 		.4byte	0
 3760              	.LLST27:
 3761 04dc 50030000 		.4byte	.LVL91-.Ltext0
 3762 04e0 5A030000 		.4byte	.LVL93-.Ltext0
 3763 04e4 0100     		.2byte	0x1
 3764 04e6 50       		.byte	0x50
 3765 04e7 5A030000 		.4byte	.LVL93-.Ltext0
 3766 04eb 5C030000 		.4byte	.LFE135-.Ltext0
 3767 04ef 0400     		.2byte	0x4
 3768 04f1 F3       		.byte	0xf3
 3769 04f2 01       		.uleb128 0x1
 3770 04f3 50       		.byte	0x50
 3771 04f4 9F       		.byte	0x9f
 3772 04f5 00000000 		.4byte	0
 3773 04f9 00000000 		.4byte	0
 3774              	.LLST28:
 3775 04fd 50030000 		.4byte	.LVL91-.Ltext0
 3776 0501 52030000 		.4byte	.LVL92-.Ltext0
 3777 0505 0200     		.2byte	0x2
 3778 0507 30       		.byte	0x30
 3779 0508 9F       		.byte	0x9f
 3780 0509 52030000 		.4byte	.LVL92-.Ltext0
 3781 050d 5C030000 		.4byte	.LFE135-.Ltext0
 3782 0511 0A00     		.2byte	0xa
 3783 0513 71       		.byte	0x71
 3784 0514 00       		.sleb128 0
 3785 0515 73       		.byte	0x73
 3786 0516 00       		.sleb128 0
 3787 0517 1A       		.byte	0x1a
 3788 0518 40       		.byte	0x40
 3789 0519 24       		.byte	0x24
 3790 051a 30       		.byte	0x30
 3791 051b 2E       		.byte	0x2e
 3792 051c 9F       		.byte	0x9f
 3793 051d 00000000 		.4byte	0
 3794 0521 00000000 		.4byte	0
 3795              	.LLST29:
 3796 0525 5C030000 		.4byte	.LVL94-.Ltext0
 3797 0529 5E030000 		.4byte	.LVL95-.Ltext0
 3798 052d 0100     		.2byte	0x1
 3799 052f 51       		.byte	0x51
 3800 0530 5E030000 		.4byte	.LVL95-.Ltext0
 3801 0534 62030000 		.4byte	.LFE136-.Ltext0
 3802 0538 0400     		.2byte	0x4
 3803 053a F3       		.byte	0xf3
 3804 053b 01       		.uleb128 0x1
 3805 053c 51       		.byte	0x51
 3806 053d 9F       		.byte	0x9f
 3807 053e 00000000 		.4byte	0
 3808 0542 00000000 		.4byte	0
 3809              	.LLST30:
 3810 0546 62030000 		.4byte	.LFB137-.Ltext0
 3811 054a 64030000 		.4byte	.LCFI5-.Ltext0
 3812 054e 0200     		.2byte	0x2
 3813 0550 7D       		.byte	0x7d
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 94


 3814 0551 00       		.sleb128 0
 3815 0552 64030000 		.4byte	.LCFI5-.Ltext0
 3816 0556 A2030000 		.4byte	.LFE137-.Ltext0
 3817 055a 0200     		.2byte	0x2
 3818 055c 7D       		.byte	0x7d
 3819 055d 08       		.sleb128 8
 3820 055e 00000000 		.4byte	0
 3821 0562 00000000 		.4byte	0
 3822              	.LLST31:
 3823 0566 62030000 		.4byte	.LVL96-.Ltext0
 3824 056a 9C030000 		.4byte	.LVL103-.Ltext0
 3825 056e 0100     		.2byte	0x1
 3826 0570 50       		.byte	0x50
 3827 0571 9C030000 		.4byte	.LVL103-.Ltext0
 3828 0575 9E030000 		.4byte	.LVL104-.Ltext0
 3829 0579 0400     		.2byte	0x4
 3830 057b F3       		.byte	0xf3
 3831 057c 01       		.uleb128 0x1
 3832 057d 50       		.byte	0x50
 3833 057e 9F       		.byte	0x9f
 3834 057f 9E030000 		.4byte	.LVL104-.Ltext0
 3835 0583 A0030000 		.4byte	.LVL105-.Ltext0
 3836 0587 0100     		.2byte	0x1
 3837 0589 50       		.byte	0x50
 3838 058a A0030000 		.4byte	.LVL105-.Ltext0
 3839 058e A2030000 		.4byte	.LFE137-.Ltext0
 3840 0592 0400     		.2byte	0x4
 3841 0594 F3       		.byte	0xf3
 3842 0595 01       		.uleb128 0x1
 3843 0596 50       		.byte	0x50
 3844 0597 9F       		.byte	0x9f
 3845 0598 00000000 		.4byte	0
 3846 059c 00000000 		.4byte	0
 3847              	.LLST32:
 3848 05a0 62030000 		.4byte	.LVL96-.Ltext0
 3849 05a4 90030000 		.4byte	.LVL102-.Ltext0
 3850 05a8 0100     		.2byte	0x1
 3851 05aa 51       		.byte	0x51
 3852 05ab 90030000 		.4byte	.LVL102-.Ltext0
 3853 05af 9E030000 		.4byte	.LVL104-.Ltext0
 3854 05b3 0400     		.2byte	0x4
 3855 05b5 F3       		.byte	0xf3
 3856 05b6 01       		.uleb128 0x1
 3857 05b7 51       		.byte	0x51
 3858 05b8 9F       		.byte	0x9f
 3859 05b9 9E030000 		.4byte	.LVL104-.Ltext0
 3860 05bd A2030000 		.4byte	.LFE137-.Ltext0
 3861 05c1 0100     		.2byte	0x1
 3862 05c3 51       		.byte	0x51
 3863 05c4 00000000 		.4byte	0
 3864 05c8 00000000 		.4byte	0
 3865              	.LLST33:
 3866 05cc 62030000 		.4byte	.LVL96-.Ltext0
 3867 05d0 86030000 		.4byte	.LVL99-.Ltext0
 3868 05d4 0200     		.2byte	0x2
 3869 05d6 30       		.byte	0x30
 3870 05d7 9F       		.byte	0x9f
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 95


 3871 05d8 86030000 		.4byte	.LVL99-.Ltext0
 3872 05dc 8A030000 		.4byte	.LVL100-.Ltext0
 3873 05e0 0B00     		.2byte	0xb
 3874 05e2 31       		.byte	0x31
 3875 05e3 71       		.byte	0x71
 3876 05e4 00       		.sleb128 0
 3877 05e5 38       		.byte	0x38
 3878 05e6 25       		.byte	0x25
 3879 05e7 0A       		.byte	0xa
 3880 05e8 FFFF     		.2byte	0xffff
 3881 05ea 1A       		.byte	0x1a
 3882 05eb 24       		.byte	0x24
 3883 05ec 9F       		.byte	0x9f
 3884 05ed 8A030000 		.4byte	.LVL100-.Ltext0
 3885 05f1 90030000 		.4byte	.LVL102-.Ltext0
 3886 05f5 1200     		.2byte	0x12
 3887 05f7 31       		.byte	0x31
 3888 05f8 71       		.byte	0x71
 3889 05f9 00       		.sleb128 0
 3890 05fa 38       		.byte	0x38
 3891 05fb 25       		.byte	0x25
 3892 05fc 0A       		.byte	0xa
 3893 05fd FFFF     		.2byte	0xffff
 3894 05ff 1A       		.byte	0x1a
 3895 0600 24       		.byte	0x24
 3896 0601 72       		.byte	0x72
 3897 0602 00       		.sleb128 0
 3898 0603 0A       		.byte	0xa
 3899 0604 FFFF     		.2byte	0xffff
 3900 0606 1A       		.byte	0x1a
 3901 0607 1A       		.byte	0x1a
 3902 0608 9F       		.byte	0x9f
 3903 0609 9E030000 		.4byte	.LVL104-.Ltext0
 3904 060d A2030000 		.4byte	.LFE137-.Ltext0
 3905 0611 1200     		.2byte	0x12
 3906 0613 31       		.byte	0x31
 3907 0614 71       		.byte	0x71
 3908 0615 00       		.sleb128 0
 3909 0616 38       		.byte	0x38
 3910 0617 25       		.byte	0x25
 3911 0618 0A       		.byte	0xa
 3912 0619 FFFF     		.2byte	0xffff
 3913 061b 1A       		.byte	0x1a
 3914 061c 24       		.byte	0x24
 3915 061d 72       		.byte	0x72
 3916 061e 00       		.sleb128 0
 3917 061f 0A       		.byte	0xa
 3918 0620 FFFF     		.2byte	0xffff
 3919 0622 1A       		.byte	0x1a
 3920 0623 1A       		.byte	0x1a
 3921 0624 9F       		.byte	0x9f
 3922 0625 00000000 		.4byte	0
 3923 0629 00000000 		.4byte	0
 3924              	.LLST34:
 3925 062d 62030000 		.4byte	.LVL96-.Ltext0
 3926 0631 68030000 		.4byte	.LVL97-.Ltext0
 3927 0635 0200     		.2byte	0x2
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 96


 3928 0637 30       		.byte	0x30
 3929 0638 9F       		.byte	0x9f
 3930 0639 68030000 		.4byte	.LVL97-.Ltext0
 3931 063d 74030000 		.4byte	.LVL98-.Ltext0
 3932 0641 0900     		.2byte	0x9
 3933 0643 71       		.byte	0x71
 3934 0644 00       		.sleb128 0
 3935 0645 4F       		.byte	0x4f
 3936 0646 1A       		.byte	0x1a
 3937 0647 0A       		.byte	0xa
 3938 0648 FFFF     		.2byte	0xffff
 3939 064a 1A       		.byte	0x1a
 3940 064b 9F       		.byte	0x9f
 3941 064c 74030000 		.4byte	.LVL98-.Ltext0
 3942 0650 86030000 		.4byte	.LVL99-.Ltext0
 3943 0654 0100     		.2byte	0x1
 3944 0656 52       		.byte	0x52
 3945 0657 86030000 		.4byte	.LVL99-.Ltext0
 3946 065b 8E030000 		.4byte	.LVL101-.Ltext0
 3947 065f 0100     		.2byte	0x1
 3948 0661 53       		.byte	0x53
 3949 0662 9E030000 		.4byte	.LVL104-.Ltext0
 3950 0666 A2030000 		.4byte	.LFE137-.Ltext0
 3951 066a 0100     		.2byte	0x1
 3952 066c 53       		.byte	0x53
 3953 066d 00000000 		.4byte	0
 3954 0671 00000000 		.4byte	0
 3955              	.LLST35:
 3956 0675 62030000 		.4byte	.LVL96-.Ltext0
 3957 0679 68030000 		.4byte	.LVL97-.Ltext0
 3958 067d 0200     		.2byte	0x2
 3959 067f 30       		.byte	0x30
 3960 0680 9F       		.byte	0x9f
 3961 0681 68030000 		.4byte	.LVL97-.Ltext0
 3962 0685 A2030000 		.4byte	.LFE137-.Ltext0
 3963 0689 0100     		.2byte	0x1
 3964 068b 54       		.byte	0x54
 3965 068c 00000000 		.4byte	0
 3966 0690 00000000 		.4byte	0
 3967              	.LLST36:
 3968 0694 62030000 		.4byte	.LVL96-.Ltext0
 3969 0698 A0030000 		.4byte	.LVL105-.Ltext0
 3970 069c 0200     		.2byte	0x2
 3971 069e 30       		.byte	0x30
 3972 069f 9F       		.byte	0x9f
 3973 06a0 A0030000 		.4byte	.LVL105-.Ltext0
 3974 06a4 A2030000 		.4byte	.LFE137-.Ltext0
 3975 06a8 0100     		.2byte	0x1
 3976 06aa 50       		.byte	0x50
 3977 06ab 00000000 		.4byte	0
 3978 06af 00000000 		.4byte	0
 3979              	.LLST37:
 3980 06b3 A2030000 		.4byte	.LVL106-.Ltext0
 3981 06b7 A4030000 		.4byte	.LVL107-.Ltext0
 3982 06bb 0100     		.2byte	0x1
 3983 06bd 51       		.byte	0x51
 3984 06be A4030000 		.4byte	.LVL107-.Ltext0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 97


 3985 06c2 B0030000 		.4byte	.LFE138-.Ltext0
 3986 06c6 0400     		.2byte	0x4
 3987 06c8 F3       		.byte	0xf3
 3988 06c9 01       		.uleb128 0x1
 3989 06ca 51       		.byte	0x51
 3990 06cb 9F       		.byte	0x9f
 3991 06cc 00000000 		.4byte	0
 3992 06d0 00000000 		.4byte	0
 3993              	.LLST38:
 3994 06d4 A2030000 		.4byte	.LVL106-.Ltext0
 3995 06d8 A4030000 		.4byte	.LVL107-.Ltext0
 3996 06dc 0500     		.2byte	0x5
 3997 06de 71       		.byte	0x71
 3998 06df 00       		.sleb128 0
 3999 06e0 38       		.byte	0x38
 4000 06e1 25       		.byte	0x25
 4001 06e2 9F       		.byte	0x9f
 4002 06e3 A4030000 		.4byte	.LVL107-.Ltext0
 4003 06e7 B0030000 		.4byte	.LFE138-.Ltext0
 4004 06eb 0600     		.2byte	0x6
 4005 06ed F3       		.byte	0xf3
 4006 06ee 01       		.uleb128 0x1
 4007 06ef 51       		.byte	0x51
 4008 06f0 38       		.byte	0x38
 4009 06f1 25       		.byte	0x25
 4010 06f2 9F       		.byte	0x9f
 4011 06f3 00000000 		.4byte	0
 4012 06f7 00000000 		.4byte	0
 4013              		.section	.debug_aranges,"",%progbits
 4014 0000 1C000000 		.4byte	0x1c
 4015 0004 0200     		.2byte	0x2
 4016 0006 00000000 		.4byte	.Ldebug_info0
 4017 000a 04       		.byte	0x4
 4018 000b 00       		.byte	0
 4019 000c 0000     		.2byte	0
 4020 000e 0000     		.2byte	0
 4021 0010 00000000 		.4byte	.Ltext0
 4022 0014 B0030000 		.4byte	.Letext0-.Ltext0
 4023 0018 00000000 		.4byte	0
 4024 001c 00000000 		.4byte	0
 4025              		.section	.debug_line,"",%progbits
 4026              	.Ldebug_line0:
 4027 0000 6F020000 		.section	.debug_str,"MS",%progbits,1
 4027      0200FF00 
 4027      00000201 
 4027      FB0E0D00 
 4027      01010101 
 4028              	.LASF52:
 4029 0000 696E7465 		.ascii	"integerdivider\000"
 4029      67657264 
 4029      69766964 
 4029      657200
 4030              	.LASF43:
 4031 000f 55534152 		.ascii	"USART_CPHA\000"
 4031      545F4350 
 4031      484100
 4032              	.LASF26:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 98


 4033 001a 47545052 		.ascii	"GTPR\000"
 4033      00
 4034              	.LASF89:
 4035 001f 6974706F 		.ascii	"itpos\000"
 4035      7300
 4036              	.LASF29:
 4037 0025 53595343 		.ascii	"SYSCLK_Frequency\000"
 4037      4C4B5F46 
 4037      72657175 
 4037      656E6379 
 4037      00
 4038              	.LASF61:
 4039 0036 55534152 		.ascii	"USART_SetPrescaler\000"
 4039      545F5365 
 4039      74507265 
 4039      7363616C 
 4039      657200
 4040              	.LASF47:
 4041 0049 55534152 		.ascii	"USART_Init\000"
 4041      545F496E 
 4041      697400
 4042              	.LASF13:
 4043 0054 73697A65 		.ascii	"sizetype\000"
 4043      74797065 
 4043      00
 4044              	.LASF30:
 4045 005d 48434C4B 		.ascii	"HCLK_Frequency\000"
 4045      5F467265 
 4045      7175656E 
 4045      637900
 4046              	.LASF73:
 4047 006c 55534152 		.ascii	"USART_LINBreakDetectLength\000"
 4047      545F4C49 
 4047      4E427265 
 4047      616B4465 
 4047      74656374 
 4048              	.LASF64:
 4049 0087 55534152 		.ascii	"USART_OneBitMethodCmd\000"
 4049      545F4F6E 
 4049      65426974 
 4049      4D657468 
 4049      6F64436D 
 4050              	.LASF15:
 4051 009d 466C6167 		.ascii	"FlagStatus\000"
 4051      53746174 
 4051      757300
 4052              	.LASF28:
 4053 00a8 55534152 		.ascii	"USART_TypeDef\000"
 4053      545F5479 
 4053      70654465 
 4053      6600
 4054              	.LASF36:
 4055 00b6 55534152 		.ascii	"USART_StopBits\000"
 4055      545F5374 
 4055      6F704269 
 4055      747300
 4056              	.LASF95:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 99


 4057 00c5 62697473 		.ascii	"bitstatus\000"
 4057      74617475 
 4057      7300
 4058              	.LASF45:
 4059 00cf 55534152 		.ascii	"USART_ClockInitTypeDef\000"
 4059      545F436C 
 4059      6F636B49 
 4059      6E697454 
 4059      79706544 
 4060              	.LASF59:
 4061 00e6 55534152 		.ascii	"USART_Cmd\000"
 4061      545F436D 
 4061      6400
 4062              	.LASF65:
 4063 00f0 55534152 		.ascii	"USART_SendData\000"
 4063      545F5365 
 4063      6E644461 
 4063      746100
 4064              	.LASF3:
 4065 00ff 75696E74 		.ascii	"uint8_t\000"
 4065      385F7400 
 4066              	.LASF87:
 4067 0107 55534152 		.ascii	"USART_IT\000"
 4067      545F4954 
 4067      00
 4068              	.LASF71:
 4069 0110 55534152 		.ascii	"USART_WakeUp\000"
 4069      545F5761 
 4069      6B655570 
 4069      00
 4070              	.LASF35:
 4071 011d 55534152 		.ascii	"USART_WordLength\000"
 4071      545F576F 
 4071      72644C65 
 4071      6E677468 
 4071      00
 4072              	.LASF60:
 4073 012e 4E657753 		.ascii	"NewState\000"
 4073      74617465 
 4073      00
 4074              	.LASF84:
 4075 0137 55534152 		.ascii	"USART_DMACmd\000"
 4075      545F444D 
 4075      41436D64 
 4075      00
 4076              	.LASF17:
 4077 0144 44495341 		.ascii	"DISABLE\000"
 4077      424C4500 
 4078              	.LASF0:
 4079 014c 7369676E 		.ascii	"signed char\000"
 4079      65642063 
 4079      68617200 
 4080              	.LASF44:
 4081 0158 55534152 		.ascii	"USART_LastBit\000"
 4081      545F4C61 
 4081      73744269 
 4081      7400
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 100


 4082              	.LASF34:
 4083 0166 55534152 		.ascii	"USART_BaudRate\000"
 4083      545F4261 
 4083      75645261 
 4083      746500
 4084              	.LASF82:
 4085 0175 55534152 		.ascii	"USART_IrDAMode\000"
 4085      545F4972 
 4085      44414D6F 
 4085      646500
 4086              	.LASF51:
 4087 0184 61706263 		.ascii	"apbclock\000"
 4087      6C6F636B 
 4087      00
 4088              	.LASF10:
 4089 018d 6C6F6E67 		.ascii	"long long int\000"
 4089      206C6F6E 
 4089      6720696E 
 4089      7400
 4090              	.LASF101:
 4091 019b 5243435F 		.ascii	"RCC_APB1PeriphResetCmd\000"
 4091      41504231 
 4091      50657269 
 4091      70685265 
 4091      73657443 
 4092              	.LASF16:
 4093 01b2 49545374 		.ascii	"ITStatus\000"
 4093      61747573 
 4093      00
 4094              	.LASF7:
 4095 01bb 6C6F6E67 		.ascii	"long int\000"
 4095      20696E74 
 4095      00
 4096              	.LASF99:
 4097 01c4 55534152 		.ascii	"USART_ClearITPendingBit\000"
 4097      545F436C 
 4097      65617249 
 4097      5450656E 
 4097      64696E67 
 4098              	.LASF78:
 4099 01dc 55534152 		.ascii	"USART_GuardTime\000"
 4099      545F4775 
 4099      61726454 
 4099      696D6500 
 4100              	.LASF2:
 4101 01ec 73686F72 		.ascii	"short int\000"
 4101      7420696E 
 4101      7400
 4102              	.LASF72:
 4103 01f6 55534152 		.ascii	"USART_LINBreakDetectLengthConfig\000"
 4103      545F4C49 
 4103      4E427265 
 4103      616B4465 
 4103      74656374 
 4104              	.LASF94:
 4105 0217 55534152 		.ascii	"USART_FLAG\000"
 4105      545F464C 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 101


 4105      414700
 4106              	.LASF69:
 4107 0222 55534152 		.ascii	"USART_ReceiverWakeUpCmd\000"
 4107      545F5265 
 4107      63656976 
 4107      65725761 
 4107      6B655570 
 4108              	.LASF46:
 4109 023a 55534152 		.ascii	"USART_DeInit\000"
 4109      545F4465 
 4109      496E6974 
 4109      00
 4110              	.LASF57:
 4111 0247 55534152 		.ascii	"USART_ClockInitStruct\000"
 4111      545F436C 
 4111      6F636B49 
 4111      6E697453 
 4111      74727563 
 4112              	.LASF80:
 4113 025d 55534152 		.ascii	"USART_SmartCardNACKCmd\000"
 4113      545F536D 
 4113      61727443 
 4113      6172644E 
 4113      41434B43 
 4114              	.LASF50:
 4115 0274 746D7072 		.ascii	"tmpreg\000"
 4115      656700
 4116              	.LASF37:
 4117 027b 55534152 		.ascii	"USART_Parity\000"
 4117      545F5061 
 4117      72697479 
 4117      00
 4118              	.LASF58:
 4119 0288 55534152 		.ascii	"USART_ClockStructInit\000"
 4119      545F436C 
 4119      6F636B53 
 4119      74727563 
 4119      74496E69 
 4120              	.LASF1:
 4121 029e 756E7369 		.ascii	"unsigned char\000"
 4121      676E6564 
 4121      20636861 
 4121      7200
 4122              	.LASF91:
 4123 02ac 75736172 		.ascii	"usartxbase\000"
 4123      74786261 
 4123      736500
 4124              	.LASF96:
 4125 02b7 55534152 		.ascii	"USART_ClearFlag\000"
 4125      545F436C 
 4125      65617246 
 4125      6C616700 
 4126              	.LASF67:
 4127 02c7 55534152 		.ascii	"USART_SetAddress\000"
 4127      545F5365 
 4127      74416464 
 4127      72657373 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 102


 4127      00
 4128              	.LASF11:
 4129 02d8 6C6F6E67 		.ascii	"long long unsigned int\000"
 4129      206C6F6E 
 4129      6720756E 
 4129      7369676E 
 4129      65642069 
 4130              	.LASF8:
 4131 02ef 75696E74 		.ascii	"uint32_t\000"
 4131      33325F74 
 4131      00
 4132              	.LASF77:
 4133 02f8 55534152 		.ascii	"USART_SetGuardTime\000"
 4133      545F5365 
 4133      74477561 
 4133      72645469 
 4133      6D6500
 4134              	.LASF12:
 4135 030b 756E7369 		.ascii	"unsigned int\000"
 4135      676E6564 
 4135      20696E74 
 4135      00
 4136              	.LASF4:
 4137 0318 75696E74 		.ascii	"uint16_t\000"
 4137      31365F74 
 4137      00
 4138              	.LASF103:
 4139 0321 474E5520 		.ascii	"GNU C 4.7.2\000"
 4139      4320342E 
 4139      372E3200 
 4140              	.LASF9:
 4141 032d 6C6F6E67 		.ascii	"long unsigned int\000"
 4141      20756E73 
 4141      69676E65 
 4141      6420696E 
 4141      7400
 4142              	.LASF75:
 4143 033f 55534152 		.ascii	"USART_SendBreak\000"
 4143      545F5365 
 4143      6E644272 
 4143      65616B00 
 4144              	.LASF40:
 4145 034f 55534152 		.ascii	"USART_InitTypeDef\000"
 4145      545F496E 
 4145      69745479 
 4145      70654465 
 4145      6600
 4146              	.LASF100:
 4147 0361 5243435F 		.ascii	"RCC_APB2PeriphResetCmd\000"
 4147      41504232 
 4147      50657269 
 4147      70685265 
 4147      73657443 
 4148              	.LASF86:
 4149 0378 55534152 		.ascii	"USART_ITConfig\000"
 4149      545F4954 
 4149      436F6E66 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 103


 4149      696700
 4150              	.LASF33:
 4151 0387 5243435F 		.ascii	"RCC_ClocksTypeDef\000"
 4151      436C6F63 
 4151      6B735479 
 4151      70654465 
 4151      6600
 4152              	.LASF85:
 4153 0399 55534152 		.ascii	"USART_DMAReq\000"
 4153      545F444D 
 4153      41526571 
 4153      00
 4154              	.LASF48:
 4155 03a6 55534152 		.ascii	"USARTx\000"
 4155      547800
 4156              	.LASF39:
 4157 03ad 55534152 		.ascii	"USART_HardwareFlowControl\000"
 4157      545F4861 
 4157      72647761 
 4157      7265466C 
 4157      6F77436F 
 4158              	.LASF79:
 4159 03c7 55534152 		.ascii	"USART_SmartCardCmd\000"
 4159      545F536D 
 4159      61727443 
 4159      61726443 
 4159      6D6400
 4160              	.LASF38:
 4161 03da 55534152 		.ascii	"USART_Mode\000"
 4161      545F4D6F 
 4161      646500
 4162              	.LASF68:
 4163 03e5 55534152 		.ascii	"USART_Address\000"
 4163      545F4164 
 4163      64726573 
 4163      7300
 4164              	.LASF6:
 4165 03f3 696E7433 		.ascii	"int32_t\000"
 4165      325F7400 
 4166              	.LASF98:
 4167 03fb 62697470 		.ascii	"bitpos\000"
 4167      6F7300
 4168              	.LASF63:
 4169 0402 55534152 		.ascii	"USART_OverSampling8Cmd\000"
 4169      545F4F76 
 4169      65725361 
 4169      6D706C69 
 4169      6E673843 
 4170              	.LASF5:
 4171 0419 73686F72 		.ascii	"short unsigned int\000"
 4171      7420756E 
 4171      7369676E 
 4171      65642069 
 4171      6E7400
 4172              	.LASF97:
 4173 042c 55534152 		.ascii	"USART_GetITStatus\000"
 4173      545F4765 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 104


 4173      74495453 
 4173      74617475 
 4173      7300
 4174              	.LASF74:
 4175 043e 55534152 		.ascii	"USART_LINCmd\000"
 4175      545F4C49 
 4175      4E436D64 
 4175      00
 4176              	.LASF81:
 4177 044b 55534152 		.ascii	"USART_IrDAConfig\000"
 4177      545F4972 
 4177      4441436F 
 4177      6E666967 
 4177      00
 4178              	.LASF14:
 4179 045c 52455345 		.ascii	"RESET\000"
 4179      5400
 4180              	.LASF32:
 4181 0462 50434C4B 		.ascii	"PCLK2_Frequency\000"
 4181      325F4672 
 4181      65717565 
 4181      6E637900 
 4182              	.LASF41:
 4183 0472 55534152 		.ascii	"USART_Clock\000"
 4183      545F436C 
 4183      6F636B00 
 4184              	.LASF20:
 4185 047e 52455345 		.ascii	"RESERVED0\000"
 4185      52564544 
 4185      3000
 4186              	.LASF21:
 4187 0488 52455345 		.ascii	"RESERVED1\000"
 4187      52564544 
 4187      3100
 4188              	.LASF22:
 4189 0492 52455345 		.ascii	"RESERVED2\000"
 4189      52564544 
 4189      3200
 4190              	.LASF23:
 4191 049c 52455345 		.ascii	"RESERVED3\000"
 4191      52564544 
 4191      3300
 4192              	.LASF24:
 4193 04a6 52455345 		.ascii	"RESERVED4\000"
 4193      52564544 
 4193      3400
 4194              	.LASF25:
 4195 04b0 52455345 		.ascii	"RESERVED5\000"
 4195      52564544 
 4195      3500
 4196              	.LASF27:
 4197 04ba 52455345 		.ascii	"RESERVED6\000"
 4197      52564544 
 4197      3600
 4198              	.LASF83:
 4199 04c4 55534152 		.ascii	"USART_IrDACmd\000"
 4199      545F4972 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 105


 4199      4441436D 
 4199      6400
 4200              	.LASF53:
 4201 04d2 66726163 		.ascii	"fractionaldivider\000"
 4201      74696F6E 
 4201      616C6469 
 4201      76696465 
 4201      7200
 4202              	.LASF19:
 4203 04e4 46756E63 		.ascii	"FunctionalState\000"
 4203      74696F6E 
 4203      616C5374 
 4203      61746500 
 4204              	.LASF66:
 4205 04f4 44617461 		.ascii	"Data\000"
 4205      00
 4206              	.LASF106:
 4207 04f9 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4207      52784275 
 4207      66666572 
 4207      00
 4208              	.LASF31:
 4209 0506 50434C4B 		.ascii	"PCLK1_Frequency\000"
 4209      315F4672 
 4209      65717565 
 4209      6E637900 
 4210              	.LASF93:
 4211 0516 55534152 		.ascii	"USART_GetFlagStatus\000"
 4211      545F4765 
 4211      74466C61 
 4211      67537461 
 4211      74757300 
 4212              	.LASF104:
 4213 052a 2E5C7374 		.ascii	".\\stm32f4periph\\src\\stm32f4xx_usart.c\000"
 4213      6D333266 
 4213      34706572 
 4213      6970685C 
 4213      7372635C 
 4214              	.LASF102:
 4215 0550 5243435F 		.ascii	"RCC_GetClocksFreq\000"
 4215      47657443 
 4215      6C6F636B 
 4215      73467265 
 4215      7100
 4216              	.LASF49:
 4217 0562 55534152 		.ascii	"USART_InitStruct\000"
 4217      545F496E 
 4217      69745374 
 4217      72756374 
 4217      00
 4218              	.LASF54:
 4219 0573 5243435F 		.ascii	"RCC_ClocksStatus\000"
 4219      436C6F63 
 4219      6B735374 
 4219      61747573 
 4219      00
 4220              	.LASF56:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 106


 4221 0584 55534152 		.ascii	"USART_ClockInit\000"
 4221      545F436C 
 4221      6F636B49 
 4221      6E697400 
 4222              	.LASF70:
 4223 0594 55534152 		.ascii	"USART_WakeUpConfig\000"
 4223      545F5761 
 4223      6B655570 
 4223      436F6E66 
 4223      696700
 4224              	.LASF76:
 4225 05a7 55534152 		.ascii	"USART_HalfDuplexCmd\000"
 4225      545F4861 
 4225      6C664475 
 4225      706C6578 
 4225      436D6400 
 4226              	.LASF55:
 4227 05bb 55534152 		.ascii	"USART_StructInit\000"
 4227      545F5374 
 4227      72756374 
 4227      496E6974 
 4227      00
 4228              	.LASF62:
 4229 05cc 55534152 		.ascii	"USART_Prescaler\000"
 4229      545F5072 
 4229      65736361 
 4229      6C657200 
 4230              	.LASF42:
 4231 05dc 55534152 		.ascii	"USART_CPOL\000"
 4231      545F4350 
 4231      4F4C00
 4232              	.LASF90:
 4233 05e7 69746D61 		.ascii	"itmask\000"
 4233      736B00
 4234              	.LASF105:
 4235 05ee 443A5C4E 		.ascii	"D:\\NiVek\\Firmware\\NiVek32\000"
 4235      6956656B 
 4235      5C466972 
 4235      6D776172 
 4235      655C4E69 
 4236              	.LASF92:
 4237 0608 55534152 		.ascii	"USART_ReceiveData\000"
 4237      545F5265 
 4237      63656976 
 4237      65446174 
 4237      6100
 4238              	.LASF88:
 4239 061a 75736172 		.ascii	"usartreg\000"
 4239      74726567 
 4239      00
 4240              	.LASF18:
 4241 0623 454E4142 		.ascii	"ENABLE\000"
 4241      4C4500
 4242              		.ident	"GCC: (Sourcery CodeBench Lite 2012.09-63) 4.7.2"
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s 			page 107


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_usart.c
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:70     .text:00000000 $t
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:75     .text:00000000 USART_DeInit
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:192    .text:00000090 $d
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:201    .text:000000a8 $t
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:206    .text:000000a8 USART_Init
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:369    .text:00000158 $d
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:373    .text:0000015c $t
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:378    .text:0000015c USART_StructInit
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:411    .text:00000172 USART_ClockInit
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:457    .text:00000192 USART_ClockStructInit
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:483    .text:0000019e USART_Cmd
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:515    .text:000001b6 USART_SetPrescaler
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:542    .text:000001c8 USART_OverSampling8Cmd
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:573    .text:000001de USART_OneBitMethodCmd
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:605    .text:000001f6 USART_SendData
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:627    .text:000001fe USART_ReceiveData
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:650    .text:00000206 USART_SetAddress
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:679    .text:0000021c USART_ReceiverWakeUpCmd
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:711    .text:00000234 USART_WakeUpConfig
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:740    .text:0000024a USART_LINBreakDetectLengthConfig
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:769    .text:00000260 USART_LINCmd
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:801    .text:00000278 USART_SendBreak
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:823    .text:00000284 USART_HalfDuplexCmd
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:855    .text:0000029c USART_SetGuardTime
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:882    .text:000002ae USART_SmartCardCmd
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:914    .text:000002c6 USART_SmartCardNACKCmd
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:946    .text:000002de USART_IrDAConfig
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:975    .text:000002f4 USART_IrDACmd
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:1007   .text:0000030c USART_DMACmd
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:1040   .text:0000031e USART_ITConfig
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:1111   .text:00000350 USART_GetFlagStatus
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:1137   .text:0000035c USART_ClearFlag
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:1158   .text:00000362 USART_GetITStatus
C:\Users\Kevin\AppData\Local\Temp\ccW48Nb3.s:1233   .text:000003a2 USART_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
RCC_GetClocksFreq
