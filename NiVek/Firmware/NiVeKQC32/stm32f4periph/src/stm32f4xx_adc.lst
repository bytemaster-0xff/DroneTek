ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3	@ Tag_ABI_HardFP_use
   4              		.eabi_attribute 28, 1	@ Tag_ABI_VFP_args
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   7              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   8              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   9              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
  10              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
  11              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  12              		.eabi_attribute 30, 4	@ Tag_ABI_optimization_goals
  13              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  14              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  15              		.file	"stm32f4xx_adc.c"
  16              	@ GNU C (Sourcery CodeBench Lite 2012.09-63) version 4.7.2 (arm-none-eabi)
  17              	@	compiled by GNU C version 4.3.2, GMP version 5.0.5, MPFR version 3.1.1-p2, MPC version 1.0.1
  18              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  19              	@ options passed:  -I . -I \STMSPINCDDIR -I .\stm32f4periph\inc
  20              	@ -I .\CMSIS\Include -I .\inc\commo\usb -I .\inc\commo -I .\inc\common
  21              	@ -I .\inc -imultilib thumb2
  22              	@ -iprefix k:\electronics\gcc\bin\../lib/gcc/arm-none-eabi/4.7.2/
  23              	@ -isysroot k:\electronics\gcc\bin\../arm-none-eabi
  24              	@ -MD .\stm32f4periph\src\stm32f4xx_adc.d -MF .dep\stm32f4xx_adc.o.d -MP
  25              	@ -MQ .\stm32f4periph\src\stm32f4xx_adc.o -D__USES_INITFINI__ -D STM32F0XX
  26              	@ -D USE_STDPERIPH_DRIVER -D RUN_FROM_FLASH=1
  27              	@ -D __CS_SOURCERYGXX_MAJ__=2012 -D __CS_SOURCERYGXX_MIN__=9
  28              	@ -D __CS_SOURCERYGXX_REV__=63 .\stm32f4periph\src\stm32f4xx_adc.c
  29              	@ -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -mthumb
  30              	@ -auxbase-strip .\stm32f4periph\src\stm32f4xx_adc.o -gdwarf-2 -Os -Wall
  31              	@ -Wstrict-prototypes -std=gnu99 -fomit-frame-pointer -fverbose-asm
  32              	@ options enabled:  -fauto-inc-dec -fbranch-count-reg -fcaller-saves
  33              	@ -fcombine-stack-adjustments -fcommon -fcompare-elim -fcprop-registers
  34              	@ -fcrossjumping -fcse-follow-jumps -fdebug-types-section -fdefer-pop
  35              	@ -fdelete-null-pointer-checks -fdevirtualize -fdwarf2-cfi-asm
  36              	@ -fearly-inlining -feliminate-unused-debug-types -fexpensive-optimizations
  37              	@ -fextension-elimination -fforward-propagate -ffunction-cse -fgcse
  38              	@ -fgcse-lm -fgnu-runtime -fguess-branch-probability -fident
  39              	@ -fif-conversion -fif-conversion2 -findirect-inlining -finline
  40              	@ -finline-atomics -finline-functions -finline-functions-called-once
  41              	@ -finline-small-functions -fipa-cp -fipa-profile -fipa-pure-const
  42              	@ -fipa-reference -fipa-sra -fira-share-save-slots -fira-share-spill-slots
  43              	@ -fivopts -fkeep-static-consts -fleading-underscore -fmath-errno
  44              	@ -fmerge-constants -fmerge-debug-strings -fmove-loop-invariants
  45              	@ -fomit-frame-pointer -foptimize-register-move -foptimize-sibling-calls
  46              	@ -fpartial-inlining -fpeephole -fpeephole2 -fprefetch-loop-arrays
  47              	@ -freg-struct-return -fregmove -freorder-blocks -freorder-functions
  48              	@ -frerun-cse-after-loop -fsched-critical-path-heuristic
  49              	@ -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
  50              	@ -fsched-last-insn-heuristic -fsched-rank-heuristic -fsched-spec
  51              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fschedule-insns2
  52              	@ -fsection-anchors -fshow-column -fshrink-wrap -fsigned-zeros
  53              	@ -fsplit-ivs-in-unroller -fsplit-wide-types -fstrict-aliasing
  54              	@ -fstrict-overflow -fstrict-volatile-bitfields -fthread-jumps
  55              	@ -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp -ftree-builtin-call-dce
  56              	@ -ftree-ccp -ftree-ch -ftree-copy-prop -ftree-copyrename -ftree-cselim
  57              	@ -ftree-dce -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 2


  58              	@ -ftree-if-to-switch-conversion -ftree-loop-if-convert -ftree-loop-im
  59              	@ -ftree-loop-ivcanon -ftree-loop-optimize -ftree-parallelize-loops=
  60              	@ -ftree-phiprop -ftree-pre -ftree-pta -ftree-reassoc -ftree-scev-cprop
  61              	@ -ftree-sink -ftree-slp-vectorize -ftree-sra -ftree-switch-conversion
  62              	@ -ftree-tail-merge -ftree-ter -ftree-vect-loop-version -ftree-vrp
  63              	@ -funit-at-a-time -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  64              	@ -fzero-initialized-in-bss -mlittle-endian -msched-prolog -mthumb
  65              	@ -munaligned-access -mvectorize-with-neon-quad
  66              	
  67              		.text
  68              	.Ltext0:
  69              		.cfi_sections	.debug_frame
  70              		.align	1
  71              		.global	ADC_DeInit
  72              		.thumb
  73              		.thumb_func
  74              		.type	ADC_DeInit, %function
  75              	ADC_DeInit:
  76              	.LFB110:
  77              		.file 1 ".\\stm32f4periph\\src\\stm32f4xx_adc.c"
   1:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
   2:.\stm32f4periph\src/stm32f4xx_adc.c ****   ******************************************************************************
   3:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @file    stm32f4xx_adc.c
   4:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @author  MCD Application Team
   5:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @version V1.0.2
   6:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @date    05-March-2012
   7:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief   This file provides firmware functions to manage the following 
   8:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          functionalities of the Analog to Digital Convertor (ADC) peripheral:
   9:.\stm32f4periph\src/stm32f4xx_adc.c ****   *           - Initialization and Configuration (in addition to ADC multi mode 
  10:.\stm32f4periph\src/stm32f4xx_adc.c ****   *             selection)
  11:.\stm32f4periph\src/stm32f4xx_adc.c ****   *           - Analog Watchdog configuration
  12:.\stm32f4periph\src/stm32f4xx_adc.c ****   *           - Temperature Sensor & Vrefint (Voltage Reference internal) & VBAT
  13:.\stm32f4periph\src/stm32f4xx_adc.c ****   *             management 
  14:.\stm32f4periph\src/stm32f4xx_adc.c ****   *           - Regular Channels Configuration
  15:.\stm32f4periph\src/stm32f4xx_adc.c ****   *           - Regular Channels DMA Configuration
  16:.\stm32f4periph\src/stm32f4xx_adc.c ****   *           - Injected channels Configuration
  17:.\stm32f4periph\src/stm32f4xx_adc.c ****   *           - Interrupts and flags management
  18:.\stm32f4periph\src/stm32f4xx_adc.c ****   *         
  19:.\stm32f4periph\src/stm32f4xx_adc.c ****   *  @verbatim
  20:.\stm32f4periph\src/stm32f4xx_adc.c ****   *
  21:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          ===================================================================
  22:.\stm32f4periph\src/stm32f4xx_adc.c ****   *                                   How to use this driver
  23:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          ===================================================================
  24:.\stm32f4periph\src/stm32f4xx_adc.c **** 
  25:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          1.  Enable the ADC interface clock using 
  26:.\stm32f4periph\src/stm32f4xx_adc.c ****   *                  RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADCx, ENABLE); 
  27:.\stm32f4periph\src/stm32f4xx_adc.c ****   *     
  28:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          2. ADC pins configuration
  29:.\stm32f4periph\src/stm32f4xx_adc.c ****   *               - Enable the clock for the ADC GPIOs using the following function:
  30:.\stm32f4periph\src/stm32f4xx_adc.c ****   *                   RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);   
  31:.\stm32f4periph\src/stm32f4xx_adc.c ****   *                - Configure these ADC pins in analog mode using GPIO_Init();  
  32:.\stm32f4periph\src/stm32f4xx_adc.c ****   *
  33:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          3. Configure the ADC Prescaler, conversion resolution and data 
  34:.\stm32f4periph\src/stm32f4xx_adc.c ****   *              alignment using the ADC_Init() function.
  35:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          4. Activate the ADC peripheral using ADC_Cmd() function.
  36:.\stm32f4periph\src/stm32f4xx_adc.c ****   *
  37:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          Regular channels group configuration
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 3


  38:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          ====================================    
  39:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            - To configure the ADC regular channels group features, use 
  40:.\stm32f4periph\src/stm32f4xx_adc.c ****   *              ADC_Init() and ADC_RegularChannelConfig() functions.
  41:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            - To activate the continuous mode, use the ADC_continuousModeCmd()
  42:.\stm32f4periph\src/stm32f4xx_adc.c ****   *              function.
  43:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            - To configurate and activate the Discontinuous mode, use the 
  44:.\stm32f4periph\src/stm32f4xx_adc.c ****   *              ADC_DiscModeChannelCountConfig() and ADC_DiscModeCmd() functions.
  45:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            - To read the ADC converted values, use the ADC_GetConversionValue()
  46:.\stm32f4periph\src/stm32f4xx_adc.c ****   *              function.
  47:.\stm32f4periph\src/stm32f4xx_adc.c ****   *
  48:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          Multi mode ADCs Regular channels configuration
  49:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          ===============================================
  50:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            - Refer to "Regular channels group configuration" description to
  51:.\stm32f4periph\src/stm32f4xx_adc.c ****   *              configure the ADC1, ADC2 and ADC3 regular channels.        
  52:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            - Select the Multi mode ADC regular channels features (dual or 
  53:.\stm32f4periph\src/stm32f4xx_adc.c ****   *              triple mode) using ADC_CommonInit() function and configure 
  54:.\stm32f4periph\src/stm32f4xx_adc.c ****   *              the DMA mode using ADC_MultiModeDMARequestAfterLastTransferCmd() 
  55:.\stm32f4periph\src/stm32f4xx_adc.c ****   *              functions.        
  56:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            - Read the ADCs converted values using the 
  57:.\stm32f4periph\src/stm32f4xx_adc.c ****   *              ADC_GetMultiModeConversionValue() function.
  58:.\stm32f4periph\src/stm32f4xx_adc.c ****   *
  59:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          DMA for Regular channels group features configuration
  60:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          ====================================================== 
  61:.\stm32f4periph\src/stm32f4xx_adc.c ****   *           - To enable the DMA mode for regular channels group, use the 
  62:.\stm32f4periph\src/stm32f4xx_adc.c ****   *             ADC_DMACmd() function.
  63:.\stm32f4periph\src/stm32f4xx_adc.c ****   *           - To enable the generation of DMA requests continuously at the end
  64:.\stm32f4periph\src/stm32f4xx_adc.c ****   *             of the last DMA transfer, use the ADC_DMARequestAfterLastTransferCmd() 
  65:.\stm32f4periph\src/stm32f4xx_adc.c ****   *             function.
  66:.\stm32f4periph\src/stm32f4xx_adc.c ****   *
  67:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          Injected channels group configuration
  68:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          =====================================    
  69:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            - To configure the ADC Injected channels group features, use 
  70:.\stm32f4periph\src/stm32f4xx_adc.c ****   *              ADC_InjectedChannelConfig() and  ADC_InjectedSequencerLengthConfig()
  71:.\stm32f4periph\src/stm32f4xx_adc.c ****   *              functions.
  72:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            - To activate the continuous mode, use the ADC_continuousModeCmd()
  73:.\stm32f4periph\src/stm32f4xx_adc.c ****   *              function.
  74:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            - To activate the Injected Discontinuous mode, use the 
  75:.\stm32f4periph\src/stm32f4xx_adc.c ****   *              ADC_InjectedDiscModeCmd() function.  
  76:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            - To activate the AutoInjected mode, use the ADC_AutoInjectedConvCmd() 
  77:.\stm32f4periph\src/stm32f4xx_adc.c ****   *              function.        
  78:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            - To read the ADC converted values, use the ADC_GetInjectedConversionValue() 
  79:.\stm32f4periph\src/stm32f4xx_adc.c ****   *              function.
  80:.\stm32f4periph\src/stm32f4xx_adc.c ****   *
  81:.\stm32f4periph\src/stm32f4xx_adc.c ****   *  @endverbatim
  82:.\stm32f4periph\src/stm32f4xx_adc.c ****   *
  83:.\stm32f4periph\src/stm32f4xx_adc.c ****   ******************************************************************************
  84:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @attention
  85:.\stm32f4periph\src/stm32f4xx_adc.c ****   *
  86:.\stm32f4periph\src/stm32f4xx_adc.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  87:.\stm32f4periph\src/stm32f4xx_adc.c ****   *
  88:.\stm32f4periph\src/stm32f4xx_adc.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  89:.\stm32f4periph\src/stm32f4xx_adc.c ****   * You may not use this file except in compliance with the License.
  90:.\stm32f4periph\src/stm32f4xx_adc.c ****   * You may obtain a copy of the License at:
  91:.\stm32f4periph\src/stm32f4xx_adc.c ****   *
  92:.\stm32f4periph\src/stm32f4xx_adc.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  93:.\stm32f4periph\src/stm32f4xx_adc.c ****   *
  94:.\stm32f4periph\src/stm32f4xx_adc.c ****   * Unless required by applicable law or agreed to in writing, software 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 4


  95:.\stm32f4periph\src/stm32f4xx_adc.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  96:.\stm32f4periph\src/stm32f4xx_adc.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  97:.\stm32f4periph\src/stm32f4xx_adc.c ****   * See the License for the specific language governing permissions and
  98:.\stm32f4periph\src/stm32f4xx_adc.c ****   * limitations under the License.
  99:.\stm32f4periph\src/stm32f4xx_adc.c ****   *
 100:.\stm32f4periph\src/stm32f4xx_adc.c ****   ******************************************************************************
 101:.\stm32f4periph\src/stm32f4xx_adc.c ****   */ 
 102:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 103:.\stm32f4periph\src/stm32f4xx_adc.c **** /* Includes ------------------------------------------------------------------*/
 104:.\stm32f4periph\src/stm32f4xx_adc.c **** #include "stm32f4xx_adc.h"
 105:.\stm32f4periph\src/stm32f4xx_adc.c **** #include "stm32f4xx_rcc.h"
 106:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 107:.\stm32f4periph\src/stm32f4xx_adc.c **** #define assert_param(expr) ((void)0)
 108:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 109:.\stm32f4periph\src/stm32f4xx_adc.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 110:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @{
 111:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
 112:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 113:.\stm32f4periph\src/stm32f4xx_adc.c **** /** @defgroup ADC 
 114:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief ADC driver modules
 115:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @{
 116:.\stm32f4periph\src/stm32f4xx_adc.c ****   */ 
 117:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 118:.\stm32f4periph\src/stm32f4xx_adc.c **** /* Private typedef -----------------------------------------------------------*/
 119:.\stm32f4periph\src/stm32f4xx_adc.c **** /* Private define ------------------------------------------------------------*/ 
 120:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 121:.\stm32f4periph\src/stm32f4xx_adc.c **** /* ADC DISCNUM mask */
 122:.\stm32f4periph\src/stm32f4xx_adc.c **** #define CR1_DISCNUM_RESET         ((uint32_t)0xFFFF1FFF)
 123:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 124:.\stm32f4periph\src/stm32f4xx_adc.c **** /* ADC AWDCH mask */
 125:.\stm32f4periph\src/stm32f4xx_adc.c **** #define CR1_AWDCH_RESET           ((uint32_t)0xFFFFFFE0)   
 126:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 127:.\stm32f4periph\src/stm32f4xx_adc.c **** /* ADC Analog watchdog enable mode mask */
 128:.\stm32f4periph\src/stm32f4xx_adc.c **** #define CR1_AWDMode_RESET         ((uint32_t)0xFF3FFDFF)   
 129:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 130:.\stm32f4periph\src/stm32f4xx_adc.c **** /* CR1 register Mask */
 131:.\stm32f4periph\src/stm32f4xx_adc.c **** #define CR1_CLEAR_MASK            ((uint32_t)0xFCFFFEFF)
 132:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 133:.\stm32f4periph\src/stm32f4xx_adc.c **** /* ADC EXTEN mask */
 134:.\stm32f4periph\src/stm32f4xx_adc.c **** #define CR2_EXTEN_RESET           ((uint32_t)0xCFFFFFFF)  
 135:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 136:.\stm32f4periph\src/stm32f4xx_adc.c **** /* ADC JEXTEN mask */
 137:.\stm32f4periph\src/stm32f4xx_adc.c **** #define CR2_JEXTEN_RESET          ((uint32_t)0xFFCFFFFF)  
 138:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 139:.\stm32f4periph\src/stm32f4xx_adc.c **** /* ADC JEXTSEL mask */
 140:.\stm32f4periph\src/stm32f4xx_adc.c **** #define CR2_JEXTSEL_RESET         ((uint32_t)0xFFF0FFFF)  
 141:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 142:.\stm32f4periph\src/stm32f4xx_adc.c **** /* CR2 register Mask */
 143:.\stm32f4periph\src/stm32f4xx_adc.c **** #define CR2_CLEAR_MASK            ((uint32_t)0xC0FFF7FD)
 144:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 145:.\stm32f4periph\src/stm32f4xx_adc.c **** /* ADC SQx mask */
 146:.\stm32f4periph\src/stm32f4xx_adc.c **** #define SQR3_SQ_SET               ((uint32_t)0x0000001F)  
 147:.\stm32f4periph\src/stm32f4xx_adc.c **** #define SQR2_SQ_SET               ((uint32_t)0x0000001F)  
 148:.\stm32f4periph\src/stm32f4xx_adc.c **** #define SQR1_SQ_SET               ((uint32_t)0x0000001F)  
 149:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 150:.\stm32f4periph\src/stm32f4xx_adc.c **** /* ADC L Mask */
 151:.\stm32f4periph\src/stm32f4xx_adc.c **** #define SQR1_L_RESET              ((uint32_t)0xFF0FFFFF) 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 5


 152:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 153:.\stm32f4periph\src/stm32f4xx_adc.c **** /* ADC JSQx mask */
 154:.\stm32f4periph\src/stm32f4xx_adc.c **** #define JSQR_JSQ_SET              ((uint32_t)0x0000001F) 
 155:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 156:.\stm32f4periph\src/stm32f4xx_adc.c **** /* ADC JL mask */
 157:.\stm32f4periph\src/stm32f4xx_adc.c **** #define JSQR_JL_SET               ((uint32_t)0x00300000) 
 158:.\stm32f4periph\src/stm32f4xx_adc.c **** #define JSQR_JL_RESET             ((uint32_t)0xFFCFFFFF) 
 159:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 160:.\stm32f4periph\src/stm32f4xx_adc.c **** /* ADC SMPx mask */
 161:.\stm32f4periph\src/stm32f4xx_adc.c **** #define SMPR1_SMP_SET             ((uint32_t)0x00000007)  
 162:.\stm32f4periph\src/stm32f4xx_adc.c **** #define SMPR2_SMP_SET             ((uint32_t)0x00000007) 
 163:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 164:.\stm32f4periph\src/stm32f4xx_adc.c **** /* ADC JDRx registers offset */
 165:.\stm32f4periph\src/stm32f4xx_adc.c **** #define JDR_OFFSET                ((uint8_t)0x28) 
 166:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 167:.\stm32f4periph\src/stm32f4xx_adc.c **** /* ADC CDR register base address */
 168:.\stm32f4periph\src/stm32f4xx_adc.c **** #define CDR_ADDRESS               ((uint32_t)0x40012308)   
 169:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 170:.\stm32f4periph\src/stm32f4xx_adc.c **** /* ADC CCR register Mask */
 171:.\stm32f4periph\src/stm32f4xx_adc.c **** #define CR_CLEAR_MASK             ((uint32_t)0xFFFC30E0)  
 172:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 173:.\stm32f4periph\src/stm32f4xx_adc.c **** /* Private macro -------------------------------------------------------------*/
 174:.\stm32f4periph\src/stm32f4xx_adc.c **** /* Private variables ---------------------------------------------------------*/
 175:.\stm32f4periph\src/stm32f4xx_adc.c **** /* Private function prototypes -----------------------------------------------*/
 176:.\stm32f4periph\src/stm32f4xx_adc.c **** /* Private functions ---------------------------------------------------------*/
 177:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 178:.\stm32f4periph\src/stm32f4xx_adc.c **** /** @defgroup ADC_Private_Functions
 179:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @{
 180:.\stm32f4periph\src/stm32f4xx_adc.c ****   */ 
 181:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 182:.\stm32f4periph\src/stm32f4xx_adc.c **** /** @defgroup ADC_Group1 Initialization and Configuration functions
 183:.\stm32f4periph\src/stm32f4xx_adc.c ****  *  @brief    Initialization and Configuration functions 
 184:.\stm32f4periph\src/stm32f4xx_adc.c ****  *
 185:.\stm32f4periph\src/stm32f4xx_adc.c **** @verbatim    
 186:.\stm32f4periph\src/stm32f4xx_adc.c ****  ===============================================================================
 187:.\stm32f4periph\src/stm32f4xx_adc.c ****                       Initialization and Configuration functions
 188:.\stm32f4periph\src/stm32f4xx_adc.c ****  ===============================================================================  
 189:.\stm32f4periph\src/stm32f4xx_adc.c ****   This section provides functions allowing to:
 190:.\stm32f4periph\src/stm32f4xx_adc.c ****    - Initialize and configure the ADC Prescaler
 191:.\stm32f4periph\src/stm32f4xx_adc.c ****    - ADC Conversion Resolution (12bit..6bit)
 192:.\stm32f4periph\src/stm32f4xx_adc.c ****    - Scan Conversion Mode (multichannels or one channel) for regular group
 193:.\stm32f4periph\src/stm32f4xx_adc.c ****    - ADC Continuous Conversion Mode (Continuous or Single conversion) for 
 194:.\stm32f4periph\src/stm32f4xx_adc.c ****      regular group
 195:.\stm32f4periph\src/stm32f4xx_adc.c ****    - External trigger Edge and source of regular group, 
 196:.\stm32f4periph\src/stm32f4xx_adc.c ****    - Converted data alignment (left or right)
 197:.\stm32f4periph\src/stm32f4xx_adc.c ****    - The number of ADC conversions that will be done using the sequencer for 
 198:.\stm32f4periph\src/stm32f4xx_adc.c ****      regular channel group
 199:.\stm32f4periph\src/stm32f4xx_adc.c ****    - Multi ADC mode selection
 200:.\stm32f4periph\src/stm32f4xx_adc.c ****    - Direct memory access mode selection for multi ADC mode  
 201:.\stm32f4periph\src/stm32f4xx_adc.c ****    - Delay between 2 sampling phases (used in dual or triple interleaved modes)
 202:.\stm32f4periph\src/stm32f4xx_adc.c ****    - Enable or disable the ADC peripheral
 203:.\stm32f4periph\src/stm32f4xx_adc.c ****    
 204:.\stm32f4periph\src/stm32f4xx_adc.c **** @endverbatim
 205:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @{
 206:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
 207:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 208:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 6


 209:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Deinitializes all ADCs peripherals registers to their default reset 
 210:.\stm32f4periph\src/stm32f4xx_adc.c ****   *         values.
 211:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  None
 212:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval None
 213:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
 214:.\stm32f4periph\src/stm32f4xx_adc.c **** void ADC_DeInit(void)
 215:.\stm32f4periph\src/stm32f4xx_adc.c **** {
  78              		.loc 1 215 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82 0000 08B5     		push	{r3, lr}	@
  83              	.LCFI0:
  84              		.cfi_def_cfa_offset 8
  85              		.cfi_offset 3, -8
  86              		.cfi_offset 14, -4
 216:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Enable all ADCs reset state */
 217:.\stm32f4periph\src/stm32f4xx_adc.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC, ENABLE);
  87              		.loc 1 217 0
  88 0002 0121     		movs	r1, #1	@,
  89 0004 4FF48070 		mov	r0, #256	@,
  90 0008 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd	@
  91              	.LVL0:
 218:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 219:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Release all ADCs from reset state */
 220:.\stm32f4periph\src/stm32f4xx_adc.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC, DISABLE);
  92              		.loc 1 220 0
  93 000c 4FF48070 		mov	r0, #256	@,
  94 0010 0021     		movs	r1, #0	@,
 221:.\stm32f4periph\src/stm32f4xx_adc.c **** }
  95              		.loc 1 221 0
  96 0012 BDE80840 		pop	{r3, lr}	@
 220:.\stm32f4periph\src/stm32f4xx_adc.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC, DISABLE);
  97              		.loc 1 220 0
  98 0016 FFF7FEBF 		b	RCC_APB2PeriphResetCmd	@
  99              	.LVL1:
 100              		.cfi_endproc
 101              	.LFE110:
 102              		.size	ADC_DeInit, .-ADC_DeInit
 103              		.align	1
 104              		.global	ADC_Init
 105              		.thumb
 106              		.thumb_func
 107              		.type	ADC_Init, %function
 108              	ADC_Init:
 109              	.LFB111:
 222:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 223:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
 224:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters 
 225:.\stm32f4periph\src/stm32f4xx_adc.c ****   *         in the ADC_InitStruct.
 226:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @note   This function is used to configure the global features of the ADC ( 
 227:.\stm32f4periph\src/stm32f4xx_adc.c ****   *         Resolution and Data Alignment), however, the rest of the configuration
 228:.\stm32f4periph\src/stm32f4xx_adc.c ****   *         parameters are specific to the regular channels group (scan mode 
 229:.\stm32f4periph\src/stm32f4xx_adc.c ****   *         activation, continuous mode activation, External trigger source and 
 230:.\stm32f4periph\src/stm32f4xx_adc.c ****   *         edge, number of conversion in the regular channels group sequencer).  
 231:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 232:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADC_InitStruct: pointer to an ADC_InitTypeDef structure that contains
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 7


 233:.\stm32f4periph\src/stm32f4xx_adc.c ****   *         the configuration information for the specified ADC peripheral.
 234:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval None
 235:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
 236:.\stm32f4periph\src/stm32f4xx_adc.c **** void ADC_Init(ADC_TypeDef* ADCx, ADC_InitTypeDef* ADC_InitStruct)
 237:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 110              		.loc 1 237 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114              	.LVL2:
 238:.\stm32f4periph\src/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0;
 239:.\stm32f4periph\src/stm32f4xx_adc.c ****   uint8_t tmpreg2 = 0;
 240:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
 241:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 242:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_RESOLUTION(ADC_InitStruct->ADC_Resolution)); 
 243:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(ADC_InitStruct->ADC_ScanConvMode));
 244:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(ADC_InitStruct->ADC_ContinuousConvMode)); 
 245:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(ADC_InitStruct->ADC_ExternalTrigConvEdge)); 
 246:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_EXT_TRIG(ADC_InitStruct->ADC_ExternalTrigConv));    
 247:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(ADC_InitStruct->ADC_DataAlign)); 
 248:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(ADC_InitStruct->ADC_NbrOfConversion));
 249:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 250:.\stm32f4periph\src/stm32f4xx_adc.c ****   /*---------------------------- ADCx CR1 Configuration -----------------*/
 251:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Get the ADCx CR1 value */
 252:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 = ADCx->CR1;
 115              		.loc 1 252 0
 116 001a 4268     		ldr	r2, [r0, #4]	@ tmpreg1, ADCx_3(D)->CR1
 117              	.LVL3:
 253:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 254:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Clear RES and SCAN bits */
 255:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 &= CR1_CLEAR_MASK;
 256:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 257:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Configure ADCx: scan conversion mode and resolution */
 258:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Set SCAN bit according to ADC_ScanConvMode value */
 259:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Set RES bit according to ADC_Resolution value */ 
 260:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 |= (uint32_t)(((uint32_t)ADC_InitStruct->ADC_ScanConvMode << 8) | \
 118              		.loc 1 260 0
 119 001c 0B68     		ldr	r3, [r1, #0]	@ ADC_InitStruct_6(D)->ADC_Resolution, ADC_InitStruct_6(D)->ADC_Resolution
 255:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 &= CR1_CLEAR_MASK;
 120              		.loc 1 255 0
 121 001e 22F04072 		bic	r2, r2, #50331648	@ tmp164, tmpreg1,
 122              	.LVL4:
 123 0022 22F48072 		bic	r2, r2, #256	@ tmp163, tmp164,
 124              		.loc 1 260 0
 125 0026 1343     		orrs	r3, r3, r2	@, D.7686, ADC_InitStruct_6(D)->ADC_Resolution, tmp163
 126 0028 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2	@ ADC_InitStruct_6(D)->ADC_ScanConvMode, ADC_InitStruct_6(D)-
 127 002a 43EA0223 		orr	r3, r3, r2, lsl #8	@, tmpreg1, D.7686, ADC_InitStruct_6(D)->ADC_ScanConvMode,
 128              	.LVL5:
 261:.\stm32f4periph\src/stm32f4xx_adc.c ****                                    ADC_InitStruct->ADC_Resolution);
 262:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Write to ADCx CR1 */
 263:.\stm32f4periph\src/stm32f4xx_adc.c ****   ADCx->CR1 = tmpreg1;
 129              		.loc 1 263 0
 130 002e 4360     		str	r3, [r0, #4]	@ tmpreg1, ADCx_3(D)->CR1
 264:.\stm32f4periph\src/stm32f4xx_adc.c ****   /*---------------------------- ADCx CR2 Configuration -----------------*/
 265:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Get the ADCx CR2 value */
 266:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 = ADCx->CR2;
 267:.\stm32f4periph\src/stm32f4xx_adc.c ****   
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 8


 268:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Clear CONT, ALIGN, EXTEN and EXTSEL bits */
 269:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 &= CR2_CLEAR_MASK;
 270:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 271:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Configure ADCx: external trigger event and edge, data alignment and 
 272:.\stm32f4periph\src/stm32f4xx_adc.c ****      continuous conversion mode */
 273:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Set ALIGN bit according to ADC_DataAlign value */
 274:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Set EXTEN bits according to ADC_ExternalTrigConvEdge value */ 
 275:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Set EXTSEL bits according to ADC_ExternalTrigConv value */
 276:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Set CONT bit according to ADC_ContinuousConvMode value */
 277:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_DataAlign | \
 131              		.loc 1 277 0
 132 0030 CA68     		ldr	r2, [r1, #12]	@ ADC_InitStruct_6(D)->ADC_ExternalTrigConv, ADC_InitStruct_6(D)->ADC_ExternalTr
 133 0032 0B69     		ldr	r3, [r1, #16]	@ ADC_InitStruct_6(D)->ADC_DataAlign, ADC_InitStruct_6(D)->ADC_DataAlign
 134              	.LVL6:
 135 0034 1A43     		orrs	r2, r2, r3	@, tmp168, ADC_InitStruct_6(D)->ADC_ExternalTrigConv, ADC_InitStruct_6(D)->ADC_Dat
 278:.\stm32f4periph\src/stm32f4xx_adc.c ****                         ADC_InitStruct->ADC_ExternalTrigConv | 
 136              		.loc 1 278 0
 137 0036 8B68     		ldr	r3, [r1, #8]	@ ADC_InitStruct_6(D)->ADC_ExternalTrigConvEdge, ADC_InitStruct_6(D)->ADC_Externa
 237:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 138              		.loc 1 237 0
 139 0038 10B5     		push	{r4, lr}	@
 140              	.LCFI1:
 141              		.cfi_def_cfa_offset 8
 142              		.cfi_offset 4, -8
 143              		.cfi_offset 14, -4
 144              		.loc 1 278 0
 145 003a 1A43     		orrs	r2, r2, r3	@, tmp171, tmp168, ADC_InitStruct_6(D)->ADC_ExternalTrigConvEdge
 266:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 = ADCx->CR2;
 146              		.loc 1 266 0
 147 003c 8468     		ldr	r4, [r0, #8]	@ tmpreg1, ADCx_3(D)->CR2
 148              	.LVL7:
 269:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 &= CR2_CLEAR_MASK;
 149              		.loc 1 269 0
 150 003e 084B     		ldr	r3, .L3	@ tmp173,
 151 0040 2340     		ands	r3, r3, r4	@, tmp173, tmp173, tmpreg1
 152              	.LVL8:
 277:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_DataAlign | \
 153              		.loc 1 277 0
 154 0042 1343     		orrs	r3, r3, r2	@, D.7695, tmp173, tmp171
 155              	.LVL9:
 279:.\stm32f4periph\src/stm32f4xx_adc.c ****                         ADC_InitStruct->ADC_ExternalTrigConvEdge | \
 280:.\stm32f4periph\src/stm32f4xx_adc.c ****                         ((uint32_t)ADC_InitStruct->ADC_ContinuousConvMode << 1));
 156              		.loc 1 280 0
 157 0044 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2	@ ADC_InitStruct_6(D)->ADC_ContinuousConvMode, ADC_InitStruct
 277:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_DataAlign | \
 158              		.loc 1 277 0
 159 0046 43EA4203 		orr	r3, r3, r2, lsl #1	@, tmpreg1, D.7695, ADC_InitStruct_6(D)->ADC_ContinuousConvMode,
 160              	.LVL10:
 281:.\stm32f4periph\src/stm32f4xx_adc.c ****                         
 282:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Write to ADCx CR2 */
 283:.\stm32f4periph\src/stm32f4xx_adc.c ****   ADCx->CR2 = tmpreg1;
 161              		.loc 1 283 0
 162 004a 8360     		str	r3, [r0, #8]	@ tmpreg1, ADCx_3(D)->CR2
 284:.\stm32f4periph\src/stm32f4xx_adc.c ****   /*---------------------------- ADCx SQR1 Configuration -----------------*/
 285:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Get the ADCx SQR1 value */
 286:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 = ADCx->SQR1;
 287:.\stm32f4periph\src/stm32f4xx_adc.c ****   
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 9


 288:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Clear L bits */
 289:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 &= SQR1_L_RESET;
 290:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 291:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Configure ADCx: regular channel sequence length */
 292:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Set L bits according to ADC_NbrOfConversion value */
 293:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg2 |= (uint8_t)(ADC_InitStruct->ADC_NbrOfConversion - (uint8_t)1);
 163              		.loc 1 293 0
 164 004c 0B7D     		ldrb	r3, [r1, #20]	@ zero_extendqisi2	@ ADC_InitStruct_6(D)->ADC_NbrOfConversion, ADC_InitStruct_6
 165              	.LVL11:
 286:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 = ADCx->SQR1;
 166              		.loc 1 286 0
 167 004e C26A     		ldr	r2, [r0, #44]	@ tmpreg1, ADCx_3(D)->SQR1
 168              	.LVL12:
 169              		.loc 1 293 0
 170 0050 013B     		subs	r3, r3, #1	@ tmp179, ADC_InitStruct_6(D)->ADC_NbrOfConversion,
 289:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 &= SQR1_L_RESET;
 171              		.loc 1 289 0
 172 0052 22F47002 		bic	r2, r2, #15728640	@ tmpreg1, tmpreg1,
 173              	.LVL13:
 294:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 |= ((uint32_t)tmpreg2 << 20);
 174              		.loc 1 294 0
 175 0056 DBB2     		uxtb	r3, r3	@ tmp180, tmp179
 176 0058 42EA0353 		orr	r3, r2, r3, lsl #20	@, tmpreg1, tmpreg1, tmp180,
 177              	.LVL14:
 295:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 296:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Write to ADCx SQR1 */
 297:.\stm32f4periph\src/stm32f4xx_adc.c ****   ADCx->SQR1 = tmpreg1;
 178              		.loc 1 297 0
 179 005c C362     		str	r3, [r0, #44]	@ tmpreg1, ADCx_3(D)->SQR1
 180 005e 10BD     		pop	{r4, pc}	@
 181              	.L4:
 182              		.align	2
 183              	.L3:
 184 0060 FDF7FFC0 		.word	-1056966659
 185              		.cfi_endproc
 186              	.LFE111:
 187              		.size	ADC_Init, .-ADC_Init
 188              		.align	1
 189              		.global	ADC_StructInit
 190              		.thumb
 191              		.thumb_func
 192              		.type	ADC_StructInit, %function
 193              	ADC_StructInit:
 194              	.LFB112:
 298:.\stm32f4periph\src/stm32f4xx_adc.c **** }
 299:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 300:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
 301:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Fills each ADC_InitStruct member with its default value.
 302:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @note   This function is used to initialize the global features of the ADC ( 
 303:.\stm32f4periph\src/stm32f4xx_adc.c ****   *         Resolution and Data Alignment), however, the rest of the configuration
 304:.\stm32f4periph\src/stm32f4xx_adc.c ****   *         parameters are specific to the regular channels group (scan mode 
 305:.\stm32f4periph\src/stm32f4xx_adc.c ****   *         activation, continuous mode activation, External trigger source and 
 306:.\stm32f4periph\src/stm32f4xx_adc.c ****   *         edge, number of conversion in the regular channels group sequencer).  
 307:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADC_InitStruct: pointer to an ADC_InitTypeDef structure which will 
 308:.\stm32f4periph\src/stm32f4xx_adc.c ****   *         be initialized.
 309:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval None
 310:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 10


 311:.\stm32f4periph\src/stm32f4xx_adc.c **** void ADC_StructInit(ADC_InitTypeDef* ADC_InitStruct)
 312:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 195              		.loc 1 312 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199              		@ link register save eliminated.
 200              	.LVL15:
 313:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Initialize the ADC_Mode member */
 314:.\stm32f4periph\src/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_Resolution = ADC_Resolution_12b;
 201              		.loc 1 314 0
 202 0064 0023     		movs	r3, #0	@ tmp135,
 203 0066 0360     		str	r3, [r0, #0]	@ tmp135, ADC_InitStruct_1(D)->ADC_Resolution
 315:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 316:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* initialize the ADC_ScanConvMode member */
 317:.\stm32f4periph\src/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_ScanConvMode = DISABLE;
 204              		.loc 1 317 0
 205 0068 0371     		strb	r3, [r0, #4]	@ tmp135, ADC_InitStruct_1(D)->ADC_ScanConvMode
 318:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 319:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Initialize the ADC_ContinuousConvMode member */
 320:.\stm32f4periph\src/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_ContinuousConvMode = DISABLE;
 206              		.loc 1 320 0
 207 006a 4371     		strb	r3, [r0, #5]	@ tmp135, ADC_InitStruct_1(D)->ADC_ContinuousConvMode
 321:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 322:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Initialize the ADC_ExternalTrigConvEdge member */
 323:.\stm32f4periph\src/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_ExternalTrigConvEdge = ADC_ExternalTrigConvEdge_None;
 208              		.loc 1 323 0
 209 006c 8360     		str	r3, [r0, #8]	@ tmp135, ADC_InitStruct_1(D)->ADC_ExternalTrigConvEdge
 324:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 325:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Initialize the ADC_ExternalTrigConv member */
 326:.\stm32f4periph\src/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_ExternalTrigConv = ADC_ExternalTrigConv_T1_CC1;
 210              		.loc 1 326 0
 211 006e C360     		str	r3, [r0, #12]	@ tmp135, ADC_InitStruct_1(D)->ADC_ExternalTrigConv
 327:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 328:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Initialize the ADC_DataAlign member */
 329:.\stm32f4periph\src/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_DataAlign = ADC_DataAlign_Right;
 212              		.loc 1 329 0
 213 0070 0361     		str	r3, [r0, #16]	@ tmp135, ADC_InitStruct_1(D)->ADC_DataAlign
 330:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 331:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Initialize the ADC_NbrOfConversion member */
 332:.\stm32f4periph\src/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_NbrOfConversion = 1;
 214              		.loc 1 332 0
 215 0072 0123     		movs	r3, #1	@ tmp143,
 216 0074 0375     		strb	r3, [r0, #20]	@ tmp143, ADC_InitStruct_1(D)->ADC_NbrOfConversion
 217 0076 7047     		bx	lr	@
 218              		.cfi_endproc
 219              	.LFE112:
 220              		.size	ADC_StructInit, .-ADC_StructInit
 221              		.align	1
 222              		.global	ADC_CommonInit
 223              		.thumb
 224              		.thumb_func
 225              		.type	ADC_CommonInit, %function
 226              	ADC_CommonInit:
 227              	.LFB113:
 333:.\stm32f4periph\src/stm32f4xx_adc.c **** }
 334:.\stm32f4periph\src/stm32f4xx_adc.c **** 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 11


 335:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
 336:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Initializes the ADCs peripherals according to the specified parameters 
 337:.\stm32f4periph\src/stm32f4xx_adc.c ****   *         in the ADC_CommonInitStruct.
 338:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADC_CommonInitStruct: pointer to an ADC_CommonInitTypeDef structure 
 339:.\stm32f4periph\src/stm32f4xx_adc.c ****   *         that contains the configuration information for  All ADCs peripherals.
 340:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval None
 341:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
 342:.\stm32f4periph\src/stm32f4xx_adc.c **** void ADC_CommonInit(ADC_CommonInitTypeDef* ADC_CommonInitStruct)
 343:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 228              		.loc 1 343 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              	.LVL16:
 344:.\stm32f4periph\src/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0;
 345:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
 346:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_MODE(ADC_CommonInitStruct->ADC_Mode));
 347:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_PRESCALER(ADC_CommonInitStruct->ADC_Prescaler));
 348:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_DMA_ACCESS_MODE(ADC_CommonInitStruct->ADC_DMAAccessMode));
 349:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_SAMPLING_DELAY(ADC_CommonInitStruct->ADC_TwoSamplingDelay));
 350:.\stm32f4periph\src/stm32f4xx_adc.c ****   /*---------------------------- ADC CCR Configuration -----------------*/
 351:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Get the ADC CCR value */
 352:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 = ADC->CCR;
 233              		.loc 1 352 0
 234 0078 074A     		ldr	r2, .L7	@ tmp145,
 353:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 354:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Clear MULTI, DELAY, DMA and ADCPRE bits */
 355:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 &= CR_CLEAR_MASK;
 235              		.loc 1 355 0
 236 007a 084B     		ldr	r3, .L7+4	@ tmpreg1,
 352:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 = ADC->CCR;
 237              		.loc 1 352 0
 238 007c 5168     		ldr	r1, [r2, #4]	@ tmpreg1, MEM[(struct ADC_Common_TypeDef *)1073816320B].CCR
 239              	.LVL17:
 343:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 240              		.loc 1 343 0
 241 007e 10B5     		push	{r4, lr}	@
 242              	.LCFI2:
 243              		.cfi_def_cfa_offset 8
 244              		.cfi_offset 4, -8
 245              		.cfi_offset 14, -4
 246              		.loc 1 355 0
 247 0080 0B40     		ands	r3, r3, r1	@, tmpreg1, tmpreg1, tmpreg1
 248              	.LVL18:
 356:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 357:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Configure ADCx: Multi mode, Delay between two sampling time, ADC prescaler,
 358:.\stm32f4periph\src/stm32f4xx_adc.c ****      and DMA access mode for multimode */
 359:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Set MULTI bits according to ADC_Mode value */
 360:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Set ADCPRE bits according to ADC_Prescaler value */
 361:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Set DMA bits according to ADC_DMAAccessMode value */
 362:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Set DELAY bits according to ADC_TwoSamplingDelay value */    
 363:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 |= (uint32_t)(ADC_CommonInitStruct->ADC_Mode | 
 249              		.loc 1 363 0
 250 0082 90E81200 		ldmia	r0, {r1, r4}	@ ADC_CommonInitStruct,,
 251 0086 0C43     		orrs	r4, r4, r1	@, tmp147, ADC_CommonInitStruct_5(D)->ADC_Prescaler, ADC_CommonInitStruct_5(D)->AD
 364:.\stm32f4periph\src/stm32f4xx_adc.c ****                         ADC_CommonInitStruct->ADC_Prescaler | 
 252              		.loc 1 364 0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 12


 253 0088 8168     		ldr	r1, [r0, #8]	@ ADC_CommonInitStruct_5(D)->ADC_DMAAccessMode, ADC_CommonInitStruct_5(D)->ADC_DM
 363:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 |= (uint32_t)(ADC_CommonInitStruct->ADC_Mode | 
 254              		.loc 1 363 0
 255 008a C068     		ldr	r0, [r0, #12]	@ ADC_CommonInitStruct_5(D)->ADC_TwoSamplingDelay, ADC_CommonInitStruct_5(D)->AD
 256              	.LVL19:
 257              		.loc 1 364 0
 258 008c 2143     		orrs	r1, r1, r4	@, tmp150, ADC_CommonInitStruct_5(D)->ADC_DMAAccessMode, tmp147
 363:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 |= (uint32_t)(ADC_CommonInitStruct->ADC_Mode | 
 259              		.loc 1 363 0
 260 008e 0143     		orrs	r1, r1, r0	@, tmp152, tmp150, ADC_CommonInitStruct_5(D)->ADC_TwoSamplingDelay
 261 0090 0B43     		orrs	r3, r3, r1	@, tmpreg1, tmpreg1, tmp152
 262              	.LVL20:
 365:.\stm32f4periph\src/stm32f4xx_adc.c ****                         ADC_CommonInitStruct->ADC_DMAAccessMode | 
 366:.\stm32f4periph\src/stm32f4xx_adc.c ****                         ADC_CommonInitStruct->ADC_TwoSamplingDelay);
 367:.\stm32f4periph\src/stm32f4xx_adc.c ****                         
 368:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Write to ADC CCR */
 369:.\stm32f4periph\src/stm32f4xx_adc.c ****   ADC->CCR = tmpreg1;
 263              		.loc 1 369 0
 264 0092 5360     		str	r3, [r2, #4]	@ tmpreg1, MEM[(struct ADC_Common_TypeDef *)1073816320B].CCR
 265 0094 10BD     		pop	{r4, pc}	@
 266              	.L8:
 267 0096 00BF     		.align	2
 268              	.L7:
 269 0098 00230140 		.word	1073816320
 270 009c E030FCFF 		.word	-249632
 271              		.cfi_endproc
 272              	.LFE113:
 273              		.size	ADC_CommonInit, .-ADC_CommonInit
 274              		.align	1
 275              		.global	ADC_CommonStructInit
 276              		.thumb
 277              		.thumb_func
 278              		.type	ADC_CommonStructInit, %function
 279              	ADC_CommonStructInit:
 280              	.LFB114:
 370:.\stm32f4periph\src/stm32f4xx_adc.c **** }
 371:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 372:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
 373:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Fills each ADC_CommonInitStruct member with its default value.
 374:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADC_CommonInitStruct: pointer to an ADC_CommonInitTypeDef structure
 375:.\stm32f4periph\src/stm32f4xx_adc.c ****   *         which will be initialized.
 376:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval None
 377:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
 378:.\stm32f4periph\src/stm32f4xx_adc.c **** void ADC_CommonStructInit(ADC_CommonInitTypeDef* ADC_CommonInitStruct)
 379:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 281              		.loc 1 379 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286              	.LVL21:
 380:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Initialize the ADC_Mode member */
 381:.\stm32f4periph\src/stm32f4xx_adc.c ****   ADC_CommonInitStruct->ADC_Mode = ADC_Mode_Independent;
 287              		.loc 1 381 0
 288 00a0 0023     		movs	r3, #0	@ tmp135,
 289 00a2 0360     		str	r3, [r0, #0]	@ tmp135, ADC_CommonInitStruct_1(D)->ADC_Mode
 382:.\stm32f4periph\src/stm32f4xx_adc.c **** 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 13


 383:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* initialize the ADC_Prescaler member */
 384:.\stm32f4periph\src/stm32f4xx_adc.c ****   ADC_CommonInitStruct->ADC_Prescaler = ADC_Prescaler_Div2;
 290              		.loc 1 384 0
 291 00a4 4360     		str	r3, [r0, #4]	@ tmp135, ADC_CommonInitStruct_1(D)->ADC_Prescaler
 385:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 386:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Initialize the ADC_DMAAccessMode member */
 387:.\stm32f4periph\src/stm32f4xx_adc.c ****   ADC_CommonInitStruct->ADC_DMAAccessMode = ADC_DMAAccessMode_Disabled;
 292              		.loc 1 387 0
 293 00a6 8360     		str	r3, [r0, #8]	@ tmp135, ADC_CommonInitStruct_1(D)->ADC_DMAAccessMode
 388:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 389:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Initialize the ADC_TwoSamplingDelay member */
 390:.\stm32f4periph\src/stm32f4xx_adc.c ****   ADC_CommonInitStruct->ADC_TwoSamplingDelay = ADC_TwoSamplingDelay_5Cycles;
 294              		.loc 1 390 0
 295 00a8 C360     		str	r3, [r0, #12]	@ tmp135, ADC_CommonInitStruct_1(D)->ADC_TwoSamplingDelay
 296 00aa 7047     		bx	lr	@
 297              		.cfi_endproc
 298              	.LFE114:
 299              		.size	ADC_CommonStructInit, .-ADC_CommonStructInit
 300              		.align	1
 301              		.global	ADC_Cmd
 302              		.thumb
 303              		.thumb_func
 304              		.type	ADC_Cmd, %function
 305              	ADC_Cmd:
 306              	.LFB115:
 391:.\stm32f4periph\src/stm32f4xx_adc.c **** }
 392:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 393:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
 394:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Enables or disables the specified ADC peripheral.
 395:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 396:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  NewState: new state of the ADCx peripheral. 
 397:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
 398:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval None
 399:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
 400:.\stm32f4periph\src/stm32f4xx_adc.c **** void ADC_Cmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 401:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 307              		.loc 1 401 0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311              		@ link register save eliminated.
 312              	.LVL22:
 402:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
 403:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 404:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 405:.\stm32f4periph\src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 406:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
 407:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Set the ADON bit to wake up the ADC from power down mode */
 408:.\stm32f4periph\src/stm32f4xx_adc.c ****     ADCx->CR2 |= (uint32_t)ADC_CR2_ADON;
 313              		.loc 1 408 0
 314 00ac 8368     		ldr	r3, [r0, #8]	@ D.7669,
 405:.\stm32f4periph\src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 315              		.loc 1 405 0
 316 00ae 11B1     		cbz	r1, .L11	@ NewState,
 317              		.loc 1 408 0
 318 00b0 43F00103 		orr	r3, r3, #1	@ D.7670, D.7669,
 319 00b4 01E0     		b	.L13	@
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 14


 320              	.L11:
 409:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
 410:.\stm32f4periph\src/stm32f4xx_adc.c ****   else
 411:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
 412:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Disable the selected ADC peripheral */
 413:.\stm32f4periph\src/stm32f4xx_adc.c ****     ADCx->CR2 &= (uint32_t)(~ADC_CR2_ADON);
 321              		.loc 1 413 0
 322 00b6 23F00103 		bic	r3, r3, #1	@ D.7673, D.7672,
 323              	.L13:
 324 00ba 8360     		str	r3, [r0, #8]	@ D.7673,
 325 00bc 7047     		bx	lr	@
 326              		.cfi_endproc
 327              	.LFE115:
 328              		.size	ADC_Cmd, .-ADC_Cmd
 329              		.align	1
 330              		.global	ADC_AnalogWatchdogCmd
 331              		.thumb
 332              		.thumb_func
 333              		.type	ADC_AnalogWatchdogCmd, %function
 334              	ADC_AnalogWatchdogCmd:
 335              	.LFB116:
 414:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
 415:.\stm32f4periph\src/stm32f4xx_adc.c **** }
 416:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
 417:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @}
 418:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
 419:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 420:.\stm32f4periph\src/stm32f4xx_adc.c **** /** @defgroup ADC_Group2 Analog Watchdog configuration functions
 421:.\stm32f4periph\src/stm32f4xx_adc.c ****  *  @brief    Analog Watchdog configuration functions 
 422:.\stm32f4periph\src/stm32f4xx_adc.c ****  *
 423:.\stm32f4periph\src/stm32f4xx_adc.c **** @verbatim   
 424:.\stm32f4periph\src/stm32f4xx_adc.c ****  ===============================================================================
 425:.\stm32f4periph\src/stm32f4xx_adc.c ****                     Analog Watchdog configuration functions
 426:.\stm32f4periph\src/stm32f4xx_adc.c ****  ===============================================================================  
 427:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 428:.\stm32f4periph\src/stm32f4xx_adc.c ****   This section provides functions allowing to configure the Analog Watchdog
 429:.\stm32f4periph\src/stm32f4xx_adc.c ****   (AWD) feature in the ADC.
 430:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 431:.\stm32f4periph\src/stm32f4xx_adc.c ****   A typical configuration Analog Watchdog is done following these steps :
 432:.\stm32f4periph\src/stm32f4xx_adc.c ****    1. the ADC guarded channel(s) is (are) selected using the 
 433:.\stm32f4periph\src/stm32f4xx_adc.c ****       ADC_AnalogWatchdogSingleChannelConfig() function.
 434:.\stm32f4periph\src/stm32f4xx_adc.c ****    2. The Analog watchdog lower and higher threshold are configured using the  
 435:.\stm32f4periph\src/stm32f4xx_adc.c ****      ADC_AnalogWatchdogThresholdsConfig() function.
 436:.\stm32f4periph\src/stm32f4xx_adc.c ****    3. The Analog watchdog is enabled and configured to enable the check, on one
 437:.\stm32f4periph\src/stm32f4xx_adc.c ****       or more channels, using the  ADC_AnalogWatchdogCmd() function.
 438:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 439:.\stm32f4periph\src/stm32f4xx_adc.c **** @endverbatim
 440:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @{
 441:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
 442:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 443:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
 444:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Enables or disables the analog watchdog on single/all regular or 
 445:.\stm32f4periph\src/stm32f4xx_adc.c ****   *         injected channels
 446:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 447:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADC_AnalogWatchdog: the ADC analog watchdog configuration.
 448:.\stm32f4periph\src/stm32f4xx_adc.c ****   *         This parameter can be one of the following values:
 449:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_SingleRegEnable: Analog watchdog on a single regular channel
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 15


 450:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_SingleInjecEnable: Analog watchdog on a single injected chan
 451:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_SingleRegOrInjecEnable: Analog watchdog on a single regular 
 452:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_AllRegEnable: Analog watchdog on all regular channel
 453:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_AllInjecEnable: Analog watchdog on all injected channel
 454:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_AllRegAllInjecEnable: Analog watchdog on all regular and inj
 455:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_None: No channel guarded by the analog watchdog
 456:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval None	  
 457:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
 458:.\stm32f4periph\src/stm32f4xx_adc.c **** void ADC_AnalogWatchdogCmd(ADC_TypeDef* ADCx, uint32_t ADC_AnalogWatchdog)
 459:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 336              		.loc 1 459 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              		@ link register save eliminated.
 341              	.LVL23:
 460:.\stm32f4periph\src/stm32f4xx_adc.c ****   uint32_t tmpreg = 0;
 461:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
 462:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 463:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG(ADC_AnalogWatchdog));
 464:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 465:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Get the old register value */
 466:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg = ADCx->CR1;
 342              		.loc 1 466 0
 343 00be 4368     		ldr	r3, [r0, #4]	@ tmpreg, ADCx_2(D)->CR1
 344              	.LVL24:
 467:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 468:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Clear AWDEN, JAWDEN and AWDSGL bits */
 469:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg &= CR1_AWDMode_RESET;
 345              		.loc 1 469 0
 346 00c0 23F44003 		bic	r3, r3, #12582912	@ tmp139, tmpreg,
 347              	.LVL25:
 348 00c4 23F40073 		bic	r3, r3, #512	@ tmpreg, tmp139,
 349              	.LVL26:
 470:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 471:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Set the analog watchdog enable mode */
 472:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg |= ADC_AnalogWatchdog;
 350              		.loc 1 472 0
 351 00c8 1943     		orrs	r1, r1, r3	@, tmpreg, ADC_AnalogWatchdog, tmpreg
 352              	.LVL27:
 473:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 474:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Store the new register value */
 475:.\stm32f4periph\src/stm32f4xx_adc.c ****   ADCx->CR1 = tmpreg;
 353              		.loc 1 475 0
 354 00ca 4160     		str	r1, [r0, #4]	@ tmpreg, ADCx_2(D)->CR1
 355 00cc 7047     		bx	lr	@
 356              		.cfi_endproc
 357              	.LFE116:
 358              		.size	ADC_AnalogWatchdogCmd, .-ADC_AnalogWatchdogCmd
 359              		.align	1
 360              		.global	ADC_AnalogWatchdogThresholdsConfig
 361              		.thumb
 362              		.thumb_func
 363              		.type	ADC_AnalogWatchdogThresholdsConfig, %function
 364              	ADC_AnalogWatchdogThresholdsConfig:
 365              	.LFB117:
 476:.\stm32f4periph\src/stm32f4xx_adc.c **** }
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 16


 477:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 478:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
 479:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Configures the high and low thresholds of the analog watchdog.
 480:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 481:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  HighThreshold: the ADC analog watchdog High threshold value.
 482:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter must be a 12-bit value.
 483:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  LowThreshold:  the ADC analog watchdog Low threshold value.
 484:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter must be a 12-bit value.
 485:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval None
 486:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
 487:.\stm32f4periph\src/stm32f4xx_adc.c **** void ADC_AnalogWatchdogThresholdsConfig(ADC_TypeDef* ADCx, uint16_t HighThreshold,
 488:.\stm32f4periph\src/stm32f4xx_adc.c ****                                         uint16_t LowThreshold)
 489:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 366              		.loc 1 489 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 370              		@ link register save eliminated.
 371              	.LVL28:
 490:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
 491:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 492:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_THRESHOLD(HighThreshold));
 493:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_THRESHOLD(LowThreshold));
 494:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 495:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Set the ADCx high threshold */
 496:.\stm32f4periph\src/stm32f4xx_adc.c ****   ADCx->HTR = HighThreshold;
 372              		.loc 1 496 0
 373 00ce 4162     		str	r1, [r0, #36]	@ HighThreshold, ADCx_3(D)->HTR
 497:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 498:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Set the ADCx low threshold */
 499:.\stm32f4periph\src/stm32f4xx_adc.c ****   ADCx->LTR = LowThreshold;
 374              		.loc 1 499 0
 375 00d0 8262     		str	r2, [r0, #40]	@ LowThreshold, ADCx_3(D)->LTR
 376 00d2 7047     		bx	lr	@
 377              		.cfi_endproc
 378              	.LFE117:
 379              		.size	ADC_AnalogWatchdogThresholdsConfig, .-ADC_AnalogWatchdogThresholdsConfig
 380              		.align	1
 381              		.global	ADC_AnalogWatchdogSingleChannelConfig
 382              		.thumb
 383              		.thumb_func
 384              		.type	ADC_AnalogWatchdogSingleChannelConfig, %function
 385              	ADC_AnalogWatchdogSingleChannelConfig:
 386              	.LFB118:
 500:.\stm32f4periph\src/stm32f4xx_adc.c **** }
 501:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 502:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
 503:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Configures the analog watchdog guarded single channel
 504:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 505:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADC_Channel: the ADC channel to configure for the analog watchdog. 
 506:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
 507:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_0: ADC Channel0 selected
 508:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_1: ADC Channel1 selected
 509:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_2: ADC Channel2 selected
 510:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_3: ADC Channel3 selected
 511:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_4: ADC Channel4 selected
 512:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_5: ADC Channel5 selected
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 17


 513:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_6: ADC Channel6 selected
 514:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_7: ADC Channel7 selected
 515:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_8: ADC Channel8 selected
 516:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_9: ADC Channel9 selected
 517:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_10: ADC Channel10 selected
 518:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_11: ADC Channel11 selected
 519:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_12: ADC Channel12 selected
 520:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_13: ADC Channel13 selected
 521:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_14: ADC Channel14 selected
 522:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_15: ADC Channel15 selected
 523:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_16: ADC Channel16 selected
 524:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_17: ADC Channel17 selected
 525:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_18: ADC Channel18 selected
 526:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval None
 527:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
 528:.\stm32f4periph\src/stm32f4xx_adc.c **** void ADC_AnalogWatchdogSingleChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel)
 529:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 387              		.loc 1 529 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391              		@ link register save eliminated.
 392              	.LVL29:
 530:.\stm32f4periph\src/stm32f4xx_adc.c ****   uint32_t tmpreg = 0;
 531:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
 532:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 533:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 534:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 535:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Get the old register value */
 536:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg = ADCx->CR1;
 393              		.loc 1 536 0
 394 00d4 4368     		ldr	r3, [r0, #4]	@ tmpreg, ADCx_2(D)->CR1
 395              	.LVL30:
 537:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 538:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Clear the Analog watchdog channel select bits */
 539:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg &= CR1_AWDCH_RESET;
 396              		.loc 1 539 0
 397 00d6 23F01F03 		bic	r3, r3, #31	@ tmpreg, tmpreg,
 398              	.LVL31:
 540:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 541:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Set the Analog watchdog channel */
 542:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg |= ADC_Channel;
 399              		.loc 1 542 0
 400 00da 1943     		orrs	r1, r1, r3	@, tmpreg, ADC_Channel, tmpreg
 401              	.LVL32:
 543:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 544:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Store the new register value */
 545:.\stm32f4periph\src/stm32f4xx_adc.c ****   ADCx->CR1 = tmpreg;
 402              		.loc 1 545 0
 403 00dc 4160     		str	r1, [r0, #4]	@ tmpreg, ADCx_2(D)->CR1
 404 00de 7047     		bx	lr	@
 405              		.cfi_endproc
 406              	.LFE118:
 407              		.size	ADC_AnalogWatchdogSingleChannelConfig, .-ADC_AnalogWatchdogSingleChannelConfig
 408              		.align	1
 409              		.global	ADC_TempSensorVrefintCmd
 410              		.thumb
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 18


 411              		.thumb_func
 412              		.type	ADC_TempSensorVrefintCmd, %function
 413              	ADC_TempSensorVrefintCmd:
 414              	.LFB119:
 546:.\stm32f4periph\src/stm32f4xx_adc.c **** }
 547:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
 548:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @}
 549:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
 550:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 551:.\stm32f4periph\src/stm32f4xx_adc.c **** /** @defgroup ADC_Group3 Temperature Sensor, Vrefint (Voltage Reference internal) 
 552:.\stm32f4periph\src/stm32f4xx_adc.c ****  *            and VBAT (Voltage BATtery) management functions
 553:.\stm32f4periph\src/stm32f4xx_adc.c ****  *  @brief   Temperature Sensor, Vrefint and VBAT management functions 
 554:.\stm32f4periph\src/stm32f4xx_adc.c ****  *
 555:.\stm32f4periph\src/stm32f4xx_adc.c **** @verbatim   
 556:.\stm32f4periph\src/stm32f4xx_adc.c ****  ===============================================================================
 557:.\stm32f4periph\src/stm32f4xx_adc.c ****                Temperature Sensor, Vrefint and VBAT management functions
 558:.\stm32f4periph\src/stm32f4xx_adc.c ****  ===============================================================================  
 559:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 560:.\stm32f4periph\src/stm32f4xx_adc.c ****   This section provides functions allowing to enable/ disable the internal 
 561:.\stm32f4periph\src/stm32f4xx_adc.c ****   connections between the ADC and the Temperature Sensor, the Vrefint and the
 562:.\stm32f4periph\src/stm32f4xx_adc.c ****   Vbat sources.
 563:.\stm32f4periph\src/stm32f4xx_adc.c ****      
 564:.\stm32f4periph\src/stm32f4xx_adc.c ****   A typical configuration to get the Temperature sensor and Vrefint channels 
 565:.\stm32f4periph\src/stm32f4xx_adc.c ****   voltages is done following these steps :
 566:.\stm32f4periph\src/stm32f4xx_adc.c ****    1. Enable the internal connection of Temperature sensor and Vrefint sources 
 567:.\stm32f4periph\src/stm32f4xx_adc.c ****       with the ADC channels using ADC_TempSensorVrefintCmd() function. 
 568:.\stm32f4periph\src/stm32f4xx_adc.c ****    2. Select the ADC_Channel_TempSensor and/or ADC_Channel_Vrefint using 
 569:.\stm32f4periph\src/stm32f4xx_adc.c ****       ADC_RegularChannelConfig() or  ADC_InjectedChannelConfig() functions 
 570:.\stm32f4periph\src/stm32f4xx_adc.c ****    3. Get the voltage values, using ADC_GetConversionValue() or  
 571:.\stm32f4periph\src/stm32f4xx_adc.c ****       ADC_GetInjectedConversionValue().
 572:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 573:.\stm32f4periph\src/stm32f4xx_adc.c ****   A typical configuration to get the VBAT channel voltage is done following 
 574:.\stm32f4periph\src/stm32f4xx_adc.c ****   these steps :
 575:.\stm32f4periph\src/stm32f4xx_adc.c ****    1. Enable the internal connection of VBAT source with the ADC channel using 
 576:.\stm32f4periph\src/stm32f4xx_adc.c ****       ADC_VBATCmd() function. 
 577:.\stm32f4periph\src/stm32f4xx_adc.c ****    2. Select the ADC_Channel_Vbat using ADC_RegularChannelConfig() or  
 578:.\stm32f4periph\src/stm32f4xx_adc.c ****       ADC_InjectedChannelConfig() functions 
 579:.\stm32f4periph\src/stm32f4xx_adc.c ****    3. Get the voltage value, using ADC_GetConversionValue() or  
 580:.\stm32f4periph\src/stm32f4xx_adc.c ****       ADC_GetInjectedConversionValue().
 581:.\stm32f4periph\src/stm32f4xx_adc.c ****  
 582:.\stm32f4periph\src/stm32f4xx_adc.c **** @endverbatim
 583:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @{
 584:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
 585:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 586:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 587:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
 588:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Enables or disables the temperature sensor and Vrefint channels.
 589:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  NewState: new state of the temperature sensor and Vrefint channels.
 590:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
 591:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval None
 592:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
 593:.\stm32f4periph\src/stm32f4xx_adc.c **** void ADC_TempSensorVrefintCmd(FunctionalState NewState)                
 594:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 415              		.loc 1 594 0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 19


 419              		@ link register save eliminated.
 420              	.LVL33:
 421 00e0 044B     		ldr	r3, .L21	@ tmp143,
 595:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
 596:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 597:.\stm32f4periph\src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 598:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
 599:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Enable the temperature sensor and Vrefint channel*/
 600:.\stm32f4periph\src/stm32f4xx_adc.c ****     ADC->CCR |= (uint32_t)ADC_CCR_TSVREFE;
 422              		.loc 1 600 0
 423 00e2 5A68     		ldr	r2, [r3, #4]	@ D.7659,
 597:.\stm32f4periph\src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 424              		.loc 1 597 0
 425 00e4 10B1     		cbz	r0, .L18	@ NewState,
 426              		.loc 1 600 0
 427 00e6 42F40002 		orr	r2, r2, #8388608	@ D.7660, D.7659,
 428 00ea 01E0     		b	.L20	@
 429              	.L18:
 601:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
 602:.\stm32f4periph\src/stm32f4xx_adc.c ****   else
 603:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
 604:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Disable the temperature sensor and Vrefint channel*/
 605:.\stm32f4periph\src/stm32f4xx_adc.c ****     ADC->CCR &= (uint32_t)(~ADC_CCR_TSVREFE);
 430              		.loc 1 605 0
 431 00ec 22F40002 		bic	r2, r2, #8388608	@ D.7663, D.7662,
 432              	.L20:
 433 00f0 5A60     		str	r2, [r3, #4]	@ D.7663,
 434 00f2 7047     		bx	lr	@
 435              	.L22:
 436              		.align	2
 437              	.L21:
 438 00f4 00230140 		.word	1073816320
 439              		.cfi_endproc
 440              	.LFE119:
 441              		.size	ADC_TempSensorVrefintCmd, .-ADC_TempSensorVrefintCmd
 442              		.align	1
 443              		.global	ADC_VBATCmd
 444              		.thumb
 445              		.thumb_func
 446              		.type	ADC_VBATCmd, %function
 447              	ADC_VBATCmd:
 448              	.LFB120:
 606:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
 607:.\stm32f4periph\src/stm32f4xx_adc.c **** }
 608:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 609:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
 610:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Enables or disables the VBAT (Voltage Battery) channel.
 611:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  NewState: new state of the VBAT channel.
 612:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
 613:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval None
 614:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
 615:.\stm32f4periph\src/stm32f4xx_adc.c **** void ADC_VBATCmd(FunctionalState NewState)                             
 616:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 449              		.loc 1 616 0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 20


 453              		@ link register save eliminated.
 454              	.LVL34:
 455 00f8 044B     		ldr	r3, .L27	@ tmp143,
 617:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
 618:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 619:.\stm32f4periph\src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 620:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
 621:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Enable the VBAT channel*/
 622:.\stm32f4periph\src/stm32f4xx_adc.c ****     ADC->CCR |= (uint32_t)ADC_CCR_VBATE;
 456              		.loc 1 622 0
 457 00fa 5A68     		ldr	r2, [r3, #4]	@ D.7651,
 619:.\stm32f4periph\src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 458              		.loc 1 619 0
 459 00fc 10B1     		cbz	r0, .L24	@ NewState,
 460              		.loc 1 622 0
 461 00fe 42F48002 		orr	r2, r2, #4194304	@ D.7652, D.7651,
 462 0102 01E0     		b	.L26	@
 463              	.L24:
 623:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
 624:.\stm32f4periph\src/stm32f4xx_adc.c ****   else
 625:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
 626:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Disable the VBAT channel*/
 627:.\stm32f4periph\src/stm32f4xx_adc.c ****     ADC->CCR &= (uint32_t)(~ADC_CCR_VBATE);
 464              		.loc 1 627 0
 465 0104 22F48002 		bic	r2, r2, #4194304	@ D.7655, D.7654,
 466              	.L26:
 467 0108 5A60     		str	r2, [r3, #4]	@ D.7655,
 468 010a 7047     		bx	lr	@
 469              	.L28:
 470              		.align	2
 471              	.L27:
 472 010c 00230140 		.word	1073816320
 473              		.cfi_endproc
 474              	.LFE120:
 475              		.size	ADC_VBATCmd, .-ADC_VBATCmd
 476              		.align	1
 477              		.global	ADC_RegularChannelConfig
 478              		.thumb
 479              		.thumb_func
 480              		.type	ADC_RegularChannelConfig, %function
 481              	ADC_RegularChannelConfig:
 482              	.LFB121:
 628:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
 629:.\stm32f4periph\src/stm32f4xx_adc.c **** }
 630:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 631:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
 632:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @}
 633:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
 634:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 635:.\stm32f4periph\src/stm32f4xx_adc.c **** /** @defgroup ADC_Group4 Regular Channels Configuration functions
 636:.\stm32f4periph\src/stm32f4xx_adc.c ****  *  @brief   Regular Channels Configuration functions 
 637:.\stm32f4periph\src/stm32f4xx_adc.c ****  *
 638:.\stm32f4periph\src/stm32f4xx_adc.c **** @verbatim   
 639:.\stm32f4periph\src/stm32f4xx_adc.c ****  ===============================================================================
 640:.\stm32f4periph\src/stm32f4xx_adc.c ****                   Regular Channels Configuration functions
 641:.\stm32f4periph\src/stm32f4xx_adc.c ****  ===============================================================================  
 642:.\stm32f4periph\src/stm32f4xx_adc.c **** 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 21


 643:.\stm32f4periph\src/stm32f4xx_adc.c ****   This section provides functions allowing to manage the ADC's regular channels,
 644:.\stm32f4periph\src/stm32f4xx_adc.c ****   it is composed of 2 sub sections : 
 645:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 646:.\stm32f4periph\src/stm32f4xx_adc.c ****   1. Configuration and management functions for regular channels: This subsection 
 647:.\stm32f4periph\src/stm32f4xx_adc.c ****      provides functions allowing to configure the ADC regular channels :    
 648:.\stm32f4periph\src/stm32f4xx_adc.c ****           - Configure the rank in the regular group sequencer for each channel
 649:.\stm32f4periph\src/stm32f4xx_adc.c ****           - Configure the sampling time for each channel
 650:.\stm32f4periph\src/stm32f4xx_adc.c ****           - select the conversion Trigger for regular channels
 651:.\stm32f4periph\src/stm32f4xx_adc.c ****           - select the desired EOC event behavior configuration
 652:.\stm32f4periph\src/stm32f4xx_adc.c ****           - Activate the continuous Mode  (*)
 653:.\stm32f4periph\src/stm32f4xx_adc.c ****           - Activate the Discontinuous Mode 
 654:.\stm32f4periph\src/stm32f4xx_adc.c ****      Please Note that the following features for regular channels are configurated
 655:.\stm32f4periph\src/stm32f4xx_adc.c ****      using the ADC_Init() function : 
 656:.\stm32f4periph\src/stm32f4xx_adc.c ****           - scan mode activation 
 657:.\stm32f4periph\src/stm32f4xx_adc.c ****           - continuous mode activation (**) 
 658:.\stm32f4periph\src/stm32f4xx_adc.c ****           - External trigger source  
 659:.\stm32f4periph\src/stm32f4xx_adc.c ****           - External trigger edge 
 660:.\stm32f4periph\src/stm32f4xx_adc.c ****           - number of conversion in the regular channels group sequencer.
 661:.\stm32f4periph\src/stm32f4xx_adc.c ****      
 662:.\stm32f4periph\src/stm32f4xx_adc.c ****      @note (*) and (**) are performing the same configuration
 663:.\stm32f4periph\src/stm32f4xx_adc.c ****      
 664:.\stm32f4periph\src/stm32f4xx_adc.c ****   2. Get the conversion data: This subsection provides an important function in 
 665:.\stm32f4periph\src/stm32f4xx_adc.c ****      the ADC peripheral since it returns the converted data of the current 
 666:.\stm32f4periph\src/stm32f4xx_adc.c ****      regular channel. When the Conversion value is read, the EOC Flag is 
 667:.\stm32f4periph\src/stm32f4xx_adc.c ****      automatically cleared.
 668:.\stm32f4periph\src/stm32f4xx_adc.c ****      
 669:.\stm32f4periph\src/stm32f4xx_adc.c ****      @note For multi ADC mode, the last ADC1, ADC2 and ADC3 regular conversions 
 670:.\stm32f4periph\src/stm32f4xx_adc.c ****            results data (in the selected multi mode) can be returned in the same 
 671:.\stm32f4periph\src/stm32f4xx_adc.c ****            time using ADC_GetMultiModeConversionValue() function. 
 672:.\stm32f4periph\src/stm32f4xx_adc.c ****        
 673:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 674:.\stm32f4periph\src/stm32f4xx_adc.c **** @endverbatim
 675:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @{
 676:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
 677:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
 678:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Configures for the selected ADC regular channel its corresponding
 679:.\stm32f4periph\src/stm32f4xx_adc.c ****   *         rank in the sequencer and its sample time.
 680:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 681:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADC_Channel: the ADC channel to configure. 
 682:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
 683:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_0: ADC Channel0 selected
 684:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_1: ADC Channel1 selected
 685:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_2: ADC Channel2 selected
 686:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_3: ADC Channel3 selected
 687:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_4: ADC Channel4 selected
 688:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_5: ADC Channel5 selected
 689:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_6: ADC Channel6 selected
 690:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_7: ADC Channel7 selected
 691:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_8: ADC Channel8 selected
 692:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_9: ADC Channel9 selected
 693:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_10: ADC Channel10 selected
 694:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_11: ADC Channel11 selected
 695:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_12: ADC Channel12 selected
 696:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_13: ADC Channel13 selected
 697:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_14: ADC Channel14 selected
 698:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_15: ADC Channel15 selected
 699:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_16: ADC Channel16 selected
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 22


 700:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_17: ADC Channel17 selected
 701:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_18: ADC Channel18 selected                       
 702:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  Rank: The rank in the regular group sequencer.
 703:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter must be between 1 to 16.
 704:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADC_SampleTime: The sample time value to be set for the selected channel. 
 705:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
 706:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_3Cycles: Sample time equal to 3 cycles
 707:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_15Cycles: Sample time equal to 15 cycles
 708:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_28Cycles: Sample time equal to 28 cycles
 709:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_56Cycles: Sample time equal to 56 cycles	
 710:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_84Cycles: Sample time equal to 84 cycles	
 711:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_112Cycles: Sample time equal to 112 cycles	
 712:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_144Cycles: Sample time equal to 144 cycles	
 713:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_480Cycles: Sample time equal to 480 cycles	
 714:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval None
 715:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
 716:.\stm32f4periph\src/stm32f4xx_adc.c **** void ADC_RegularChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_Sam
 717:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 483              		.loc 1 717 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 0
 486              		@ frame_needed = 0, uses_anonymous_args = 0
 487              	.LVL35:
 718:.\stm32f4periph\src/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0;
 719:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
 720:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 721:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 722:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(Rank));
 723:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(ADC_SampleTime));
 724:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 725:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
 726:.\stm32f4periph\src/stm32f4xx_adc.c ****   if (ADC_Channel > ADC_Channel_9)
 488              		.loc 1 726 0
 489 0110 0929     		cmp	r1, #9	@ ADC_Channel,
 717:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 490              		.loc 1 717 0
 491 0112 70B5     		push	{r4, r5, r6, lr}	@
 492              	.LCFI3:
 493              		.cfi_def_cfa_offset 16
 494              		.cfi_offset 4, -16
 495              		.cfi_offset 5, -12
 496              		.cfi_offset 6, -8
 497              		.cfi_offset 14, -4
 498 0114 0CB2     		sxth	r4, r1	@ ADC_Channel, ADC_Channel
 499              		.loc 1 726 0
 500 0116 0ED9     		bls	.L30	@,
 727:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
 728:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Get the old register value */
 729:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SMPR1;
 730:.\stm32f4periph\src/stm32f4xx_adc.c ****     
 731:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
 732:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg2 = SMPR1_SMP_SET << (3 * (ADC_Channel - 10));
 501              		.loc 1 732 0
 502 0118 04EB4404 		add	r4, r4, r4, lsl #1	@, tmp198, ADC_Channel, ADC_Channel,
 503 011c 1E3C     		subs	r4, r4, #30	@ D.7631, tmp198,
 729:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SMPR1;
 504              		.loc 1 729 0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 23


 505 011e C668     		ldr	r6, [r0, #12]	@ tmpreg1, ADCx_4(D)->SMPR1
 506              	.LVL36:
 507              		.loc 1 732 0
 508 0120 0725     		movs	r5, #7	@ tmp200,
 509 0122 05FA04F5 		lsl	r5, r5, r4	@ tmp199, tmp200, D.7631
 510              	.LVL37:
 733:.\stm32f4periph\src/stm32f4xx_adc.c ****     
 734:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Clear the old sample time */
 735:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 511              		.loc 1 735 0
 512 0126 26EA0505 		bic	r5, r6, r5	@ tmpreg1, tmpreg1, tmp199
 513              	.LVL38:
 736:.\stm32f4periph\src/stm32f4xx_adc.c ****     
 737:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
 738:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * (ADC_Channel - 10));
 514              		.loc 1 738 0
 515 012a 03FA04F3 		lsl	r3, r3, r4	@ tmp202, ADC_SampleTime, D.7631
 516              	.LVL39:
 739:.\stm32f4periph\src/stm32f4xx_adc.c ****     
 740:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Set the new sample time */
 741:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 517              		.loc 1 741 0
 518 012e 45EA0304 		orr	r4, r5, r3	@ tmpreg1, tmpreg1, tmp202
 519              	.LVL40:
 742:.\stm32f4periph\src/stm32f4xx_adc.c ****     
 743:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Store the new register value */
 744:.\stm32f4periph\src/stm32f4xx_adc.c ****     ADCx->SMPR1 = tmpreg1;
 520              		.loc 1 744 0
 521 0132 C460     		str	r4, [r0, #12]	@ tmpreg1, ADCx_4(D)->SMPR1
 522 0134 0BE0     		b	.L31	@
 523              	.LVL41:
 524              	.L30:
 745:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
 746:.\stm32f4periph\src/stm32f4xx_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
 747:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
 748:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Get the old register value */
 749:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SMPR2;
 525              		.loc 1 749 0
 526 0136 0669     		ldr	r6, [r0, #16]	@ tmpreg1, ADCx_4(D)->SMPR2
 527              	.LVL42:
 750:.\stm32f4periph\src/stm32f4xx_adc.c ****     
 751:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
 752:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg2 = SMPR2_SMP_SET << (3 * ADC_Channel);
 528              		.loc 1 752 0
 529 0138 04EB4404 		add	r4, r4, r4, lsl #1	@, tmp206, ADC_Channel, ADC_Channel,
 530              	.LVL43:
 531 013c 0725     		movs	r5, #7	@ tmp208,
 532 013e 05FA04F5 		lsl	r5, r5, r4	@ tmp207, tmp208, tmp206
 533              	.LVL44:
 753:.\stm32f4periph\src/stm32f4xx_adc.c ****     
 754:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Clear the old sample time */
 755:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 534              		.loc 1 755 0
 535 0142 26EA0505 		bic	r5, r6, r5	@ tmpreg1, tmpreg1, tmp207
 536              	.LVL45:
 756:.\stm32f4periph\src/stm32f4xx_adc.c ****     
 757:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 24


 758:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * ADC_Channel);
 537              		.loc 1 758 0
 538 0146 03FA04F4 		lsl	r4, r3, r4	@ tmp210, ADC_SampleTime, tmp206
 539              	.LVL46:
 759:.\stm32f4periph\src/stm32f4xx_adc.c ****     
 760:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Set the new sample time */
 761:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 540              		.loc 1 761 0
 541 014a 2C43     		orrs	r4, r4, r5	@, tmpreg1, tmp210, tmpreg1
 542              	.LVL47:
 762:.\stm32f4periph\src/stm32f4xx_adc.c ****     
 763:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Store the new register value */
 764:.\stm32f4periph\src/stm32f4xx_adc.c ****     ADCx->SMPR2 = tmpreg1;
 543              		.loc 1 764 0
 544 014c 0461     		str	r4, [r0, #16]	@ tmpreg1, ADCx_4(D)->SMPR2
 545              	.LVL48:
 546              	.L31:
 765:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
 766:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* For Rank 1 to 6 */
 767:.\stm32f4periph\src/stm32f4xx_adc.c ****   if (Rank < 7)
 547              		.loc 1 767 0
 548 014e 062A     		cmp	r2, #6	@ Rank,
 549 0150 0ED8     		bhi	.L32	@,
 768:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
 769:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Get the old register value */
 770:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SQR3;
 771:.\stm32f4periph\src/stm32f4xx_adc.c ****     
 772:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
 773:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg2 = SQR3_SQ_SET << (5 * (Rank - 1));
 550              		.loc 1 773 0
 551 0152 0523     		movs	r3, #5	@ tmp212,
 552 0154 013A     		subs	r2, r2, #1	@ tmp211, Rank,
 553              	.LVL49:
 554 0156 5A43     		muls	r2, r3, r2	@ D.7639, tmp212
 770:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SQR3;
 555              		.loc 1 770 0
 556 0158 446B     		ldr	r4, [r0, #52]	@ tmpreg1, ADCx_4(D)->SQR3
 557              	.LVL50:
 558              		.loc 1 773 0
 559 015a 1F23     		movs	r3, #31	@ tmp214,
 560 015c 03FA02F3 		lsl	r3, r3, r2	@ tmp213, tmp214, D.7639
 561              	.LVL51:
 774:.\stm32f4periph\src/stm32f4xx_adc.c ****     
 775:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Clear the old SQx bits for the selected rank */
 776:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 562              		.loc 1 776 0
 563 0160 24EA0303 		bic	r3, r4, r3	@ tmpreg1, tmpreg1, tmp213
 564              	.LVL52:
 777:.\stm32f4periph\src/stm32f4xx_adc.c ****     
 778:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
 779:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 1));
 565              		.loc 1 779 0
 566 0164 01FA02F1 		lsl	r1, r1, r2	@ tmp216, ADC_Channel, D.7639
 567              	.LVL53:
 780:.\stm32f4periph\src/stm32f4xx_adc.c ****     
 781:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Set the SQx bits for the selected rank */
 782:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 25


 568              		.loc 1 782 0
 569 0168 43EA0102 		orr	r2, r3, r1	@ tmpreg1, tmpreg1, tmp216
 570              	.LVL54:
 783:.\stm32f4periph\src/stm32f4xx_adc.c ****     
 784:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Store the new register value */
 785:.\stm32f4periph\src/stm32f4xx_adc.c ****     ADCx->SQR3 = tmpreg1;
 571              		.loc 1 785 0
 572 016c 4263     		str	r2, [r0, #52]	@ tmpreg1, ADCx_4(D)->SQR3
 573 016e 70BD     		pop	{r4, r5, r6, pc}	@
 574              	.LVL55:
 575              	.L32:
 786:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
 787:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* For Rank 7 to 12 */
 788:.\stm32f4periph\src/stm32f4xx_adc.c ****   else if (Rank < 13)
 576              		.loc 1 788 0
 577 0170 0C2A     		cmp	r2, #12	@ Rank,
 578 0172 12B2     		sxth	r2, r2	@ Rank, Rank
 579              	.LVL56:
 580 0174 0ED8     		bhi	.L34	@,
 789:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
 790:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Get the old register value */
 791:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SQR2;
 792:.\stm32f4periph\src/stm32f4xx_adc.c ****     
 793:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
 794:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg2 = SQR2_SQ_SET << (5 * (Rank - 7));
 581              		.loc 1 794 0
 582 0176 02EB8202 		add	r2, r2, r2, lsl #2	@, tmp220, Rank, Rank,
 583 017a 233A     		subs	r2, r2, #35	@ D.7645, tmp220,
 791:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SQR2;
 584              		.loc 1 791 0
 585 017c 046B     		ldr	r4, [r0, #48]	@ tmpreg1, ADCx_4(D)->SQR2
 586              	.LVL57:
 587              		.loc 1 794 0
 588 017e 1F23     		movs	r3, #31	@ tmp222,
 589 0180 03FA02F3 		lsl	r3, r3, r2	@ tmp221, tmp222, D.7645
 590              	.LVL58:
 795:.\stm32f4periph\src/stm32f4xx_adc.c ****     
 796:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Clear the old SQx bits for the selected rank */
 797:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 591              		.loc 1 797 0
 592 0184 24EA0303 		bic	r3, r4, r3	@ tmpreg1, tmpreg1, tmp221
 593              	.LVL59:
 798:.\stm32f4periph\src/stm32f4xx_adc.c ****     
 799:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
 800:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 7));
 594              		.loc 1 800 0
 595 0188 01FA02F1 		lsl	r1, r1, r2	@ tmp224, ADC_Channel, D.7645
 596              	.LVL60:
 801:.\stm32f4periph\src/stm32f4xx_adc.c ****     
 802:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Set the SQx bits for the selected rank */
 803:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 597              		.loc 1 803 0
 598 018c 43EA0102 		orr	r2, r3, r1	@ tmpreg1, tmpreg1, tmp224
 599              	.LVL61:
 804:.\stm32f4periph\src/stm32f4xx_adc.c ****     
 805:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Store the new register value */
 806:.\stm32f4periph\src/stm32f4xx_adc.c ****     ADCx->SQR2 = tmpreg1;
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 26


 600              		.loc 1 806 0
 601 0190 0263     		str	r2, [r0, #48]	@ tmpreg1, ADCx_4(D)->SQR2
 602 0192 70BD     		pop	{r4, r5, r6, pc}	@
 603              	.LVL62:
 604              	.L34:
 807:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
 808:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* For Rank 13 to 16 */
 809:.\stm32f4periph\src/stm32f4xx_adc.c ****   else
 810:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
 811:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Get the old register value */
 812:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SQR1;
 813:.\stm32f4periph\src/stm32f4xx_adc.c ****     
 814:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
 815:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg2 = SQR1_SQ_SET << (5 * (Rank - 13));
 605              		.loc 1 815 0
 606 0194 02EB8202 		add	r2, r2, r2, lsl #2	@, tmp228, Rank, Rank,
 607 0198 413A     		subs	r2, r2, #65	@ D.7647, tmp228,
 812:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SQR1;
 608              		.loc 1 812 0
 609 019a C46A     		ldr	r4, [r0, #44]	@ tmpreg1, ADCx_4(D)->SQR1
 610              	.LVL63:
 611              		.loc 1 815 0
 612 019c 1F23     		movs	r3, #31	@ tmp230,
 613 019e 03FA02F3 		lsl	r3, r3, r2	@ tmp229, tmp230, D.7647
 614              	.LVL64:
 816:.\stm32f4periph\src/stm32f4xx_adc.c ****     
 817:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Clear the old SQx bits for the selected rank */
 818:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 615              		.loc 1 818 0
 616 01a2 24EA0303 		bic	r3, r4, r3	@ tmpreg1, tmpreg1, tmp229
 617              	.LVL65:
 819:.\stm32f4periph\src/stm32f4xx_adc.c ****     
 820:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
 821:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 13));
 618              		.loc 1 821 0
 619 01a6 01FA02F1 		lsl	r1, r1, r2	@ tmp232, ADC_Channel, D.7647
 620              	.LVL66:
 822:.\stm32f4periph\src/stm32f4xx_adc.c ****     
 823:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Set the SQx bits for the selected rank */
 824:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 621              		.loc 1 824 0
 622 01aa 43EA0102 		orr	r2, r3, r1	@ tmpreg1, tmpreg1, tmp232
 623              	.LVL67:
 825:.\stm32f4periph\src/stm32f4xx_adc.c ****     
 826:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Store the new register value */
 827:.\stm32f4periph\src/stm32f4xx_adc.c ****     ADCx->SQR1 = tmpreg1;
 624              		.loc 1 827 0
 625 01ae C262     		str	r2, [r0, #44]	@ tmpreg1, ADCx_4(D)->SQR1
 626 01b0 70BD     		pop	{r4, r5, r6, pc}	@
 627              		.cfi_endproc
 628              	.LFE121:
 629              		.size	ADC_RegularChannelConfig, .-ADC_RegularChannelConfig
 630              		.align	1
 631              		.global	ADC_SoftwareStartConv
 632              		.thumb
 633              		.thumb_func
 634              		.type	ADC_SoftwareStartConv, %function
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 27


 635              	ADC_SoftwareStartConv:
 636              	.LFB122:
 828:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
 829:.\stm32f4periph\src/stm32f4xx_adc.c **** }
 830:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 831:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
 832:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Enables the selected ADC software start conversion of the regular channels.
 833:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 834:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval None
 835:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
 836:.\stm32f4periph\src/stm32f4xx_adc.c **** void ADC_SoftwareStartConv(ADC_TypeDef* ADCx)
 837:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 637              		.loc 1 837 0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 0
 640              		@ frame_needed = 0, uses_anonymous_args = 0
 641              		@ link register save eliminated.
 642              	.LVL68:
 838:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
 839:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 840:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 841:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Enable the selected ADC conversion for regular group */
 842:.\stm32f4periph\src/stm32f4xx_adc.c ****   ADCx->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 643              		.loc 1 842 0
 644 01b2 8368     		ldr	r3, [r0, #8]	@ D.7625, ADCx_1(D)->CR2
 645 01b4 43F08043 		orr	r3, r3, #1073741824	@ D.7626, D.7625,
 646 01b8 8360     		str	r3, [r0, #8]	@ D.7626, ADCx_1(D)->CR2
 647 01ba 7047     		bx	lr	@
 648              		.cfi_endproc
 649              	.LFE122:
 650              		.size	ADC_SoftwareStartConv, .-ADC_SoftwareStartConv
 651              		.align	1
 652              		.global	ADC_GetSoftwareStartConvStatus
 653              		.thumb
 654              		.thumb_func
 655              		.type	ADC_GetSoftwareStartConvStatus, %function
 656              	ADC_GetSoftwareStartConvStatus:
 657              	.LFB123:
 843:.\stm32f4periph\src/stm32f4xx_adc.c **** }
 844:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 845:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
 846:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Gets the selected ADC Software start regular conversion Status.
 847:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 848:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval The new state of ADC software start conversion (SET or RESET).
 849:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
 850:.\stm32f4periph\src/stm32f4xx_adc.c **** FlagStatus ADC_GetSoftwareStartConvStatus(ADC_TypeDef* ADCx)
 851:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 658              		.loc 1 851 0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 0
 661              		@ frame_needed = 0, uses_anonymous_args = 0
 662              		@ link register save eliminated.
 663              	.LVL69:
 852:.\stm32f4periph\src/stm32f4xx_adc.c ****   FlagStatus bitstatus = RESET;
 853:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
 854:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 855:.\stm32f4periph\src/stm32f4xx_adc.c ****   
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 28


 856:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the status of SWSTART bit */
 857:.\stm32f4periph\src/stm32f4xx_adc.c ****   if ((ADCx->CR2 & ADC_CR2_JSWSTART) != (uint32_t)RESET)
 664              		.loc 1 857 0
 665 01bc 8068     		ldr	r0, [r0, #8]	@ D.7618, ADCx_3(D)->CR2
 666              	.LVL70:
 858:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
 859:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* SWSTART bit is set */
 860:.\stm32f4periph\src/stm32f4xx_adc.c ****     bitstatus = SET;
 861:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
 862:.\stm32f4periph\src/stm32f4xx_adc.c ****   else
 863:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
 864:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* SWSTART bit is reset */
 865:.\stm32f4periph\src/stm32f4xx_adc.c ****     bitstatus = RESET;
 866:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
 867:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 868:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Return the SWSTART bit status */
 869:.\stm32f4periph\src/stm32f4xx_adc.c ****   return  bitstatus;
 870:.\stm32f4periph\src/stm32f4xx_adc.c **** }
 667              		.loc 1 870 0
 668 01be C0F38050 		ubfx	r0, r0, #22, #1	@, D.7618,,
 669              	.LVL71:
 670 01c2 7047     		bx	lr	@
 671              		.cfi_endproc
 672              	.LFE123:
 673              		.size	ADC_GetSoftwareStartConvStatus, .-ADC_GetSoftwareStartConvStatus
 674              		.align	1
 675              		.global	ADC_EOCOnEachRegularChannelCmd
 676              		.thumb
 677              		.thumb_func
 678              		.type	ADC_EOCOnEachRegularChannelCmd, %function
 679              	ADC_EOCOnEachRegularChannelCmd:
 680              	.LFB124:
 871:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 872:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 873:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
 874:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Enables or disables the EOC on each regular channel conversion
 875:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 876:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC EOC flag rising
 877:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
 878:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval None
 879:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
 880:.\stm32f4periph\src/stm32f4xx_adc.c **** void ADC_EOCOnEachRegularChannelCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 881:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 681              		.loc 1 881 0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 0
 684              		@ frame_needed = 0, uses_anonymous_args = 0
 685              		@ link register save eliminated.
 686              	.LVL72:
 882:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
 883:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 884:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 885:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 886:.\stm32f4periph\src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 887:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
 888:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Enable the selected ADC EOC rising on each regular channel conversion */
 889:.\stm32f4periph\src/stm32f4xx_adc.c ****     ADCx->CR2 |= (uint32_t)ADC_CR2_EOCS;
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 29


 687              		.loc 1 889 0
 688 01c4 8368     		ldr	r3, [r0, #8]	@ D.7613,
 886:.\stm32f4periph\src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 689              		.loc 1 886 0
 690 01c6 11B1     		cbz	r1, .L38	@ NewState,
 691              		.loc 1 889 0
 692 01c8 43F48063 		orr	r3, r3, #1024	@ D.7614, D.7613,
 693 01cc 01E0     		b	.L40	@
 694              	.L38:
 890:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
 891:.\stm32f4periph\src/stm32f4xx_adc.c ****   else
 892:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
 893:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Disable the selected ADC EOC rising on each regular channel conversion */
 894:.\stm32f4periph\src/stm32f4xx_adc.c ****     ADCx->CR2 &= (uint32_t)(~ADC_CR2_EOCS);
 695              		.loc 1 894 0
 696 01ce 23F48063 		bic	r3, r3, #1024	@ D.7617, D.7616,
 697              	.L40:
 698 01d2 8360     		str	r3, [r0, #8]	@ D.7617,
 699 01d4 7047     		bx	lr	@
 700              		.cfi_endproc
 701              	.LFE124:
 702              		.size	ADC_EOCOnEachRegularChannelCmd, .-ADC_EOCOnEachRegularChannelCmd
 703              		.align	1
 704              		.global	ADC_ContinuousModeCmd
 705              		.thumb
 706              		.thumb_func
 707              		.type	ADC_ContinuousModeCmd, %function
 708              	ADC_ContinuousModeCmd:
 709              	.LFB125:
 895:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
 896:.\stm32f4periph\src/stm32f4xx_adc.c **** }
 897:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 898:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
 899:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Enables or disables the ADC continuous conversion mode 
 900:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 901:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC continuous conversion mode
 902:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
 903:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval None
 904:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
 905:.\stm32f4periph\src/stm32f4xx_adc.c **** void ADC_ContinuousModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 906:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 710              		.loc 1 906 0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 0
 713              		@ frame_needed = 0, uses_anonymous_args = 0
 714              		@ link register save eliminated.
 715              	.LVL73:
 907:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
 908:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 909:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 910:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 911:.\stm32f4periph\src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 912:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
 913:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Enable the selected ADC continuous conversion mode */
 914:.\stm32f4periph\src/stm32f4xx_adc.c ****     ADCx->CR2 |= (uint32_t)ADC_CR2_CONT;
 716              		.loc 1 914 0
 717 01d6 8368     		ldr	r3, [r0, #8]	@ D.7606,
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 30


 911:.\stm32f4periph\src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 718              		.loc 1 911 0
 719 01d8 11B1     		cbz	r1, .L42	@ NewState,
 720              		.loc 1 914 0
 721 01da 43F00203 		orr	r3, r3, #2	@ D.7607, D.7606,
 722 01de 01E0     		b	.L44	@
 723              	.L42:
 915:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
 916:.\stm32f4periph\src/stm32f4xx_adc.c ****   else
 917:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
 918:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Disable the selected ADC continuous conversion mode */
 919:.\stm32f4periph\src/stm32f4xx_adc.c ****     ADCx->CR2 &= (uint32_t)(~ADC_CR2_CONT);
 724              		.loc 1 919 0
 725 01e0 23F00203 		bic	r3, r3, #2	@ D.7610, D.7609,
 726              	.L44:
 727 01e4 8360     		str	r3, [r0, #8]	@ D.7610,
 728 01e6 7047     		bx	lr	@
 729              		.cfi_endproc
 730              	.LFE125:
 731              		.size	ADC_ContinuousModeCmd, .-ADC_ContinuousModeCmd
 732              		.align	1
 733              		.global	ADC_DiscModeChannelCountConfig
 734              		.thumb
 735              		.thumb_func
 736              		.type	ADC_DiscModeChannelCountConfig, %function
 737              	ADC_DiscModeChannelCountConfig:
 738              	.LFB126:
 920:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
 921:.\stm32f4periph\src/stm32f4xx_adc.c **** }
 922:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 923:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
 924:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Configures the discontinuous mode for the selected ADC regular group 
 925:.\stm32f4periph\src/stm32f4xx_adc.c ****   *         channel.
 926:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 927:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  Number: specifies the discontinuous mode regular channel count value.
 928:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This number must be between 1 and 8.
 929:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval None
 930:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
 931:.\stm32f4periph\src/stm32f4xx_adc.c **** void ADC_DiscModeChannelCountConfig(ADC_TypeDef* ADCx, uint8_t Number)
 932:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 739              		.loc 1 932 0
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 0
 742              		@ frame_needed = 0, uses_anonymous_args = 0
 743              		@ link register save eliminated.
 744              	.LVL74:
 933:.\stm32f4periph\src/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0;
 934:.\stm32f4periph\src/stm32f4xx_adc.c ****   uint32_t tmpreg2 = 0;
 935:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 936:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
 937:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 938:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_REGULAR_DISC_NUMBER(Number));
 939:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 940:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Get the old register value */
 941:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 = ADCx->CR1;
 745              		.loc 1 941 0
 746 01e8 4368     		ldr	r3, [r0, #4]	@ tmpreg1, ADCx_3(D)->CR1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 31


 747              	.LVL75:
 942:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 943:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Clear the old discontinuous mode channel count */
 944:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 &= CR1_DISCNUM_RESET;
 945:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 946:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Set the discontinuous mode channel count */
 947:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg2 = Number - 1;
 748              		.loc 1 947 0
 749 01ea 0139     		subs	r1, r1, #1	@ tmp143, Number,
 750              	.LVL76:
 944:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 &= CR1_DISCNUM_RESET;
 751              		.loc 1 944 0
 752 01ec 23F46043 		bic	r3, r3, #57344	@ tmpreg1, tmpreg1,
 753              	.LVL77:
 948:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 |= tmpreg2 << 13;
 754              		.loc 1 948 0
 755 01f0 43EA4133 		orr	r3, r3, r1, lsl #13	@, tmpreg1, tmpreg1, tmp143,
 756              	.LVL78:
 949:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 950:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Store the new register value */
 951:.\stm32f4periph\src/stm32f4xx_adc.c ****   ADCx->CR1 = tmpreg1;
 757              		.loc 1 951 0
 758 01f4 4360     		str	r3, [r0, #4]	@ tmpreg1, ADCx_3(D)->CR1
 759 01f6 7047     		bx	lr	@
 760              		.cfi_endproc
 761              	.LFE126:
 762              		.size	ADC_DiscModeChannelCountConfig, .-ADC_DiscModeChannelCountConfig
 763              		.align	1
 764              		.global	ADC_DiscModeCmd
 765              		.thumb
 766              		.thumb_func
 767              		.type	ADC_DiscModeCmd, %function
 768              	ADC_DiscModeCmd:
 769              	.LFB127:
 952:.\stm32f4periph\src/stm32f4xx_adc.c **** }
 953:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 954:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
 955:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Enables or disables the discontinuous mode on regular group channel 
 956:.\stm32f4periph\src/stm32f4xx_adc.c ****   *         for the specified ADC
 957:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 958:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC discontinuous mode on 
 959:.\stm32f4periph\src/stm32f4xx_adc.c ****   *         regular group channel.
 960:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
 961:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval None
 962:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
 963:.\stm32f4periph\src/stm32f4xx_adc.c **** void ADC_DiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 964:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 770              		.loc 1 964 0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 0
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 774              		@ link register save eliminated.
 775              	.LVL79:
 965:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
 966:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 967:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 968:.\stm32f4periph\src/stm32f4xx_adc.c ****   
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 32


 969:.\stm32f4periph\src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 970:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
 971:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Enable the selected ADC regular discontinuous mode */
 972:.\stm32f4periph\src/stm32f4xx_adc.c ****     ADCx->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 776              		.loc 1 972 0
 777 01f8 4368     		ldr	r3, [r0, #4]	@ D.7596,
 969:.\stm32f4periph\src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 778              		.loc 1 969 0
 779 01fa 11B1     		cbz	r1, .L47	@ NewState,
 780              		.loc 1 972 0
 781 01fc 43F40063 		orr	r3, r3, #2048	@ D.7597, D.7596,
 782 0200 01E0     		b	.L49	@
 783              	.L47:
 973:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
 974:.\stm32f4periph\src/stm32f4xx_adc.c ****   else
 975:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
 976:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Disable the selected ADC regular discontinuous mode */
 977:.\stm32f4periph\src/stm32f4xx_adc.c ****     ADCx->CR1 &= (uint32_t)(~ADC_CR1_DISCEN);
 784              		.loc 1 977 0
 785 0202 23F40063 		bic	r3, r3, #2048	@ D.7600, D.7599,
 786              	.L49:
 787 0206 4360     		str	r3, [r0, #4]	@ D.7600,
 788 0208 7047     		bx	lr	@
 789              		.cfi_endproc
 790              	.LFE127:
 791              		.size	ADC_DiscModeCmd, .-ADC_DiscModeCmd
 792              		.align	1
 793              		.global	ADC_GetConversionValue
 794              		.thumb
 795              		.thumb_func
 796              		.type	ADC_GetConversionValue, %function
 797              	ADC_GetConversionValue:
 798              	.LFB128:
 978:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
 979:.\stm32f4periph\src/stm32f4xx_adc.c **** }
 980:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 981:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
 982:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Returns the last ADCx conversion result data for regular channel.
 983:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 984:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval The Data conversion value.
 985:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
 986:.\stm32f4periph\src/stm32f4xx_adc.c **** uint16_t ADC_GetConversionValue(ADC_TypeDef* ADCx)
 987:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 799              		.loc 1 987 0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 803              		@ link register save eliminated.
 804              	.LVL80:
 988:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
 989:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 990:.\stm32f4periph\src/stm32f4xx_adc.c ****   
 991:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Return the selected ADC conversion value */
 992:.\stm32f4periph\src/stm32f4xx_adc.c ****   return (uint16_t) ADCx->DR;
 805              		.loc 1 992 0
 806 020a C06C     		ldr	r0, [r0, #76]	@ D.7592, ADCx_1(D)->DR
 807              	.LVL81:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 33


 993:.\stm32f4periph\src/stm32f4xx_adc.c **** }
 808              		.loc 1 993 0
 809 020c 80B2     		uxth	r0, r0	@, D.7592
 810 020e 7047     		bx	lr	@
 811              		.cfi_endproc
 812              	.LFE128:
 813              		.size	ADC_GetConversionValue, .-ADC_GetConversionValue
 814              		.align	1
 815              		.global	ADC_GetMultiModeConversionValue
 816              		.thumb
 817              		.thumb_func
 818              		.type	ADC_GetMultiModeConversionValue, %function
 819              	ADC_GetMultiModeConversionValue:
 820              	.LFB129:
 994:.\stm32f4periph\src/stm32f4xx_adc.c **** 
 995:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
 996:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Returns the last ADC1, ADC2 and ADC3 regular conversions results 
 997:.\stm32f4periph\src/stm32f4xx_adc.c ****   *         data in the selected multi mode.
 998:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  None  
 999:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval The Data conversion value.
1000:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @note   In dual mode, the value returned by this function is as following
1001:.\stm32f4periph\src/stm32f4xx_adc.c ****   *           Data[15:0] : these bits contain the regular data of ADC1.
1002:.\stm32f4periph\src/stm32f4xx_adc.c ****   *           Data[31:16]: these bits contain the regular data of ADC2.
1003:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @note   In triple mode, the value returned by this function is as following
1004:.\stm32f4periph\src/stm32f4xx_adc.c ****   *           Data[15:0] : these bits contain alternatively the regular data of ADC1, ADC3 and ADC2
1005:.\stm32f4periph\src/stm32f4xx_adc.c ****   *           Data[31:16]: these bits contain alternatively the regular data of ADC2, ADC1 and ADC3
1006:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
1007:.\stm32f4periph\src/stm32f4xx_adc.c **** uint32_t ADC_GetMultiModeConversionValue(void)
1008:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 821              		.loc 1 1008 0
 822              		.cfi_startproc
 823              		@ args = 0, pretend = 0, frame = 0
 824              		@ frame_needed = 0, uses_anonymous_args = 0
 825              		@ link register save eliminated.
1009:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Return the multi mode conversion value */
1010:.\stm32f4periph\src/stm32f4xx_adc.c ****   return (*(__IO uint32_t *) CDR_ADDRESS);
 826              		.loc 1 1010 0
 827 0210 014B     		ldr	r3, .L52	@ tmp136,
 828 0212 1868     		ldr	r0, [r3, #0]	@ D.7588, MEM[(volatile uint32_t *)1073816328B]
1011:.\stm32f4periph\src/stm32f4xx_adc.c **** }
 829              		.loc 1 1011 0
 830 0214 7047     		bx	lr	@
 831              	.L53:
 832 0216 00BF     		.align	2
 833              	.L52:
 834 0218 08230140 		.word	1073816328
 835              		.cfi_endproc
 836              	.LFE129:
 837              		.size	ADC_GetMultiModeConversionValue, .-ADC_GetMultiModeConversionValue
 838              		.align	1
 839              		.global	ADC_DMACmd
 840              		.thumb
 841              		.thumb_func
 842              		.type	ADC_DMACmd, %function
 843              	ADC_DMACmd:
 844              	.LFB130:
1012:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 34


1013:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @}
1014:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
1015:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1016:.\stm32f4periph\src/stm32f4xx_adc.c **** /** @defgroup ADC_Group5 Regular Channels DMA Configuration functions
1017:.\stm32f4periph\src/stm32f4xx_adc.c ****  *  @brief   Regular Channels DMA Configuration functions 
1018:.\stm32f4periph\src/stm32f4xx_adc.c ****  *
1019:.\stm32f4periph\src/stm32f4xx_adc.c **** @verbatim   
1020:.\stm32f4periph\src/stm32f4xx_adc.c ****  ===============================================================================
1021:.\stm32f4periph\src/stm32f4xx_adc.c ****                    Regular Channels DMA Configuration functions
1022:.\stm32f4periph\src/stm32f4xx_adc.c ****  ===============================================================================  
1023:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1024:.\stm32f4periph\src/stm32f4xx_adc.c ****   This section provides functions allowing to configure the DMA for ADC regular 
1025:.\stm32f4periph\src/stm32f4xx_adc.c ****   channels.
1026:.\stm32f4periph\src/stm32f4xx_adc.c ****   Since converted regular channel values are stored into a unique data register, 
1027:.\stm32f4periph\src/stm32f4xx_adc.c ****   it is useful to use DMA for conversion of more than one regular channel. This 
1028:.\stm32f4periph\src/stm32f4xx_adc.c ****   avoids the loss of the data already stored in the ADC Data register. 
1029:.\stm32f4periph\src/stm32f4xx_adc.c ****   
1030:.\stm32f4periph\src/stm32f4xx_adc.c ****   When the DMA mode is enabled (using the ADC_DMACmd() function), after each
1031:.\stm32f4periph\src/stm32f4xx_adc.c ****   conversion of a regular channel, a DMA request is generated.
1032:.\stm32f4periph\src/stm32f4xx_adc.c ****   
1033:.\stm32f4periph\src/stm32f4xx_adc.c ****   Depending on the "DMA disable selection for Independent ADC mode" 
1034:.\stm32f4periph\src/stm32f4xx_adc.c ****   configuration (using the ADC_DMARequestAfterLastTransferCmd() function), 
1035:.\stm32f4periph\src/stm32f4xx_adc.c ****   at the end of the last DMA transfer, two possibilities are allowed:
1036:.\stm32f4periph\src/stm32f4xx_adc.c ****   - No new DMA request is issued to the DMA controller (feature DISABLED) 
1037:.\stm32f4periph\src/stm32f4xx_adc.c ****   - Requests can continue to be generated (feature ENABLED).
1038:.\stm32f4periph\src/stm32f4xx_adc.c ****   
1039:.\stm32f4periph\src/stm32f4xx_adc.c ****   Depending on the "DMA disable selection for multi ADC mode" configuration 
1040:.\stm32f4periph\src/stm32f4xx_adc.c ****   (using the void ADC_MultiModeDMARequestAfterLastTransferCmd() function), 
1041:.\stm32f4periph\src/stm32f4xx_adc.c ****   at the end of the last DMA transfer, two possibilities are allowed:
1042:.\stm32f4periph\src/stm32f4xx_adc.c ****   - No new DMA request is issued to the DMA controller (feature DISABLED) 
1043:.\stm32f4periph\src/stm32f4xx_adc.c ****   - Requests can continue to be generated (feature ENABLED).
1044:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1045:.\stm32f4periph\src/stm32f4xx_adc.c **** @endverbatim
1046:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @{
1047:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
1048:.\stm32f4periph\src/stm32f4xx_adc.c ****   
1049:.\stm32f4periph\src/stm32f4xx_adc.c ****  /**
1050:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Enables or disables the specified ADC DMA request.
1051:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1052:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC DMA transfer.
1053:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
1054:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval None
1055:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
1056:.\stm32f4periph\src/stm32f4xx_adc.c **** void ADC_DMACmd(ADC_TypeDef* ADCx, FunctionalState NewState)
1057:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 845              		.loc 1 1057 0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 0
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 849              		@ link register save eliminated.
 850              	.LVL82:
1058:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
1059:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1060:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1061:.\stm32f4periph\src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
1062:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
1063:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Enable the selected ADC DMA request */
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 35


1064:.\stm32f4periph\src/stm32f4xx_adc.c ****     ADCx->CR2 |= (uint32_t)ADC_CR2_DMA;
 851              		.loc 1 1064 0
 852 021c 8368     		ldr	r3, [r0, #8]	@ D.7583,
1061:.\stm32f4periph\src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 853              		.loc 1 1061 0
 854 021e 11B1     		cbz	r1, .L55	@ NewState,
 855              		.loc 1 1064 0
 856 0220 43F48073 		orr	r3, r3, #256	@ D.7584, D.7583,
 857 0224 01E0     		b	.L57	@
 858              	.L55:
1065:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
1066:.\stm32f4periph\src/stm32f4xx_adc.c ****   else
1067:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
1068:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Disable the selected ADC DMA request */
1069:.\stm32f4periph\src/stm32f4xx_adc.c ****     ADCx->CR2 &= (uint32_t)(~ADC_CR2_DMA);
 859              		.loc 1 1069 0
 860 0226 23F48073 		bic	r3, r3, #256	@ D.7587, D.7586,
 861              	.L57:
 862 022a 8360     		str	r3, [r0, #8]	@ D.7587,
 863 022c 7047     		bx	lr	@
 864              		.cfi_endproc
 865              	.LFE130:
 866              		.size	ADC_DMACmd, .-ADC_DMACmd
 867              		.align	1
 868              		.global	ADC_DMARequestAfterLastTransferCmd
 869              		.thumb
 870              		.thumb_func
 871              		.type	ADC_DMARequestAfterLastTransferCmd, %function
 872              	ADC_DMARequestAfterLastTransferCmd:
 873              	.LFB131:
1070:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
1071:.\stm32f4periph\src/stm32f4xx_adc.c **** }
1072:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1073:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
1074:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Enables or disables the ADC DMA request after last transfer (Single-ADC mode)  
1075:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1076:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC DMA request after last transfer.
1077:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
1078:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval None
1079:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
1080:.\stm32f4periph\src/stm32f4xx_adc.c **** void ADC_DMARequestAfterLastTransferCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
1081:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 874              		.loc 1 1081 0
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 0
 877              		@ frame_needed = 0, uses_anonymous_args = 0
 878              		@ link register save eliminated.
 879              	.LVL83:
1082:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
1083:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1084:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1085:.\stm32f4periph\src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
1086:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
1087:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Enable the selected ADC DMA request after last transfer */
1088:.\stm32f4periph\src/stm32f4xx_adc.c ****     ADCx->CR2 |= (uint32_t)ADC_CR2_DDS;
 880              		.loc 1 1088 0
 881 022e 8368     		ldr	r3, [r0, #8]	@ D.7576,
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 36


1085:.\stm32f4periph\src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 882              		.loc 1 1085 0
 883 0230 11B1     		cbz	r1, .L59	@ NewState,
 884              		.loc 1 1088 0
 885 0232 43F40073 		orr	r3, r3, #512	@ D.7577, D.7576,
 886 0236 01E0     		b	.L61	@
 887              	.L59:
1089:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
1090:.\stm32f4periph\src/stm32f4xx_adc.c ****   else
1091:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
1092:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Disable the selected ADC DMA request after last transfer */
1093:.\stm32f4periph\src/stm32f4xx_adc.c ****     ADCx->CR2 &= (uint32_t)(~ADC_CR2_DDS);
 888              		.loc 1 1093 0
 889 0238 23F40073 		bic	r3, r3, #512	@ D.7580, D.7579,
 890              	.L61:
 891 023c 8360     		str	r3, [r0, #8]	@ D.7580,
 892 023e 7047     		bx	lr	@
 893              		.cfi_endproc
 894              	.LFE131:
 895              		.size	ADC_DMARequestAfterLastTransferCmd, .-ADC_DMARequestAfterLastTransferCmd
 896              		.align	1
 897              		.global	ADC_MultiModeDMARequestAfterLastTransferCmd
 898              		.thumb
 899              		.thumb_func
 900              		.type	ADC_MultiModeDMARequestAfterLastTransferCmd, %function
 901              	ADC_MultiModeDMARequestAfterLastTransferCmd:
 902              	.LFB132:
1094:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
1095:.\stm32f4periph\src/stm32f4xx_adc.c **** }
1096:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1097:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
1098:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Enables or disables the ADC DMA request after last transfer in multi ADC mode       
1099:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC DMA request after last transfer.
1100:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
1101:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @note   if Enabled, DMA requests are issued as long as data are converted and 
1102:.\stm32f4periph\src/stm32f4xx_adc.c ****   *         DMA mode for multi ADC mode (selected using ADC_CommonInit() function 
1103:.\stm32f4periph\src/stm32f4xx_adc.c ****   *         by ADC_CommonInitStruct.ADC_DMAAccessMode structure member) is 
1104:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          ADC_DMAAccessMode_1, ADC_DMAAccessMode_2 or ADC_DMAAccessMode_3.     
1105:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval None
1106:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
1107:.\stm32f4periph\src/stm32f4xx_adc.c **** void ADC_MultiModeDMARequestAfterLastTransferCmd(FunctionalState NewState)
1108:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 903              		.loc 1 1108 0
 904              		.cfi_startproc
 905              		@ args = 0, pretend = 0, frame = 0
 906              		@ frame_needed = 0, uses_anonymous_args = 0
 907              		@ link register save eliminated.
 908              	.LVL84:
 909 0240 044B     		ldr	r3, .L66	@ tmp143,
1109:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
1110:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1111:.\stm32f4periph\src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
1112:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
1113:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Enable the selected ADC DMA request after last transfer */
1114:.\stm32f4periph\src/stm32f4xx_adc.c ****     ADC->CCR |= (uint32_t)ADC_CCR_DDS;
 910              		.loc 1 1114 0
 911 0242 5A68     		ldr	r2, [r3, #4]	@ D.7569,
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 37


1111:.\stm32f4periph\src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 912              		.loc 1 1111 0
 913 0244 10B1     		cbz	r0, .L63	@ NewState,
 914              		.loc 1 1114 0
 915 0246 42F40052 		orr	r2, r2, #8192	@ D.7570, D.7569,
 916 024a 01E0     		b	.L65	@
 917              	.L63:
1115:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
1116:.\stm32f4periph\src/stm32f4xx_adc.c ****   else
1117:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
1118:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Disable the selected ADC DMA request after last transfer */
1119:.\stm32f4periph\src/stm32f4xx_adc.c ****     ADC->CCR &= (uint32_t)(~ADC_CCR_DDS);
 918              		.loc 1 1119 0
 919 024c 22F40052 		bic	r2, r2, #8192	@ D.7573, D.7572,
 920              	.L65:
 921 0250 5A60     		str	r2, [r3, #4]	@ D.7573,
 922 0252 7047     		bx	lr	@
 923              	.L67:
 924              		.align	2
 925              	.L66:
 926 0254 00230140 		.word	1073816320
 927              		.cfi_endproc
 928              	.LFE132:
 929              		.size	ADC_MultiModeDMARequestAfterLastTransferCmd, .-ADC_MultiModeDMARequestAfterLastTransferCmd
 930              		.align	1
 931              		.global	ADC_InjectedChannelConfig
 932              		.thumb
 933              		.thumb_func
 934              		.type	ADC_InjectedChannelConfig, %function
 935              	ADC_InjectedChannelConfig:
 936              	.LFB133:
1120:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
1121:.\stm32f4periph\src/stm32f4xx_adc.c **** }
1122:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
1123:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @}
1124:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
1125:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1126:.\stm32f4periph\src/stm32f4xx_adc.c **** /** @defgroup ADC_Group6 Injected channels Configuration functions
1127:.\stm32f4periph\src/stm32f4xx_adc.c ****  *  @brief   Injected channels Configuration functions 
1128:.\stm32f4periph\src/stm32f4xx_adc.c ****  *
1129:.\stm32f4periph\src/stm32f4xx_adc.c **** @verbatim   
1130:.\stm32f4periph\src/stm32f4xx_adc.c ****  ===============================================================================
1131:.\stm32f4periph\src/stm32f4xx_adc.c ****                      Injected channels Configuration functions
1132:.\stm32f4periph\src/stm32f4xx_adc.c ****  ===============================================================================  
1133:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1134:.\stm32f4periph\src/stm32f4xx_adc.c ****   This section provide functions allowing to configure the ADC Injected channels,
1135:.\stm32f4periph\src/stm32f4xx_adc.c ****   it is composed of 2 sub sections : 
1136:.\stm32f4periph\src/stm32f4xx_adc.c ****     
1137:.\stm32f4periph\src/stm32f4xx_adc.c ****   1. Configuration functions for Injected channels: This subsection provides 
1138:.\stm32f4periph\src/stm32f4xx_adc.c ****      functions allowing to configure the ADC injected channels :    
1139:.\stm32f4periph\src/stm32f4xx_adc.c ****     - Configure the rank in the injected group sequencer for each channel
1140:.\stm32f4periph\src/stm32f4xx_adc.c ****     - Configure the sampling time for each channel    
1141:.\stm32f4periph\src/stm32f4xx_adc.c ****     - Activate the Auto injected Mode  
1142:.\stm32f4periph\src/stm32f4xx_adc.c ****     - Activate the Discontinuous Mode 
1143:.\stm32f4periph\src/stm32f4xx_adc.c ****     - scan mode activation  
1144:.\stm32f4periph\src/stm32f4xx_adc.c ****     - External/software trigger source   
1145:.\stm32f4periph\src/stm32f4xx_adc.c ****     - External trigger edge 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 38


1146:.\stm32f4periph\src/stm32f4xx_adc.c ****     - injected channels sequencer.
1147:.\stm32f4periph\src/stm32f4xx_adc.c ****     
1148:.\stm32f4periph\src/stm32f4xx_adc.c ****    2. Get the Specified Injected channel conversion data: This subsection 
1149:.\stm32f4periph\src/stm32f4xx_adc.c ****       provides an important function in the ADC peripheral since it returns the 
1150:.\stm32f4periph\src/stm32f4xx_adc.c ****       converted data of the specific injected channel.
1151:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1152:.\stm32f4periph\src/stm32f4xx_adc.c **** @endverbatim
1153:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @{
1154:.\stm32f4periph\src/stm32f4xx_adc.c ****   */ 
1155:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
1156:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Configures for the selected ADC injected channel its corresponding
1157:.\stm32f4periph\src/stm32f4xx_adc.c ****   *         rank in the sequencer and its sample time.
1158:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1159:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADC_Channel: the ADC channel to configure. 
1160:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1161:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_0: ADC Channel0 selected
1162:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_1: ADC Channel1 selected
1163:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_2: ADC Channel2 selected
1164:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_3: ADC Channel3 selected
1165:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_4: ADC Channel4 selected
1166:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_5: ADC Channel5 selected
1167:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_6: ADC Channel6 selected
1168:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_7: ADC Channel7 selected
1169:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_8: ADC Channel8 selected
1170:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_9: ADC Channel9 selected
1171:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_10: ADC Channel10 selected
1172:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_11: ADC Channel11 selected
1173:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_12: ADC Channel12 selected
1174:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_13: ADC Channel13 selected
1175:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_14: ADC Channel14 selected
1176:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_15: ADC Channel15 selected
1177:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_16: ADC Channel16 selected
1178:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_17: ADC Channel17 selected
1179:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_18: ADC Channel18 selected                       
1180:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  Rank: The rank in the injected group sequencer. 
1181:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter must be between 1 to 4.
1182:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADC_SampleTime: The sample time value to be set for the selected channel. 
1183:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1184:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_3Cycles: Sample time equal to 3 cycles
1185:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_15Cycles: Sample time equal to 15 cycles
1186:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_28Cycles: Sample time equal to 28 cycles
1187:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_56Cycles: Sample time equal to 56 cycles	
1188:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_84Cycles: Sample time equal to 84 cycles	
1189:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_112Cycles: Sample time equal to 112 cycles	
1190:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_144Cycles: Sample time equal to 144 cycles	
1191:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_480Cycles: Sample time equal to 480 cycles	
1192:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval None
1193:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
1194:.\stm32f4periph\src/stm32f4xx_adc.c **** void ADC_InjectedChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_Sa
1195:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 937              		.loc 1 1195 0
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 0
 940              		@ frame_needed = 0, uses_anonymous_args = 0
 941              	.LVL85:
1196:.\stm32f4periph\src/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0, tmpreg3 = 0;
1197:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 39


1198:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1199:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
1200:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_INJECTED_RANK(Rank));
1201:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(ADC_SampleTime));
1202:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
1203:.\stm32f4periph\src/stm32f4xx_adc.c ****   if (ADC_Channel > ADC_Channel_9)
 942              		.loc 1 1203 0
 943 0258 0929     		cmp	r1, #9	@ ADC_Channel,
1195:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 944              		.loc 1 1195 0
 945 025a 70B5     		push	{r4, r5, r6, lr}	@
 946              	.LCFI4:
 947              		.cfi_def_cfa_offset 16
 948              		.cfi_offset 4, -16
 949              		.cfi_offset 5, -12
 950              		.cfi_offset 6, -8
 951              		.cfi_offset 14, -4
 952 025c 0CB2     		sxth	r4, r1	@ ADC_Channel, ADC_Channel
 953              		.loc 1 1203 0
 954 025e 0ED9     		bls	.L69	@,
1204:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
1205:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Get the old register value */
1206:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SMPR1;
1207:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
1208:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg2 = SMPR1_SMP_SET << (3*(ADC_Channel - 10));
 955              		.loc 1 1208 0
 956 0260 04EB4404 		add	r4, r4, r4, lsl #1	@, tmp181, ADC_Channel, ADC_Channel,
 957 0264 1E3C     		subs	r4, r4, #30	@ D.7554, tmp181,
1206:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SMPR1;
 958              		.loc 1 1206 0
 959 0266 C668     		ldr	r6, [r0, #12]	@ tmpreg1, ADCx_5(D)->SMPR1
 960              	.LVL86:
 961              		.loc 1 1208 0
 962 0268 0725     		movs	r5, #7	@ tmp183,
 963 026a 05FA04F5 		lsl	r5, r5, r4	@ tmp182, tmp183, D.7554
 964              	.LVL87:
1209:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Clear the old sample time */
1210:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 965              		.loc 1 1210 0
 966 026e 26EA0505 		bic	r5, r6, r5	@ tmpreg1, tmpreg1, tmp182
 967              	.LVL88:
1211:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
1212:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3*(ADC_Channel - 10));
 968              		.loc 1 1212 0
 969 0272 03FA04F3 		lsl	r3, r3, r4	@ tmp185, ADC_SampleTime, D.7554
 970              	.LVL89:
1213:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Set the new sample time */
1214:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 971              		.loc 1 1214 0
 972 0276 45EA0304 		orr	r4, r5, r3	@ tmpreg1, tmpreg1, tmp185
 973              	.LVL90:
1215:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Store the new register value */
1216:.\stm32f4periph\src/stm32f4xx_adc.c ****     ADCx->SMPR1 = tmpreg1;
 974              		.loc 1 1216 0
 975 027a C460     		str	r4, [r0, #12]	@ tmpreg1, ADCx_5(D)->SMPR1
 976 027c 0BE0     		b	.L70	@
 977              	.LVL91:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 40


 978              	.L69:
1217:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
1218:.\stm32f4periph\src/stm32f4xx_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
1219:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
1220:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Get the old register value */
1221:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SMPR2;
 979              		.loc 1 1221 0
 980 027e 0669     		ldr	r6, [r0, #16]	@ tmpreg1, ADCx_5(D)->SMPR2
 981              	.LVL92:
1222:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
1223:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg2 = SMPR2_SMP_SET << (3 * ADC_Channel);
 982              		.loc 1 1223 0
 983 0280 04EB4404 		add	r4, r4, r4, lsl #1	@, tmp189, ADC_Channel, ADC_Channel,
 984              	.LVL93:
 985 0284 0725     		movs	r5, #7	@ tmp191,
 986 0286 05FA04F5 		lsl	r5, r5, r4	@ tmp190, tmp191, tmp189
 987              	.LVL94:
1224:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Clear the old sample time */
1225:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 988              		.loc 1 1225 0
 989 028a 26EA0505 		bic	r5, r6, r5	@ tmpreg1, tmpreg1, tmp190
 990              	.LVL95:
1226:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
1227:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * ADC_Channel);
 991              		.loc 1 1227 0
 992 028e 03FA04F4 		lsl	r4, r3, r4	@ tmp193, ADC_SampleTime, tmp189
 993              	.LVL96:
1228:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Set the new sample time */
1229:.\stm32f4periph\src/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 994              		.loc 1 1229 0
 995 0292 2C43     		orrs	r4, r4, r5	@, tmpreg1, tmp193, tmpreg1
 996              	.LVL97:
1230:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Store the new register value */
1231:.\stm32f4periph\src/stm32f4xx_adc.c ****     ADCx->SMPR2 = tmpreg1;
 997              		.loc 1 1231 0
 998 0294 0461     		str	r4, [r0, #16]	@ tmpreg1, ADCx_5(D)->SMPR2
 999              	.LVL98:
 1000              	.L70:
1232:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
1233:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Rank configuration */
1234:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Get the old register value */
1235:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 = ADCx->JSQR;
 1001              		.loc 1 1235 0
 1002 0296 846B     		ldr	r4, [r0, #56]	@ tmpreg1, ADCx_5(D)->JSQR
 1003              	.LVL99:
1236:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Get JL value: Number = JL+1 */
1237:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg3 =  (tmpreg1 & JSQR_JL_SET)>> 20;
 1004              		.loc 1 1237 0
 1005 0298 C4F30153 		ubfx	r3, r4, #20, #2	@ tmp195, tmpreg1,,
1238:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Calculate the mask to clear: ((Rank-1)+(4-JL-1)) */
1239:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg2 = JSQR_JSQ_SET << (5 * (uint8_t)((Rank + 3) - (tmpreg3 + 1)));
 1006              		.loc 1 1239 0
 1007 029c D31A     		subs	r3, r2, r3	@ tmp199, Rank, tmp195
 1008 029e 0233     		adds	r3, r3, #2	@ tmp201, tmp199,
 1009 02a0 DBB2     		uxtb	r3, r3	@ D.7562, tmp201
 1010 02a2 03EB8303 		add	r3, r3, r3, lsl #2	@, tmp205, D.7562, D.7562,
 1011              	.LVL100:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 41


 1012 02a6 1F22     		movs	r2, #31	@ tmp207,
 1013              	.LVL101:
 1014 02a8 02FA03F2 		lsl	r2, r2, r3	@ tmp206, tmp207, tmp205
 1015              	.LVL102:
1240:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Clear the old JSQx bits for the selected rank */
1241:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 &= ~tmpreg2;
 1016              		.loc 1 1241 0
 1017 02ac 24EA0204 		bic	r4, r4, r2	@ tmpreg1, tmpreg1, tmp206
 1018              	.LVL103:
1242:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Calculate the mask to set: ((Rank-1)+(4-JL-1)) */
1243:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg2 = (uint32_t)ADC_Channel << (5 * (uint8_t)((Rank + 3) - (tmpreg3 + 1)));
 1019              		.loc 1 1243 0
 1020 02b0 01FA03F1 		lsl	r1, r1, r3	@ tmp209, ADC_Channel, tmp205
 1021              	.LVL104:
1244:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Set the JSQx bits for the selected rank */
1245:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 |= tmpreg2;
 1022              		.loc 1 1245 0
 1023 02b4 44EA0103 		orr	r3, r4, r1	@ tmpreg1, tmpreg1, tmp209
 1024              	.LVL105:
1246:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Store the new register value */
1247:.\stm32f4periph\src/stm32f4xx_adc.c ****   ADCx->JSQR = tmpreg1;
 1025              		.loc 1 1247 0
 1026 02b8 8363     		str	r3, [r0, #56]	@ tmpreg1, ADCx_5(D)->JSQR
 1027 02ba 70BD     		pop	{r4, r5, r6, pc}	@
 1028              		.cfi_endproc
 1029              	.LFE133:
 1030              		.size	ADC_InjectedChannelConfig, .-ADC_InjectedChannelConfig
 1031              		.align	1
 1032              		.global	ADC_InjectedSequencerLengthConfig
 1033              		.thumb
 1034              		.thumb_func
 1035              		.type	ADC_InjectedSequencerLengthConfig, %function
 1036              	ADC_InjectedSequencerLengthConfig:
 1037              	.LFB134:
1248:.\stm32f4periph\src/stm32f4xx_adc.c **** }
1249:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1250:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
1251:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Configures the sequencer length for injected channels
1252:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1253:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  Length: The sequencer length. 
1254:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter must be a number between 1 to 4.
1255:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval None
1256:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
1257:.\stm32f4periph\src/stm32f4xx_adc.c **** void ADC_InjectedSequencerLengthConfig(ADC_TypeDef* ADCx, uint8_t Length)
1258:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 1038              		.loc 1 1258 0
 1039              		.cfi_startproc
 1040              		@ args = 0, pretend = 0, frame = 0
 1041              		@ frame_needed = 0, uses_anonymous_args = 0
 1042              		@ link register save eliminated.
 1043              	.LVL106:
1259:.\stm32f4periph\src/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0;
1260:.\stm32f4periph\src/stm32f4xx_adc.c ****   uint32_t tmpreg2 = 0;
1261:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
1262:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1263:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_INJECTED_LENGTH(Length));
1264:.\stm32f4periph\src/stm32f4xx_adc.c ****   
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 42


1265:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Get the old register value */
1266:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 = ADCx->JSQR;
 1044              		.loc 1 1266 0
 1045 02bc 836B     		ldr	r3, [r0, #56]	@ tmpreg1, ADCx_3(D)->JSQR
 1046              	.LVL107:
1267:.\stm32f4periph\src/stm32f4xx_adc.c ****   
1268:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Clear the old injected sequence length JL bits */
1269:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 &= JSQR_JL_RESET;
1270:.\stm32f4periph\src/stm32f4xx_adc.c ****   
1271:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Set the injected sequence length JL bits */
1272:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg2 = Length - 1; 
 1047              		.loc 1 1272 0
 1048 02be 0139     		subs	r1, r1, #1	@ tmp143, Length,
 1049              	.LVL108:
1269:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 &= JSQR_JL_RESET;
 1050              		.loc 1 1269 0
 1051 02c0 23F44013 		bic	r3, r3, #3145728	@ tmpreg1, tmpreg1,
 1052              	.LVL109:
1273:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg1 |= tmpreg2 << 20;
 1053              		.loc 1 1273 0
 1054 02c4 43EA0153 		orr	r3, r3, r1, lsl #20	@, tmpreg1, tmpreg1, tmp143,
 1055              	.LVL110:
1274:.\stm32f4periph\src/stm32f4xx_adc.c ****   
1275:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Store the new register value */
1276:.\stm32f4periph\src/stm32f4xx_adc.c ****   ADCx->JSQR = tmpreg1;
 1056              		.loc 1 1276 0
 1057 02c8 8363     		str	r3, [r0, #56]	@ tmpreg1, ADCx_3(D)->JSQR
 1058 02ca 7047     		bx	lr	@
 1059              		.cfi_endproc
 1060              	.LFE134:
 1061              		.size	ADC_InjectedSequencerLengthConfig, .-ADC_InjectedSequencerLengthConfig
 1062              		.align	1
 1063              		.global	ADC_SetInjectedOffset
 1064              		.thumb
 1065              		.thumb_func
 1066              		.type	ADC_SetInjectedOffset, %function
 1067              	ADC_SetInjectedOffset:
 1068              	.LFB135:
1277:.\stm32f4periph\src/stm32f4xx_adc.c **** }
1278:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1279:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
1280:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Set the injected channels conversion value offset
1281:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1282:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADC_InjectedChannel: the ADC injected channel to set its offset. 
1283:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1284:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_1: Injected Channel1 selected
1285:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_2: Injected Channel2 selected
1286:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_3: Injected Channel3 selected
1287:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_4: Injected Channel4 selected
1288:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  Offset: the offset value for the selected ADC injected channel
1289:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter must be a 12bit value.
1290:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval None
1291:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
1292:.\stm32f4periph\src/stm32f4xx_adc.c **** void ADC_SetInjectedOffset(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel, uint16_t Offset)
1293:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 1069              		.loc 1 1293 0
 1070              		.cfi_startproc
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 43


 1071              		@ args = 0, pretend = 0, frame = 8
 1072              		@ frame_needed = 0, uses_anonymous_args = 0
 1073              		@ link register save eliminated.
 1074              	.LVL111:
 1075 02cc 82B0     		sub	sp, sp, #8	@,,
 1076              	.LCFI5:
 1077              		.cfi_def_cfa_offset 8
1294:.\stm32f4periph\src/stm32f4xx_adc.c ****     __IO uint32_t tmp = 0;
 1078              		.loc 1 1294 0
 1079 02ce 0023     		movs	r3, #0	@ tmp144,
 1080 02d0 0193     		str	r3, [sp, #4]	@ tmp144, tmp
 1081              	.LVL112:
1295:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
1296:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1297:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_INJECTED_CHANNEL(ADC_InjectedChannel));
1298:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_OFFSET(Offset));
1299:.\stm32f4periph\src/stm32f4xx_adc.c ****   
1300:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmp = (uint32_t)ADCx;
 1082              		.loc 1 1300 0
 1083 02d2 0190     		str	r0, [sp, #4]	@ ADCx, tmp
1301:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmp += ADC_InjectedChannel;
 1084              		.loc 1 1301 0
 1085 02d4 019B     		ldr	r3, [sp, #4]	@ tmp.7, tmp
 1086 02d6 C918     		adds	r1, r1, r3	@ tmp.8, ADC_InjectedChannel, tmp.7
 1087              	.LVL113:
 1088 02d8 0191     		str	r1, [sp, #4]	@ tmp.8, tmp
 1089              	.LVL114:
1302:.\stm32f4periph\src/stm32f4xx_adc.c ****   
1303:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Set the selected injected channel data offset */
1304:.\stm32f4periph\src/stm32f4xx_adc.c ****  *(__IO uint32_t *) tmp = (uint32_t)Offset;
 1090              		.loc 1 1304 0
 1091 02da 019B     		ldr	r3, [sp, #4]	@ tmp.9, tmp
 1092 02dc 1A60     		str	r2, [r3, #0]	@ Offset, *tmp.10_8
1305:.\stm32f4periph\src/stm32f4xx_adc.c **** }
 1093              		.loc 1 1305 0
 1094 02de 02B0     		add	sp, sp, #8	@,,
 1095 02e0 7047     		bx	lr
 1096              		.cfi_endproc
 1097              	.LFE135:
 1098              		.size	ADC_SetInjectedOffset, .-ADC_SetInjectedOffset
 1099              		.align	1
 1100              		.global	ADC_ExternalTrigInjectedConvConfig
 1101              		.thumb
 1102              		.thumb_func
 1103              		.type	ADC_ExternalTrigInjectedConvConfig, %function
 1104              	ADC_ExternalTrigInjectedConvConfig:
 1105              	.LFB136:
1306:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1307:.\stm32f4periph\src/stm32f4xx_adc.c ****  /**
1308:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Configures the ADCx external trigger for injected channels conversion.
1309:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1310:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADC_ExternalTrigInjecConv: specifies the ADC trigger to start injected conversion.
1311:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:                    
1312:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T1_CC4: Timer1 capture compare4 selected 
1313:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T1_TRGO: Timer1 TRGO event selected 
1314:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T2_CC1: Timer2 capture compare1 selected 
1315:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T2_TRGO: Timer2 TRGO event selected 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 44


1316:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T3_CC2: Timer3 capture compare2 selected 
1317:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T3_CC4: Timer3 capture compare4 selected 
1318:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T4_CC1: Timer4 capture compare1 selected             
1319:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T4_CC2: Timer4 capture compare2 selected 
1320:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T4_CC3: Timer4 capture compare3 selected             
1321:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T4_TRGO: Timer4 TRGO event selected 
1322:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T5_CC4: Timer5 capture compare4 selected             
1323:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T5_TRGO: Timer5 TRGO event selected                  
1324:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T8_CC2: Timer8 capture compare2 selected
1325:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T8_CC3: Timer8 capture compare3 selected             
1326:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T8_CC4: Timer8 capture compare4 selected 
1327:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_Ext_IT15: External interrupt line 15 event selected  
1328:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval None
1329:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
1330:.\stm32f4periph\src/stm32f4xx_adc.c **** void ADC_ExternalTrigInjectedConvConfig(ADC_TypeDef* ADCx, uint32_t ADC_ExternalTrigInjecConv)
1331:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 1106              		.loc 1 1331 0
 1107              		.cfi_startproc
 1108              		@ args = 0, pretend = 0, frame = 0
 1109              		@ frame_needed = 0, uses_anonymous_args = 0
 1110              		@ link register save eliminated.
 1111              	.LVL115:
1332:.\stm32f4periph\src/stm32f4xx_adc.c ****   uint32_t tmpreg = 0;
1333:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
1334:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1335:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_EXT_INJEC_TRIG(ADC_ExternalTrigInjecConv));
1336:.\stm32f4periph\src/stm32f4xx_adc.c ****   
1337:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Get the old register value */
1338:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg = ADCx->CR2;
 1112              		.loc 1 1338 0
 1113 02e2 8368     		ldr	r3, [r0, #8]	@ tmpreg, ADCx_2(D)->CR2
 1114              	.LVL116:
1339:.\stm32f4periph\src/stm32f4xx_adc.c ****   
1340:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Clear the old external event selection for injected group */
1341:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg &= CR2_JEXTSEL_RESET;
 1115              		.loc 1 1341 0
 1116 02e4 23F47023 		bic	r3, r3, #983040	@ tmpreg, tmpreg,
 1117              	.LVL117:
1342:.\stm32f4periph\src/stm32f4xx_adc.c ****   
1343:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Set the external event selection for injected group */
1344:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg |= ADC_ExternalTrigInjecConv;
 1118              		.loc 1 1344 0
 1119 02e8 1943     		orrs	r1, r1, r3	@, tmpreg, ADC_ExternalTrigInjecConv, tmpreg
 1120              	.LVL118:
1345:.\stm32f4periph\src/stm32f4xx_adc.c ****   
1346:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Store the new register value */
1347:.\stm32f4periph\src/stm32f4xx_adc.c ****   ADCx->CR2 = tmpreg;
 1121              		.loc 1 1347 0
 1122 02ea 8160     		str	r1, [r0, #8]	@ tmpreg, ADCx_2(D)->CR2
 1123 02ec 7047     		bx	lr	@
 1124              		.cfi_endproc
 1125              	.LFE136:
 1126              		.size	ADC_ExternalTrigInjectedConvConfig, .-ADC_ExternalTrigInjectedConvConfig
 1127              		.align	1
 1128              		.global	ADC_ExternalTrigInjectedConvEdgeConfig
 1129              		.thumb
 1130              		.thumb_func
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 45


 1131              		.type	ADC_ExternalTrigInjectedConvEdgeConfig, %function
 1132              	ADC_ExternalTrigInjectedConvEdgeConfig:
 1133              	.LFB137:
1348:.\stm32f4periph\src/stm32f4xx_adc.c **** }
1349:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1350:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
1351:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Configures the ADCx external trigger edge for injected channels conversion.
1352:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1353:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADC_ExternalTrigInjecConvEdge: specifies the ADC external trigger edge
1354:.\stm32f4periph\src/stm32f4xx_adc.c ****   *         to start injected conversion. 
1355:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1356:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConvEdge_None: external trigger disabled for 
1357:.\stm32f4periph\src/stm32f4xx_adc.c ****   *                                                     injected conversion
1358:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConvEdge_Rising: detection on rising edge
1359:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConvEdge_Falling: detection on falling edge
1360:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConvEdge_RisingFalling: detection on both rising 
1361:.\stm32f4periph\src/stm32f4xx_adc.c ****   *                                                               and falling edge
1362:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval None
1363:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
1364:.\stm32f4periph\src/stm32f4xx_adc.c **** void ADC_ExternalTrigInjectedConvEdgeConfig(ADC_TypeDef* ADCx, uint32_t ADC_ExternalTrigInjecConvEd
1365:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 1134              		.loc 1 1365 0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 0
 1137              		@ frame_needed = 0, uses_anonymous_args = 0
 1138              		@ link register save eliminated.
 1139              	.LVL119:
1366:.\stm32f4periph\src/stm32f4xx_adc.c ****   uint32_t tmpreg = 0;
1367:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
1368:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1369:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_EXT_INJEC_TRIG_EDGE(ADC_ExternalTrigInjecConvEdge));
1370:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Get the old register value */
1371:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg = ADCx->CR2;
 1140              		.loc 1 1371 0
 1141 02ee 8368     		ldr	r3, [r0, #8]	@ tmpreg, ADCx_2(D)->CR2
 1142              	.LVL120:
1372:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Clear the old external trigger edge for injected group */
1373:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg &= CR2_JEXTEN_RESET;
 1143              		.loc 1 1373 0
 1144 02f0 23F44013 		bic	r3, r3, #3145728	@ tmpreg, tmpreg,
 1145              	.LVL121:
1374:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Set the new external trigger edge for injected group */
1375:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmpreg |= ADC_ExternalTrigInjecConvEdge;
 1146              		.loc 1 1375 0
 1147 02f4 1943     		orrs	r1, r1, r3	@, tmpreg, ADC_ExternalTrigInjecConvEdge, tmpreg
 1148              	.LVL122:
1376:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Store the new register value */
1377:.\stm32f4periph\src/stm32f4xx_adc.c ****   ADCx->CR2 = tmpreg;
 1149              		.loc 1 1377 0
 1150 02f6 8160     		str	r1, [r0, #8]	@ tmpreg, ADCx_2(D)->CR2
 1151 02f8 7047     		bx	lr	@
 1152              		.cfi_endproc
 1153              	.LFE137:
 1154              		.size	ADC_ExternalTrigInjectedConvEdgeConfig, .-ADC_ExternalTrigInjectedConvEdgeConfig
 1155              		.align	1
 1156              		.global	ADC_SoftwareStartInjectedConv
 1157              		.thumb
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 46


 1158              		.thumb_func
 1159              		.type	ADC_SoftwareStartInjectedConv, %function
 1160              	ADC_SoftwareStartInjectedConv:
 1161              	.LFB138:
1378:.\stm32f4periph\src/stm32f4xx_adc.c **** }
1379:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1380:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
1381:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Enables the selected ADC software start conversion of the injected channels.
1382:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1383:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval None
1384:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
1385:.\stm32f4periph\src/stm32f4xx_adc.c **** void ADC_SoftwareStartInjectedConv(ADC_TypeDef* ADCx)
1386:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 1162              		.loc 1 1386 0
 1163              		.cfi_startproc
 1164              		@ args = 0, pretend = 0, frame = 0
 1165              		@ frame_needed = 0, uses_anonymous_args = 0
 1166              		@ link register save eliminated.
 1167              	.LVL123:
1387:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
1388:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1389:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Enable the selected ADC conversion for injected group */
1390:.\stm32f4periph\src/stm32f4xx_adc.c ****   ADCx->CR2 |= (uint32_t)ADC_CR2_JSWSTART;
 1168              		.loc 1 1390 0
 1169 02fa 8368     		ldr	r3, [r0, #8]	@ D.7538, ADCx_1(D)->CR2
 1170 02fc 43F48003 		orr	r3, r3, #4194304	@ D.7539, D.7538,
 1171 0300 8360     		str	r3, [r0, #8]	@ D.7539, ADCx_1(D)->CR2
 1172 0302 7047     		bx	lr	@
 1173              		.cfi_endproc
 1174              	.LFE138:
 1175              		.size	ADC_SoftwareStartInjectedConv, .-ADC_SoftwareStartInjectedConv
 1176              		.align	1
 1177              		.global	ADC_GetSoftwareStartInjectedConvCmdStatus
 1178              		.thumb
 1179              		.thumb_func
 1180              		.type	ADC_GetSoftwareStartInjectedConvCmdStatus, %function
 1181              	ADC_GetSoftwareStartInjectedConvCmdStatus:
 1182              	.LFB139:
1391:.\stm32f4periph\src/stm32f4xx_adc.c **** }
1392:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1393:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
1394:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Gets the selected ADC Software start injected conversion Status.
1395:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1396:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval The new state of ADC software start injected conversion (SET or RESET).
1397:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
1398:.\stm32f4periph\src/stm32f4xx_adc.c **** FlagStatus ADC_GetSoftwareStartInjectedConvCmdStatus(ADC_TypeDef* ADCx)
1399:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 1183              		.loc 1 1399 0
 1184              		.cfi_startproc
 1185              		@ args = 0, pretend = 0, frame = 0
 1186              		@ frame_needed = 0, uses_anonymous_args = 0
 1187              		@ link register save eliminated.
 1188              	.LVL124:
1400:.\stm32f4periph\src/stm32f4xx_adc.c ****   FlagStatus bitstatus = RESET;
1401:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
1402:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1403:.\stm32f4periph\src/stm32f4xx_adc.c ****   
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 47


1404:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the status of JSWSTART bit */
1405:.\stm32f4periph\src/stm32f4xx_adc.c ****   if ((ADCx->CR2 & ADC_CR2_JSWSTART) != (uint32_t)RESET)
 1189              		.loc 1 1405 0
 1190 0304 8068     		ldr	r0, [r0, #8]	@ D.7531, ADCx_3(D)->CR2
 1191              	.LVL125:
1406:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
1407:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* JSWSTART bit is set */
1408:.\stm32f4periph\src/stm32f4xx_adc.c ****     bitstatus = SET;
1409:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
1410:.\stm32f4periph\src/stm32f4xx_adc.c ****   else
1411:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
1412:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* JSWSTART bit is reset */
1413:.\stm32f4periph\src/stm32f4xx_adc.c ****     bitstatus = RESET;
1414:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
1415:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Return the JSWSTART bit status */
1416:.\stm32f4periph\src/stm32f4xx_adc.c ****   return  bitstatus;
1417:.\stm32f4periph\src/stm32f4xx_adc.c **** }
 1192              		.loc 1 1417 0
 1193 0306 C0F38050 		ubfx	r0, r0, #22, #1	@, D.7531,,
 1194              	.LVL126:
 1195 030a 7047     		bx	lr	@
 1196              		.cfi_endproc
 1197              	.LFE139:
 1198              		.size	ADC_GetSoftwareStartInjectedConvCmdStatus, .-ADC_GetSoftwareStartInjectedConvCmdStatus
 1199              		.align	1
 1200              		.global	ADC_AutoInjectedConvCmd
 1201              		.thumb
 1202              		.thumb_func
 1203              		.type	ADC_AutoInjectedConvCmd, %function
 1204              	ADC_AutoInjectedConvCmd:
 1205              	.LFB140:
1418:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1419:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
1420:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Enables or disables the selected ADC automatic injected group 
1421:.\stm32f4periph\src/stm32f4xx_adc.c ****   *         conversion after regular one.
1422:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1423:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC auto injected conversion
1424:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
1425:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval None
1426:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
1427:.\stm32f4periph\src/stm32f4xx_adc.c **** void ADC_AutoInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
1428:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 1206              		.loc 1 1428 0
 1207              		.cfi_startproc
 1208              		@ args = 0, pretend = 0, frame = 0
 1209              		@ frame_needed = 0, uses_anonymous_args = 0
 1210              		@ link register save eliminated.
 1211              	.LVL127:
1429:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
1430:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1431:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1432:.\stm32f4periph\src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
1433:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
1434:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Enable the selected ADC automatic injected group conversion */
1435:.\stm32f4periph\src/stm32f4xx_adc.c ****     ADCx->CR1 |= (uint32_t)ADC_CR1_JAUTO;
 1212              		.loc 1 1435 0
 1213 030c 4368     		ldr	r3, [r0, #4]	@ D.7526,
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 48


1432:.\stm32f4periph\src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 1214              		.loc 1 1432 0
 1215 030e 11B1     		cbz	r1, .L78	@ NewState,
 1216              		.loc 1 1435 0
 1217 0310 43F48063 		orr	r3, r3, #1024	@ D.7527, D.7526,
 1218 0314 01E0     		b	.L80	@
 1219              	.L78:
1436:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
1437:.\stm32f4periph\src/stm32f4xx_adc.c ****   else
1438:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
1439:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Disable the selected ADC automatic injected group conversion */
1440:.\stm32f4periph\src/stm32f4xx_adc.c ****     ADCx->CR1 &= (uint32_t)(~ADC_CR1_JAUTO);
 1220              		.loc 1 1440 0
 1221 0316 23F48063 		bic	r3, r3, #1024	@ D.7530, D.7529,
 1222              	.L80:
 1223 031a 4360     		str	r3, [r0, #4]	@ D.7530,
 1224 031c 7047     		bx	lr	@
 1225              		.cfi_endproc
 1226              	.LFE140:
 1227              		.size	ADC_AutoInjectedConvCmd, .-ADC_AutoInjectedConvCmd
 1228              		.align	1
 1229              		.global	ADC_InjectedDiscModeCmd
 1230              		.thumb
 1231              		.thumb_func
 1232              		.type	ADC_InjectedDiscModeCmd, %function
 1233              	ADC_InjectedDiscModeCmd:
 1234              	.LFB141:
1441:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
1442:.\stm32f4periph\src/stm32f4xx_adc.c **** }
1443:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1444:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
1445:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Enables or disables the discontinuous mode for injected group 
1446:.\stm32f4periph\src/stm32f4xx_adc.c ****   *         channel for the specified ADC
1447:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1448:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC discontinuous mode on injected
1449:.\stm32f4periph\src/stm32f4xx_adc.c ****   *         group channel.
1450:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
1451:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval None
1452:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
1453:.\stm32f4periph\src/stm32f4xx_adc.c **** void ADC_InjectedDiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
1454:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 1235              		.loc 1 1454 0
 1236              		.cfi_startproc
 1237              		@ args = 0, pretend = 0, frame = 0
 1238              		@ frame_needed = 0, uses_anonymous_args = 0
 1239              		@ link register save eliminated.
 1240              	.LVL128:
1455:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
1456:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1457:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1458:.\stm32f4periph\src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
1459:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
1460:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Enable the selected ADC injected discontinuous mode */
1461:.\stm32f4periph\src/stm32f4xx_adc.c ****     ADCx->CR1 |= (uint32_t)ADC_CR1_JDISCEN;
 1241              		.loc 1 1461 0
 1242 031e 4368     		ldr	r3, [r0, #4]	@ D.7519,
1458:.\stm32f4periph\src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 49


 1243              		.loc 1 1458 0
 1244 0320 11B1     		cbz	r1, .L82	@ NewState,
 1245              		.loc 1 1461 0
 1246 0322 43F48053 		orr	r3, r3, #4096	@ D.7520, D.7519,
 1247 0326 01E0     		b	.L84	@
 1248              	.L82:
1462:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
1463:.\stm32f4periph\src/stm32f4xx_adc.c ****   else
1464:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
1465:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Disable the selected ADC injected discontinuous mode */
1466:.\stm32f4periph\src/stm32f4xx_adc.c ****     ADCx->CR1 &= (uint32_t)(~ADC_CR1_JDISCEN);
 1249              		.loc 1 1466 0
 1250 0328 23F48053 		bic	r3, r3, #4096	@ D.7523, D.7522,
 1251              	.L84:
 1252 032c 4360     		str	r3, [r0, #4]	@ D.7523,
 1253 032e 7047     		bx	lr	@
 1254              		.cfi_endproc
 1255              	.LFE141:
 1256              		.size	ADC_InjectedDiscModeCmd, .-ADC_InjectedDiscModeCmd
 1257              		.align	1
 1258              		.global	ADC_GetInjectedConversionValue
 1259              		.thumb
 1260              		.thumb_func
 1261              		.type	ADC_GetInjectedConversionValue, %function
 1262              	ADC_GetInjectedConversionValue:
 1263              	.LFB142:
1467:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
1468:.\stm32f4periph\src/stm32f4xx_adc.c **** }
1469:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1470:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
1471:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Returns the ADC injected channel conversion result
1472:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1473:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADC_InjectedChannel: the converted ADC injected channel.
1474:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1475:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_1: Injected Channel1 selected
1476:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_2: Injected Channel2 selected
1477:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_3: Injected Channel3 selected
1478:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_4: Injected Channel4 selected
1479:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval The Data conversion value.
1480:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
1481:.\stm32f4periph\src/stm32f4xx_adc.c **** uint16_t ADC_GetInjectedConversionValue(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel)
1482:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 1264              		.loc 1 1482 0
 1265              		.cfi_startproc
 1266              		@ args = 0, pretend = 0, frame = 8
 1267              		@ frame_needed = 0, uses_anonymous_args = 0
 1268              		@ link register save eliminated.
 1269              	.LVL129:
 1270 0330 82B0     		sub	sp, sp, #8	@,,
 1271              	.LCFI6:
 1272              		.cfi_def_cfa_offset 8
1483:.\stm32f4periph\src/stm32f4xx_adc.c ****   __IO uint32_t tmp = 0;
 1273              		.loc 1 1483 0
 1274 0332 0023     		movs	r3, #0	@ tmp146,
 1275 0334 0193     		str	r3, [sp, #4]	@ tmp146, tmp
 1276              	.LVL130:
1484:.\stm32f4periph\src/stm32f4xx_adc.c ****   
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 50


1485:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
1486:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1487:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_INJECTED_CHANNEL(ADC_InjectedChannel));
1488:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1489:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmp = (uint32_t)ADCx;
 1277              		.loc 1 1489 0
 1278 0336 0190     		str	r0, [sp, #4]	@ ADCx, tmp
1490:.\stm32f4periph\src/stm32f4xx_adc.c ****   tmp += ADC_InjectedChannel + JDR_OFFSET;
 1279              		.loc 1 1490 0
 1280 0338 019B     		ldr	r3, [sp, #4]	@ tmp.2, tmp
 1281 033a 2833     		adds	r3, r3, #40	@ tmp147, tmp.2,
 1282 033c 5918     		adds	r1, r3, r1	@ tmp.3, tmp147, ADC_InjectedChannel
 1283              	.LVL131:
 1284 033e 0191     		str	r1, [sp, #4]	@ tmp.3, tmp
 1285              	.LVL132:
1491:.\stm32f4periph\src/stm32f4xx_adc.c ****   
1492:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Returns the selected injected channel conversion data value */
1493:.\stm32f4periph\src/stm32f4xx_adc.c ****   return (uint16_t) (*(__IO uint32_t*)  tmp); 
 1286              		.loc 1 1493 0
 1287 0340 019B     		ldr	r3, [sp, #4]	@ tmp.4, tmp
 1288 0342 1868     		ldr	r0, [r3, #0]	@ D.7515, *tmp.5_9
 1289              	.LVL133:
1494:.\stm32f4periph\src/stm32f4xx_adc.c **** }
 1290              		.loc 1 1494 0
 1291 0344 80B2     		uxth	r0, r0	@, D.7515
 1292 0346 02B0     		add	sp, sp, #8	@,,
 1293 0348 7047     		bx	lr
 1294              		.cfi_endproc
 1295              	.LFE142:
 1296              		.size	ADC_GetInjectedConversionValue, .-ADC_GetInjectedConversionValue
 1297              		.align	1
 1298              		.global	ADC_ITConfig
 1299              		.thumb
 1300              		.thumb_func
 1301              		.type	ADC_ITConfig, %function
 1302              	ADC_ITConfig:
 1303              	.LFB143:
1495:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
1496:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @}
1497:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
1498:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1499:.\stm32f4periph\src/stm32f4xx_adc.c **** /** @defgroup ADC_Group7 Interrupts and flags management functions
1500:.\stm32f4periph\src/stm32f4xx_adc.c ****  *  @brief   Interrupts and flags management functions
1501:.\stm32f4periph\src/stm32f4xx_adc.c ****  *
1502:.\stm32f4periph\src/stm32f4xx_adc.c **** @verbatim   
1503:.\stm32f4periph\src/stm32f4xx_adc.c ****  ===============================================================================
1504:.\stm32f4periph\src/stm32f4xx_adc.c ****                    Interrupts and flags management functions
1505:.\stm32f4periph\src/stm32f4xx_adc.c ****  ===============================================================================  
1506:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1507:.\stm32f4periph\src/stm32f4xx_adc.c ****   This section provides functions allowing to configure the ADC Interrupts and 
1508:.\stm32f4periph\src/stm32f4xx_adc.c ****   to get the status and clear flags and Interrupts pending bits.
1509:.\stm32f4periph\src/stm32f4xx_adc.c ****   
1510:.\stm32f4periph\src/stm32f4xx_adc.c ****   Each ADC provides 4 Interrupts sources and 6 Flags which can be divided into 
1511:.\stm32f4periph\src/stm32f4xx_adc.c ****   3 groups:
1512:.\stm32f4periph\src/stm32f4xx_adc.c ****   
1513:.\stm32f4periph\src/stm32f4xx_adc.c ****   I. Flags and Interrupts for ADC regular channels
1514:.\stm32f4periph\src/stm32f4xx_adc.c ****   =================================================
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 51


1515:.\stm32f4periph\src/stm32f4xx_adc.c ****   Flags :
1516:.\stm32f4periph\src/stm32f4xx_adc.c ****   ---------- 
1517:.\stm32f4periph\src/stm32f4xx_adc.c ****      1. ADC_FLAG_OVR : Overrun detection when regular converted data are lost
1518:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1519:.\stm32f4periph\src/stm32f4xx_adc.c ****      2. ADC_FLAG_EOC : Regular channel end of conversion ==> to indicate (depending 
1520:.\stm32f4periph\src/stm32f4xx_adc.c ****               on EOCS bit, managed by ADC_EOCOnEachRegularChannelCmd() ) the end of:
1521:.\stm32f4periph\src/stm32f4xx_adc.c ****                ==> a regular CHANNEL conversion 
1522:.\stm32f4periph\src/stm32f4xx_adc.c ****                ==> sequence of regular GROUP conversions .
1523:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1524:.\stm32f4periph\src/stm32f4xx_adc.c ****      3. ADC_FLAG_STRT: Regular channel start ==> to indicate when regular CHANNEL 
1525:.\stm32f4periph\src/stm32f4xx_adc.c ****               conversion starts.
1526:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1527:.\stm32f4periph\src/stm32f4xx_adc.c ****   Interrupts :
1528:.\stm32f4periph\src/stm32f4xx_adc.c ****   ------------
1529:.\stm32f4periph\src/stm32f4xx_adc.c ****      1. ADC_IT_OVR : specifies the interrupt source for Overrun detection event.  
1530:.\stm32f4periph\src/stm32f4xx_adc.c ****      2. ADC_IT_EOC : specifies the interrupt source for Regular channel end of 
1531:.\stm32f4periph\src/stm32f4xx_adc.c ****                      conversion event.
1532:.\stm32f4periph\src/stm32f4xx_adc.c ****   
1533:.\stm32f4periph\src/stm32f4xx_adc.c ****   
1534:.\stm32f4periph\src/stm32f4xx_adc.c ****   II. Flags and Interrupts for ADC Injected channels
1535:.\stm32f4periph\src/stm32f4xx_adc.c ****   =================================================
1536:.\stm32f4periph\src/stm32f4xx_adc.c ****   Flags :
1537:.\stm32f4periph\src/stm32f4xx_adc.c ****   ---------- 
1538:.\stm32f4periph\src/stm32f4xx_adc.c ****      1. ADC_FLAG_JEOC : Injected channel end of conversion ==> to indicate at 
1539:.\stm32f4periph\src/stm32f4xx_adc.c ****                the end of injected GROUP conversion  
1540:.\stm32f4periph\src/stm32f4xx_adc.c ****               
1541:.\stm32f4periph\src/stm32f4xx_adc.c ****      2. ADC_FLAG_JSTRT: Injected channel start ==> to indicate hardware when 
1542:.\stm32f4periph\src/stm32f4xx_adc.c ****                injected GROUP conversion starts.
1543:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1544:.\stm32f4periph\src/stm32f4xx_adc.c ****   Interrupts :
1545:.\stm32f4periph\src/stm32f4xx_adc.c ****   ------------
1546:.\stm32f4periph\src/stm32f4xx_adc.c ****      1. ADC_IT_JEOC : specifies the interrupt source for Injected channel end of 
1547:.\stm32f4periph\src/stm32f4xx_adc.c ****                       conversion event.     
1548:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1549:.\stm32f4periph\src/stm32f4xx_adc.c ****   III. General Flags and Interrupts for the ADC
1550:.\stm32f4periph\src/stm32f4xx_adc.c ****   ================================================= 
1551:.\stm32f4periph\src/stm32f4xx_adc.c ****   Flags :
1552:.\stm32f4periph\src/stm32f4xx_adc.c ****   ---------- 
1553:.\stm32f4periph\src/stm32f4xx_adc.c ****      1. ADC_FLAG_AWD: Analog watchdog ==> to indicate if the converted voltage 
1554:.\stm32f4periph\src/stm32f4xx_adc.c ****               crosses the programmed thresholds values.
1555:.\stm32f4periph\src/stm32f4xx_adc.c ****               
1556:.\stm32f4periph\src/stm32f4xx_adc.c ****   Interrupts :
1557:.\stm32f4periph\src/stm32f4xx_adc.c ****   ------------
1558:.\stm32f4periph\src/stm32f4xx_adc.c ****      1. ADC_IT_AWD : specifies the interrupt source for Analog watchdog event. 
1559:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1560:.\stm32f4periph\src/stm32f4xx_adc.c ****   
1561:.\stm32f4periph\src/stm32f4xx_adc.c ****   The user should identify which mode will be used in his application to manage 
1562:.\stm32f4periph\src/stm32f4xx_adc.c ****   the ADC controller events: Polling mode or Interrupt mode.
1563:.\stm32f4periph\src/stm32f4xx_adc.c ****   
1564:.\stm32f4periph\src/stm32f4xx_adc.c ****   In the Polling Mode it is advised to use the following functions:
1565:.\stm32f4periph\src/stm32f4xx_adc.c ****       - ADC_GetFlagStatus() : to check if flags events occur. 
1566:.\stm32f4periph\src/stm32f4xx_adc.c ****       - ADC_ClearFlag()     : to clear the flags events.
1567:.\stm32f4periph\src/stm32f4xx_adc.c ****       
1568:.\stm32f4periph\src/stm32f4xx_adc.c ****   In the Interrupt Mode it is advised to use the following functions:
1569:.\stm32f4periph\src/stm32f4xx_adc.c ****      - ADC_ITConfig()          : to enable or disable the interrupt source.
1570:.\stm32f4periph\src/stm32f4xx_adc.c ****      - ADC_GetITStatus()       : to check if Interrupt occurs.
1571:.\stm32f4periph\src/stm32f4xx_adc.c ****      - ADC_ClearITPendingBit() : to clear the Interrupt pending Bit 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 52


1572:.\stm32f4periph\src/stm32f4xx_adc.c ****                                  (corresponding Flag). 
1573:.\stm32f4periph\src/stm32f4xx_adc.c **** @endverbatim
1574:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @{
1575:.\stm32f4periph\src/stm32f4xx_adc.c ****   */ 
1576:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
1577:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Enables or disables the specified ADC interrupts.
1578:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1579:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt sources to be enabled or disabled. 
1580:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1581:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_IT_EOC: End of conversion interrupt mask
1582:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_IT_AWD: Analog watchdog interrupt mask
1583:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1584:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_IT_OVR: Overrun interrupt enable                       
1585:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  NewState: new state of the specified ADC interrupts.
1586:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
1587:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval None
1588:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
1589:.\stm32f4periph\src/stm32f4xx_adc.c **** void ADC_ITConfig(ADC_TypeDef* ADCx, uint16_t ADC_IT, FunctionalState NewState)  
1590:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 1304              		.loc 1 1590 0
 1305              		.cfi_startproc
 1306              		@ args = 0, pretend = 0, frame = 0
 1307              		@ frame_needed = 0, uses_anonymous_args = 0
 1308              		@ link register save eliminated.
 1309              	.LVL134:
1591:.\stm32f4periph\src/stm32f4xx_adc.c ****   uint32_t itmask = 0;
1592:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
1593:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1594:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1595:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_IT(ADC_IT)); 
1596:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1597:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Get the ADC IT index */
1598:.\stm32f4periph\src/stm32f4xx_adc.c ****   itmask = (uint8_t)ADC_IT;
1599:.\stm32f4periph\src/stm32f4xx_adc.c ****   itmask = (uint32_t)0x01 << itmask;    
 1310              		.loc 1 1599 0
 1311 034a 0123     		movs	r3, #1	@ tmp146,
 1312 034c C9B2     		uxtb	r1, r1	@ ADC_IT, ADC_IT
 1313              	.LVL135:
 1314 034e 03FA01F1 		lsl	r1, r3, r1	@ itmask, tmp146, ADC_IT
 1315              	.LVL136:
1600:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1601:.\stm32f4periph\src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
1602:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
1603:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Enable the selected ADC interrupts */
1604:.\stm32f4periph\src/stm32f4xx_adc.c ****     ADCx->CR1 |= itmask;
 1316              		.loc 1 1604 0
 1317 0352 4368     		ldr	r3, [r0, #4]	@ D.7501,
1601:.\stm32f4periph\src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 1318              		.loc 1 1601 0
 1319 0354 0AB1     		cbz	r2, .L87	@ NewState,
 1320              		.loc 1 1604 0
 1321 0356 1943     		orrs	r1, r1, r3	@, D.7502, itmask, D.7501
 1322              	.LVL137:
 1323 0358 01E0     		b	.L89	@
 1324              	.LVL138:
 1325              	.L87:
1605:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 53


1606:.\stm32f4periph\src/stm32f4xx_adc.c ****   else
1607:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
1608:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* Disable the selected ADC interrupts */
1609:.\stm32f4periph\src/stm32f4xx_adc.c ****     ADCx->CR1 &= (~(uint32_t)itmask);
 1326              		.loc 1 1609 0
 1327 035a 23EA0101 		bic	r1, r3, r1	@ D.7506, D.7504, itmask
 1328              	.LVL139:
 1329              	.L89:
 1330 035e 4160     		str	r1, [r0, #4]	@ D.7506,
 1331 0360 7047     		bx	lr	@
 1332              		.cfi_endproc
 1333              	.LFE143:
 1334              		.size	ADC_ITConfig, .-ADC_ITConfig
 1335              		.align	1
 1336              		.global	ADC_GetFlagStatus
 1337              		.thumb
 1338              		.thumb_func
 1339              		.type	ADC_GetFlagStatus, %function
 1340              	ADC_GetFlagStatus:
 1341              	.LFB144:
1610:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
1611:.\stm32f4periph\src/stm32f4xx_adc.c **** }
1612:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1613:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
1614:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Checks whether the specified ADC flag is set or not.
1615:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1616:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADC_FLAG: specifies the flag to check. 
1617:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1618:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_AWD: Analog watchdog flag
1619:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_EOC: End of conversion flag
1620:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_JEOC: End of injected group conversion flag
1621:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_JSTRT: Start of injected group conversion flag
1622:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_STRT: Start of regular group conversion flag
1623:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_OVR: Overrun flag                                                 
1624:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval The new state of ADC_FLAG (SET or RESET).
1625:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
1626:.\stm32f4periph\src/stm32f4xx_adc.c **** FlagStatus ADC_GetFlagStatus(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
1627:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 1342              		.loc 1 1627 0
 1343              		.cfi_startproc
 1344              		@ args = 0, pretend = 0, frame = 0
 1345              		@ frame_needed = 0, uses_anonymous_args = 0
 1346              		@ link register save eliminated.
 1347              	.LVL140:
1628:.\stm32f4periph\src/stm32f4xx_adc.c ****   FlagStatus bitstatus = RESET;
1629:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
1630:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1631:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_GET_FLAG(ADC_FLAG));
1632:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1633:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the status of the specified ADC flag */
1634:.\stm32f4periph\src/stm32f4xx_adc.c ****   if ((ADCx->SR & ADC_FLAG) != (uint8_t)RESET)
 1348              		.loc 1 1634 0
 1349 0362 0368     		ldr	r3, [r0, #0]	@ D.7489, ADCx_3(D)->SR
 1350              	.LVL141:
 1351 0364 1942     		tst	r1, r3	@ ADC_FLAG, D.7489
1635:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
1636:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* ADC_FLAG is set */
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 54


1637:.\stm32f4periph\src/stm32f4xx_adc.c ****     bitstatus = SET;
1638:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
1639:.\stm32f4periph\src/stm32f4xx_adc.c ****   else
1640:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
1641:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* ADC_FLAG is reset */
1642:.\stm32f4periph\src/stm32f4xx_adc.c ****     bitstatus = RESET;
1643:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
1644:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Return the ADC_FLAG status */
1645:.\stm32f4periph\src/stm32f4xx_adc.c ****   return  bitstatus;
1646:.\stm32f4periph\src/stm32f4xx_adc.c **** }
 1352              		.loc 1 1646 0
 1353 0366 0CBF     		ite	eq	@
 1354 0368 0020     		moveq	r0, #0	@,
 1355 036a 0120     		movne	r0, #1	@,
 1356              	.LVL142:
 1357 036c 7047     		bx	lr	@
 1358              		.cfi_endproc
 1359              	.LFE144:
 1360              		.size	ADC_GetFlagStatus, .-ADC_GetFlagStatus
 1361              		.align	1
 1362              		.global	ADC_ClearFlag
 1363              		.thumb
 1364              		.thumb_func
 1365              		.type	ADC_ClearFlag, %function
 1366              	ADC_ClearFlag:
 1367              	.LFB145:
1647:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1648:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
1649:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Clears the ADCx's pending flags.
1650:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1651:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADC_FLAG: specifies the flag to clear. 
1652:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter can be any combination of the following values:
1653:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_AWD: Analog watchdog flag
1654:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_EOC: End of conversion flag
1655:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_JEOC: End of injected group conversion flag
1656:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_JSTRT: Start of injected group conversion flag
1657:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_STRT: Start of regular group conversion flag
1658:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_OVR: Overrun flag                          
1659:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval None
1660:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
1661:.\stm32f4periph\src/stm32f4xx_adc.c **** void ADC_ClearFlag(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
1662:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 1368              		.loc 1 1662 0
 1369              		.cfi_startproc
 1370              		@ args = 0, pretend = 0, frame = 0
 1371              		@ frame_needed = 0, uses_anonymous_args = 0
 1372              		@ link register save eliminated.
 1373              	.LVL143:
1663:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
1664:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1665:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_CLEAR_FLAG(ADC_FLAG));
1666:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1667:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Clear the selected ADC flags */
1668:.\stm32f4periph\src/stm32f4xx_adc.c ****   ADCx->SR = ~(uint32_t)ADC_FLAG;
 1374              		.loc 1 1668 0
 1375 036e C943     		mvns	r1, r1	@ D.7488, ADC_FLAG
 1376              	.LVL144:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 55


 1377 0370 0160     		str	r1, [r0, #0]	@ D.7488, ADCx_4(D)->SR
 1378 0372 7047     		bx	lr	@
 1379              		.cfi_endproc
 1380              	.LFE145:
 1381              		.size	ADC_ClearFlag, .-ADC_ClearFlag
 1382              		.align	1
 1383              		.global	ADC_GetITStatus
 1384              		.thumb
 1385              		.thumb_func
 1386              		.type	ADC_GetITStatus, %function
 1387              	ADC_GetITStatus:
 1388              	.LFB146:
1669:.\stm32f4periph\src/stm32f4xx_adc.c **** }
1670:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1671:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
1672:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Checks whether the specified ADC interrupt has occurred or not.
1673:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADCx:   where x can be 1, 2 or 3 to select the ADC peripheral.
1674:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt source to check. 
1675:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1676:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_IT_EOC: End of conversion interrupt mask
1677:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_IT_AWD: Analog watchdog interrupt mask
1678:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1679:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_IT_OVR: Overrun interrupt mask                        
1680:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval The new state of ADC_IT (SET or RESET).
1681:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
1682:.\stm32f4periph\src/stm32f4xx_adc.c **** ITStatus ADC_GetITStatus(ADC_TypeDef* ADCx, uint16_t ADC_IT)
1683:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 1389              		.loc 1 1683 0
 1390              		.cfi_startproc
 1391              		@ args = 0, pretend = 0, frame = 0
 1392              		@ frame_needed = 0, uses_anonymous_args = 0
 1393              		@ link register save eliminated.
 1394              	.LVL145:
1684:.\stm32f4periph\src/stm32f4xx_adc.c ****   ITStatus bitstatus = RESET;
1685:.\stm32f4periph\src/stm32f4xx_adc.c ****   uint32_t itmask = 0, enablestatus = 0;
1686:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1687:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
1688:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1689:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_IT(ADC_IT));
1690:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1691:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Get the ADC IT index */
1692:.\stm32f4periph\src/stm32f4xx_adc.c ****   itmask = ADC_IT >> 8;
1693:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1694:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Get the ADC_IT enable bit status */
1695:.\stm32f4periph\src/stm32f4xx_adc.c ****   enablestatus = (ADCx->CR1 & ((uint32_t)0x01 << (uint8_t)ADC_IT)) ;
 1395              		.loc 1 1695 0
 1396 0374 4368     		ldr	r3, [r0, #4]	@ D.7475, ADCx_8(D)->CR1
 1397              	.LVL146:
1696:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1697:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the status of the specified ADC interrupt */
1698:.\stm32f4periph\src/stm32f4xx_adc.c ****   if (((ADCx->SR & itmask) != (uint32_t)RESET) && enablestatus)
 1398              		.loc 1 1698 0
 1399 0376 0068     		ldr	r0, [r0, #0]	@ D.7481, ADCx_8(D)->SR
 1400              	.LVL147:
 1401 0378 10EA1120 		ands	r0, r0, r1, lsr #8	@, tmp150, D.7481, ADC_IT,
 1402 037c 07D0     		beq	.L93	@,
1695:.\stm32f4periph\src/stm32f4xx_adc.c ****   enablestatus = (ADCx->CR1 & ((uint32_t)0x01 << (uint8_t)ADC_IT)) ;
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 56


 1403              		.loc 1 1695 0 discriminator 1
 1404 037e 0122     		movs	r2, #1	@ tmp153,
 1405 0380 C9B2     		uxtb	r1, r1	@ ADC_IT, ADC_IT
 1406              	.LVL148:
 1407 0382 02FA01F1 		lsl	r1, r2, r1	@ tmp152, tmp153, ADC_IT
 1408              		.loc 1 1698 0 discriminator 1
 1409 0386 1942     		tst	r1, r3	@ tmp152, D.7475
1699:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
1700:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* ADC_IT is set */
1701:.\stm32f4periph\src/stm32f4xx_adc.c ****     bitstatus = SET;
 1410              		.loc 1 1701 0 discriminator 1
 1411 0388 0CBF     		ite	eq	@
 1412 038a 0020     		moveq	r0, #0	@, bitstatus
 1413 038c 0120     		movne	r0, #1	@, bitstatus
 1414              	.L93:
 1415              	.LVL149:
1702:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
1703:.\stm32f4periph\src/stm32f4xx_adc.c ****   else
1704:.\stm32f4periph\src/stm32f4xx_adc.c ****   {
1705:.\stm32f4periph\src/stm32f4xx_adc.c ****     /* ADC_IT is reset */
1706:.\stm32f4periph\src/stm32f4xx_adc.c ****     bitstatus = RESET;
1707:.\stm32f4periph\src/stm32f4xx_adc.c ****   }
1708:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Return the ADC_IT status */
1709:.\stm32f4periph\src/stm32f4xx_adc.c ****   return  bitstatus;
1710:.\stm32f4periph\src/stm32f4xx_adc.c **** }
 1416              		.loc 1 1710 0
 1417 038e 7047     		bx	lr	@
 1418              		.cfi_endproc
 1419              	.LFE146:
 1420              		.size	ADC_GetITStatus, .-ADC_GetITStatus
 1421              		.align	1
 1422              		.global	ADC_ClearITPendingBit
 1423              		.thumb
 1424              		.thumb_func
 1425              		.type	ADC_ClearITPendingBit, %function
 1426              	ADC_ClearITPendingBit:
 1427              	.LFB147:
1711:.\stm32f4periph\src/stm32f4xx_adc.c **** 
1712:.\stm32f4periph\src/stm32f4xx_adc.c **** /**
1713:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @brief  Clears the ADCx's interrupt pending bits.
1714:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1715:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt pending bit to clear.
1716:.\stm32f4periph\src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1717:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_IT_EOC: End of conversion interrupt mask
1718:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_IT_AWD: Analog watchdog interrupt mask
1719:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1720:.\stm32f4periph\src/stm32f4xx_adc.c ****   *            @arg ADC_IT_OVR: Overrun interrupt mask                         
1721:.\stm32f4periph\src/stm32f4xx_adc.c ****   * @retval None
1722:.\stm32f4periph\src/stm32f4xx_adc.c ****   */
1723:.\stm32f4periph\src/stm32f4xx_adc.c **** void ADC_ClearITPendingBit(ADC_TypeDef* ADCx, uint16_t ADC_IT)
1724:.\stm32f4periph\src/stm32f4xx_adc.c **** {
 1428              		.loc 1 1724 0
 1429              		.cfi_startproc
 1430              		@ args = 0, pretend = 0, frame = 0
 1431              		@ frame_needed = 0, uses_anonymous_args = 0
 1432              		@ link register save eliminated.
 1433              	.LVL150:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 57


1725:.\stm32f4periph\src/stm32f4xx_adc.c ****   uint8_t itmask = 0;
1726:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Check the parameters */
1727:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1728:.\stm32f4periph\src/stm32f4xx_adc.c ****   assert_param(IS_ADC_IT(ADC_IT)); 
1729:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Get the ADC IT index */
1730:.\stm32f4periph\src/stm32f4xx_adc.c ****   itmask = (uint8_t)(ADC_IT >> 8);
1731:.\stm32f4periph\src/stm32f4xx_adc.c ****   /* Clear the selected ADC interrupt pending bits */
1732:.\stm32f4periph\src/stm32f4xx_adc.c ****   ADCx->SR = ~(uint32_t)itmask;
 1434              		.loc 1 1732 0
 1435 0390 6FEA1121 		mvn	r1, r1, lsr #8	@ D.7473, ADC_IT,
 1436              	.LVL151:
 1437 0394 0160     		str	r1, [r0, #0]	@ D.7473, ADCx_7(D)->SR
 1438 0396 7047     		bx	lr	@
 1439              		.cfi_endproc
 1440              	.LFE147:
 1441              		.size	ADC_ClearITPendingBit, .-ADC_ClearITPendingBit
 1442              	.Letext0:
 1443              		.file 2 "k:\\electronics\\gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/inclu
 1444              		.file 3 ".\\inc/stm32f4xx.h"
 1445              		.file 4 ".\\stm32f4periph\\inc/stm32f4xx_adc.h"
 1446              		.file 5 ".\\inc/core_cm4.h"
 1447              		.file 6 ".\\stm32f4periph\\inc/stm32f4xx_rcc.h"
 1448              		.section	.debug_info,"",%progbits
 1449              	.Ldebug_info0:
 1450 0000 450D0000 		.4byte	0xd45
 1451 0004 0200     		.2byte	0x2
 1452 0006 00000000 		.4byte	.Ldebug_abbrev0
 1453 000a 04       		.byte	0x4
 1454 000b 01       		.uleb128 0x1
 1455 000c 55040000 		.4byte	.LASF111
 1456 0010 01       		.byte	0x1
 1457 0011 09040000 		.4byte	.LASF112
 1458 0015 E2000000 		.4byte	.LASF113
 1459 0019 00000000 		.4byte	.Ltext0
 1460 001d 98030000 		.4byte	.Letext0
 1461 0021 00000000 		.4byte	.Ldebug_line0
 1462 0025 02       		.uleb128 0x2
 1463 0026 01       		.byte	0x1
 1464 0027 06       		.byte	0x6
 1465 0028 B3000000 		.4byte	.LASF0
 1466 002c 03       		.uleb128 0x3
 1467 002d D9060000 		.4byte	.LASF3
 1468 0031 02       		.byte	0x2
 1469 0032 2A       		.byte	0x2a
 1470 0033 37000000 		.4byte	0x37
 1471 0037 02       		.uleb128 0x2
 1472 0038 01       		.byte	0x1
 1473 0039 08       		.byte	0x8
 1474 003a 4F050000 		.4byte	.LASF1
 1475 003e 02       		.uleb128 0x2
 1476 003f 02       		.byte	0x2
 1477 0040 05       		.byte	0x5
 1478 0041 5D050000 		.4byte	.LASF2
 1479 0045 03       		.uleb128 0x3
 1480 0046 AD010000 		.4byte	.LASF4
 1481 004a 02       		.byte	0x2
 1482 004b 36       		.byte	0x36
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 58


 1483 004c 50000000 		.4byte	0x50
 1484 0050 02       		.uleb128 0x2
 1485 0051 02       		.byte	0x2
 1486 0052 07       		.byte	0x7
 1487 0053 D8020000 		.4byte	.LASF5
 1488 0057 03       		.uleb128 0x3
 1489 0058 47050000 		.4byte	.LASF6
 1490 005c 02       		.byte	0x2
 1491 005d 4F       		.byte	0x4f
 1492 005e 62000000 		.4byte	0x62
 1493 0062 02       		.uleb128 0x2
 1494 0063 04       		.byte	0x4
 1495 0064 05       		.byte	0x5
 1496 0065 71010000 		.4byte	.LASF7
 1497 0069 03       		.uleb128 0x3
 1498 006a E2050000 		.4byte	.LASF8
 1499 006e 02       		.byte	0x2
 1500 006f 50       		.byte	0x50
 1501 0070 74000000 		.4byte	0x74
 1502 0074 02       		.uleb128 0x2
 1503 0075 04       		.byte	0x4
 1504 0076 07       		.byte	0x7
 1505 0077 7D020000 		.4byte	.LASF9
 1506 007b 02       		.uleb128 0x2
 1507 007c 08       		.byte	0x8
 1508 007d 05       		.byte	0x5
 1509 007e A5000000 		.4byte	.LASF10
 1510 0082 02       		.uleb128 0x2
 1511 0083 08       		.byte	0x8
 1512 0084 07       		.byte	0x7
 1513 0085 62000000 		.4byte	.LASF11
 1514 0089 04       		.uleb128 0x4
 1515 008a 04       		.byte	0x4
 1516 008b 05       		.byte	0x5
 1517 008c 696E7400 		.ascii	"int\000"
 1518 0090 02       		.uleb128 0x2
 1519 0091 04       		.byte	0x4
 1520 0092 07       		.byte	0x7
 1521 0093 63020000 		.4byte	.LASF12
 1522 0097 02       		.uleb128 0x2
 1523 0098 04       		.byte	0x4
 1524 0099 07       		.byte	0x7
 1525 009a C8030000 		.4byte	.LASF13
 1526 009e 05       		.uleb128 0x5
 1527 009f 69000000 		.4byte	0x69
 1528 00a3 05       		.uleb128 0x5
 1529 00a4 57000000 		.4byte	0x57
 1530 00a8 06       		.uleb128 0x6
 1531 00a9 01       		.byte	0x1
 1532 00aa 03       		.byte	0x3
 1533 00ab 1E01     		.2byte	0x11e
 1534 00ad BE000000 		.4byte	0xbe
 1535 00b1 07       		.uleb128 0x7
 1536 00b2 CB040000 		.4byte	.LASF14
 1537 00b6 00       		.sleb128 0
 1538 00b7 08       		.uleb128 0x8
 1539 00b8 53455400 		.ascii	"SET\000"
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 59


 1540 00bc 01       		.sleb128 1
 1541 00bd 00       		.byte	0
 1542 00be 09       		.uleb128 0x9
 1543 00bf 25000000 		.4byte	.LASF15
 1544 00c3 03       		.byte	0x3
 1545 00c4 1E01     		.2byte	0x11e
 1546 00c6 A8000000 		.4byte	0xa8
 1547 00ca 09       		.uleb128 0x9
 1548 00cb 42020000 		.4byte	.LASF16
 1549 00cf 03       		.byte	0x3
 1550 00d0 1E01     		.2byte	0x11e
 1551 00d2 A8000000 		.4byte	0xa8
 1552 00d6 06       		.uleb128 0x6
 1553 00d7 01       		.byte	0x1
 1554 00d8 03       		.byte	0x3
 1555 00d9 2001     		.2byte	0x120
 1556 00db EC000000 		.4byte	0xec
 1557 00df 07       		.uleb128 0x7
 1558 00e0 5A000000 		.4byte	.LASF17
 1559 00e4 00       		.sleb128 0
 1560 00e5 07       		.uleb128 0x7
 1561 00e6 A6010000 		.4byte	.LASF18
 1562 00ea 01       		.sleb128 1
 1563 00eb 00       		.byte	0
 1564 00ec 09       		.uleb128 0x9
 1565 00ed 32020000 		.4byte	.LASF19
 1566 00f1 03       		.byte	0x3
 1567 00f2 2001     		.2byte	0x120
 1568 00f4 D6000000 		.4byte	0xd6
 1569 00f8 0A       		.uleb128 0xa
 1570 00f9 50       		.byte	0x50
 1571 00fa 03       		.byte	0x3
 1572 00fb 3101     		.2byte	0x131
 1573 00fd 2C020000 		.4byte	0x22c
 1574 0101 0B       		.uleb128 0xb
 1575 0102 535200   		.ascii	"SR\000"
 1576 0105 03       		.byte	0x3
 1577 0106 3301     		.2byte	0x133
 1578 0108 9E000000 		.4byte	0x9e
 1579 010c 02       		.byte	0x2
 1580 010d 23       		.byte	0x23
 1581 010e 00       		.uleb128 0
 1582 010f 0B       		.uleb128 0xb
 1583 0110 43523100 		.ascii	"CR1\000"
 1584 0114 03       		.byte	0x3
 1585 0115 3401     		.2byte	0x134
 1586 0117 9E000000 		.4byte	0x9e
 1587 011b 02       		.byte	0x2
 1588 011c 23       		.byte	0x23
 1589 011d 04       		.uleb128 0x4
 1590 011e 0B       		.uleb128 0xb
 1591 011f 43523200 		.ascii	"CR2\000"
 1592 0123 03       		.byte	0x3
 1593 0124 3501     		.2byte	0x135
 1594 0126 9E000000 		.4byte	0x9e
 1595 012a 02       		.byte	0x2
 1596 012b 23       		.byte	0x23
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 60


 1597 012c 08       		.uleb128 0x8
 1598 012d 0C       		.uleb128 0xc
 1599 012e 40040000 		.4byte	.LASF20
 1600 0132 03       		.byte	0x3
 1601 0133 3601     		.2byte	0x136
 1602 0135 9E000000 		.4byte	0x9e
 1603 0139 02       		.byte	0x2
 1604 013a 23       		.byte	0x23
 1605 013b 0C       		.uleb128 0xc
 1606 013c 0C       		.uleb128 0xc
 1607 013d 46000000 		.4byte	.LASF21
 1608 0141 03       		.byte	0x3
 1609 0142 3701     		.2byte	0x137
 1610 0144 9E000000 		.4byte	0x9e
 1611 0148 02       		.byte	0x2
 1612 0149 23       		.byte	0x23
 1613 014a 10       		.uleb128 0x10
 1614 014b 0C       		.uleb128 0xc
 1615 014c 79000000 		.4byte	.LASF22
 1616 0150 03       		.byte	0x3
 1617 0151 3801     		.2byte	0x138
 1618 0153 9E000000 		.4byte	0x9e
 1619 0157 02       		.byte	0x2
 1620 0158 23       		.byte	0x23
 1621 0159 14       		.uleb128 0x14
 1622 015a 0C       		.uleb128 0xc
 1623 015b 6E030000 		.4byte	.LASF23
 1624 015f 03       		.byte	0x3
 1625 0160 3901     		.2byte	0x139
 1626 0162 9E000000 		.4byte	0x9e
 1627 0166 02       		.byte	0x2
 1628 0167 23       		.byte	0x23
 1629 0168 18       		.uleb128 0x18
 1630 0169 0C       		.uleb128 0xc
 1631 016a 74030000 		.4byte	.LASF24
 1632 016e 03       		.byte	0x3
 1633 016f 3A01     		.2byte	0x13a
 1634 0171 9E000000 		.4byte	0x9e
 1635 0175 02       		.byte	0x2
 1636 0176 23       		.byte	0x23
 1637 0177 1C       		.uleb128 0x1c
 1638 0178 0C       		.uleb128 0xc
 1639 0179 BC050000 		.4byte	.LASF25
 1640 017d 03       		.byte	0x3
 1641 017e 3B01     		.2byte	0x13b
 1642 0180 9E000000 		.4byte	0x9e
 1643 0184 02       		.byte	0x2
 1644 0185 23       		.byte	0x23
 1645 0186 20       		.uleb128 0x20
 1646 0187 0B       		.uleb128 0xb
 1647 0188 48545200 		.ascii	"HTR\000"
 1648 018c 03       		.byte	0x3
 1649 018d 3C01     		.2byte	0x13c
 1650 018f 9E000000 		.4byte	0x9e
 1651 0193 02       		.byte	0x2
 1652 0194 23       		.byte	0x23
 1653 0195 24       		.uleb128 0x24
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 61


 1654 0196 0B       		.uleb128 0xb
 1655 0197 4C545200 		.ascii	"LTR\000"
 1656 019b 03       		.byte	0x3
 1657 019c 3D01     		.2byte	0x13d
 1658 019e 9E000000 		.4byte	0x9e
 1659 01a2 02       		.byte	0x2
 1660 01a3 23       		.byte	0x23
 1661 01a4 28       		.uleb128 0x28
 1662 01a5 0C       		.uleb128 0xc
 1663 01a6 8E040000 		.4byte	.LASF26
 1664 01aa 03       		.byte	0x3
 1665 01ab 3E01     		.2byte	0x13e
 1666 01ad 9E000000 		.4byte	0x9e
 1667 01b1 02       		.byte	0x2
 1668 01b2 23       		.byte	0x23
 1669 01b3 2C       		.uleb128 0x2c
 1670 01b4 0C       		.uleb128 0xc
 1671 01b5 93040000 		.4byte	.LASF27
 1672 01b9 03       		.byte	0x3
 1673 01ba 3F01     		.2byte	0x13f
 1674 01bc 9E000000 		.4byte	0x9e
 1675 01c0 02       		.byte	0x2
 1676 01c1 23       		.byte	0x23
 1677 01c2 30       		.uleb128 0x30
 1678 01c3 0C       		.uleb128 0xc
 1679 01c4 98040000 		.4byte	.LASF28
 1680 01c8 03       		.byte	0x3
 1681 01c9 4001     		.2byte	0x140
 1682 01cb 9E000000 		.4byte	0x9e
 1683 01cf 02       		.byte	0x2
 1684 01d0 23       		.byte	0x23
 1685 01d1 34       		.uleb128 0x34
 1686 01d2 0C       		.uleb128 0xc
 1687 01d3 A0000000 		.4byte	.LASF29
 1688 01d7 03       		.byte	0x3
 1689 01d8 4101     		.2byte	0x141
 1690 01da 9E000000 		.4byte	0x9e
 1691 01de 02       		.byte	0x2
 1692 01df 23       		.byte	0x23
 1693 01e0 38       		.uleb128 0x38
 1694 01e1 0C       		.uleb128 0xc
 1695 01e2 F3060000 		.4byte	.LASF30
 1696 01e6 03       		.byte	0x3
 1697 01e7 4201     		.2byte	0x142
 1698 01e9 9E000000 		.4byte	0x9e
 1699 01ed 02       		.byte	0x2
 1700 01ee 23       		.byte	0x23
 1701 01ef 3C       		.uleb128 0x3c
 1702 01f0 0C       		.uleb128 0xc
 1703 01f1 F8060000 		.4byte	.LASF31
 1704 01f5 03       		.byte	0x3
 1705 01f6 4301     		.2byte	0x143
 1706 01f8 9E000000 		.4byte	0x9e
 1707 01fc 02       		.byte	0x2
 1708 01fd 23       		.byte	0x23
 1709 01fe 40       		.uleb128 0x40
 1710 01ff 0C       		.uleb128 0xc
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 62


 1711 0200 FD060000 		.4byte	.LASF32
 1712 0204 03       		.byte	0x3
 1713 0205 4401     		.2byte	0x144
 1714 0207 9E000000 		.4byte	0x9e
 1715 020b 02       		.byte	0x2
 1716 020c 23       		.byte	0x23
 1717 020d 44       		.uleb128 0x44
 1718 020e 0C       		.uleb128 0xc
 1719 020f 02070000 		.4byte	.LASF33
 1720 0213 03       		.byte	0x3
 1721 0214 4501     		.2byte	0x145
 1722 0216 9E000000 		.4byte	0x9e
 1723 021a 02       		.byte	0x2
 1724 021b 23       		.byte	0x23
 1725 021c 48       		.uleb128 0x48
 1726 021d 0B       		.uleb128 0xb
 1727 021e 445200   		.ascii	"DR\000"
 1728 0221 03       		.byte	0x3
 1729 0222 4601     		.2byte	0x146
 1730 0224 9E000000 		.4byte	0x9e
 1731 0228 02       		.byte	0x2
 1732 0229 23       		.byte	0x23
 1733 022a 4C       		.uleb128 0x4c
 1734 022b 00       		.byte	0
 1735 022c 09       		.uleb128 0x9
 1736 022d B6010000 		.4byte	.LASF34
 1737 0231 03       		.byte	0x3
 1738 0232 4701     		.2byte	0x147
 1739 0234 F8000000 		.4byte	0xf8
 1740 0238 0A       		.uleb128 0xa
 1741 0239 0C       		.byte	0xc
 1742 023a 03       		.byte	0x3
 1743 023b 4901     		.2byte	0x149
 1744 023d 6F020000 		.4byte	0x26f
 1745 0241 0B       		.uleb128 0xb
 1746 0242 43535200 		.ascii	"CSR\000"
 1747 0246 03       		.byte	0x3
 1748 0247 4B01     		.2byte	0x14b
 1749 0249 9E000000 		.4byte	0x9e
 1750 024d 02       		.byte	0x2
 1751 024e 23       		.byte	0x23
 1752 024f 00       		.uleb128 0
 1753 0250 0B       		.uleb128 0xb
 1754 0251 43435200 		.ascii	"CCR\000"
 1755 0255 03       		.byte	0x3
 1756 0256 4C01     		.2byte	0x14c
 1757 0258 9E000000 		.4byte	0x9e
 1758 025c 02       		.byte	0x2
 1759 025d 23       		.byte	0x23
 1760 025e 04       		.uleb128 0x4
 1761 025f 0B       		.uleb128 0xb
 1762 0260 43445200 		.ascii	"CDR\000"
 1763 0264 03       		.byte	0x3
 1764 0265 4D01     		.2byte	0x14d
 1765 0267 9E000000 		.4byte	0x9e
 1766 026b 02       		.byte	0x2
 1767 026c 23       		.byte	0x23
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 63


 1768 026d 08       		.uleb128 0x8
 1769 026e 00       		.byte	0
 1770 026f 09       		.uleb128 0x9
 1771 0270 DC030000 		.4byte	.LASF35
 1772 0274 03       		.byte	0x3
 1773 0275 4F01     		.2byte	0x14f
 1774 0277 38020000 		.4byte	0x238
 1775 027b 0D       		.uleb128 0xd
 1776 027c 18       		.byte	0x18
 1777 027d 04       		.byte	0x4
 1778 027e 35       		.byte	0x35
 1779 027f E6020000 		.4byte	0x2e6
 1780 0283 0E       		.uleb128 0xe
 1781 0284 11070000 		.4byte	.LASF36
 1782 0288 04       		.byte	0x4
 1783 0289 37       		.byte	0x37
 1784 028a 69000000 		.4byte	0x69
 1785 028e 02       		.byte	0x2
 1786 028f 23       		.byte	0x23
 1787 0290 00       		.uleb128 0
 1788 0291 0E       		.uleb128 0xe
 1789 0292 AB050000 		.4byte	.LASF37
 1790 0296 04       		.byte	0x4
 1791 0297 39       		.byte	0x39
 1792 0298 EC000000 		.4byte	0xec
 1793 029c 02       		.byte	0x2
 1794 029d 23       		.byte	0x23
 1795 029e 04       		.uleb128 0x4
 1796 029f 0E       		.uleb128 0xe
 1797 02a0 5A010000 		.4byte	.LASF38
 1798 02a4 04       		.byte	0x4
 1799 02a5 3D       		.byte	0x3d
 1800 02a6 EC000000 		.4byte	0xec
 1801 02aa 02       		.byte	0x2
 1802 02ab 23       		.byte	0x23
 1803 02ac 05       		.uleb128 0x5
 1804 02ad 0E       		.uleb128 0xe
 1805 02ae 92050000 		.4byte	.LASF39
 1806 02b2 04       		.byte	0x4
 1807 02b3 40       		.byte	0x40
 1808 02b4 69000000 		.4byte	0x69
 1809 02b8 02       		.byte	0x2
 1810 02b9 23       		.byte	0x23
 1811 02ba 08       		.uleb128 0x8
 1812 02bb 0E       		.uleb128 0xe
 1813 02bc 10000000 		.4byte	.LASF40
 1814 02c0 04       		.byte	0x4
 1815 02c1 44       		.byte	0x44
 1816 02c2 69000000 		.4byte	0x69
 1817 02c6 02       		.byte	0x2
 1818 02c7 23       		.byte	0x23
 1819 02c8 0C       		.uleb128 0xc
 1820 02c9 0E       		.uleb128 0xe
 1821 02ca EB050000 		.4byte	.LASF41
 1822 02ce 04       		.byte	0x4
 1823 02cf 48       		.byte	0x48
 1824 02d0 69000000 		.4byte	0x69
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 64


 1825 02d4 02       		.byte	0x2
 1826 02d5 23       		.byte	0x23
 1827 02d6 10       		.uleb128 0x10
 1828 02d7 0E       		.uleb128 0xe
 1829 02d8 7F000000 		.4byte	.LASF42
 1830 02dc 04       		.byte	0x4
 1831 02dd 4B       		.byte	0x4b
 1832 02de 2C000000 		.4byte	0x2c
 1833 02e2 02       		.byte	0x2
 1834 02e3 23       		.byte	0x23
 1835 02e4 14       		.uleb128 0x14
 1836 02e5 00       		.byte	0
 1837 02e6 03       		.uleb128 0x3
 1838 02e7 C2050000 		.4byte	.LASF43
 1839 02eb 04       		.byte	0x4
 1840 02ec 4F       		.byte	0x4f
 1841 02ed 7B020000 		.4byte	0x27b
 1842 02f1 0D       		.uleb128 0xd
 1843 02f2 10       		.byte	0x10
 1844 02f3 04       		.byte	0x4
 1845 02f4 54       		.byte	0x54
 1846 02f5 32030000 		.4byte	0x332
 1847 02f9 0E       		.uleb128 0xe
 1848 02fa 67050000 		.4byte	.LASF44
 1849 02fe 04       		.byte	0x4
 1850 02ff 56       		.byte	0x56
 1851 0300 69000000 		.4byte	0x69
 1852 0304 02       		.byte	0x2
 1853 0305 23       		.byte	0x23
 1854 0306 00       		.uleb128 0
 1855 0307 0E       		.uleb128 0xe
 1856 0308 30060000 		.4byte	.LASF45
 1857 030c 04       		.byte	0x4
 1858 030d 59       		.byte	0x59
 1859 030e 69000000 		.4byte	0x69
 1860 0312 02       		.byte	0x2
 1861 0313 23       		.byte	0x23
 1862 0314 04       		.uleb128 0x4
 1863 0315 0E       		.uleb128 0xe
 1864 0316 A8020000 		.4byte	.LASF46
 1865 031a 04       		.byte	0x4
 1866 031b 5C       		.byte	0x5c
 1867 031c 69000000 		.4byte	0x69
 1868 0320 02       		.byte	0x2
 1869 0321 23       		.byte	0x23
 1870 0322 08       		.uleb128 0x8
 1871 0323 0E       		.uleb128 0xe
 1872 0324 55070000 		.4byte	.LASF47
 1873 0328 04       		.byte	0x4
 1874 0329 60       		.byte	0x60
 1875 032a 69000000 		.4byte	0x69
 1876 032e 02       		.byte	0x2
 1877 032f 23       		.byte	0x23
 1878 0330 0C       		.uleb128 0xc
 1879 0331 00       		.byte	0
 1880 0332 03       		.uleb128 0x3
 1881 0333 30000000 		.4byte	.LASF48
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 65


 1882 0337 04       		.byte	0x4
 1883 0338 64       		.byte	0x64
 1884 0339 F1020000 		.4byte	0x2f1
 1885 033d 0F       		.uleb128 0xf
 1886 033e 01       		.byte	0x1
 1887 033f 3F030000 		.4byte	.LASF49
 1888 0343 01       		.byte	0x1
 1889 0344 D6       		.byte	0xd6
 1890 0345 01       		.byte	0x1
 1891 0346 00000000 		.4byte	.LFB110
 1892 034a 1A000000 		.4byte	.LFE110
 1893 034e 00000000 		.4byte	.LLST0
 1894 0352 01       		.byte	0x1
 1895 0353 89030000 		.4byte	0x389
 1896 0357 10       		.uleb128 0x10
 1897 0358 0C000000 		.4byte	.LVL0
 1898 035c 320D0000 		.4byte	0xd32
 1899 0360 71030000 		.4byte	0x371
 1900 0364 11       		.uleb128 0x11
 1901 0365 01       		.byte	0x1
 1902 0366 51       		.byte	0x51
 1903 0367 01       		.byte	0x1
 1904 0368 31       		.byte	0x31
 1905 0369 11       		.uleb128 0x11
 1906 036a 01       		.byte	0x1
 1907 036b 50       		.byte	0x50
 1908 036c 03       		.byte	0x3
 1909 036d 0A       		.byte	0xa
 1910 036e 0001     		.2byte	0x100
 1911 0370 00       		.byte	0
 1912 0371 12       		.uleb128 0x12
 1913 0372 1A000000 		.4byte	.LVL1
 1914 0376 01       		.byte	0x1
 1915 0377 320D0000 		.4byte	0xd32
 1916 037b 11       		.uleb128 0x11
 1917 037c 01       		.byte	0x1
 1918 037d 51       		.byte	0x51
 1919 037e 01       		.byte	0x1
 1920 037f 30       		.byte	0x30
 1921 0380 11       		.uleb128 0x11
 1922 0381 01       		.byte	0x1
 1923 0382 50       		.byte	0x50
 1924 0383 03       		.byte	0x3
 1925 0384 0A       		.byte	0xa
 1926 0385 0001     		.2byte	0x100
 1927 0387 00       		.byte	0
 1928 0388 00       		.byte	0
 1929 0389 0F       		.uleb128 0xf
 1930 038a 01       		.byte	0x1
 1931 038b 51000000 		.4byte	.LASF50
 1932 038f 01       		.byte	0x1
 1933 0390 EC       		.byte	0xec
 1934 0391 01       		.byte	0x1
 1935 0392 1A000000 		.4byte	.LFB111
 1936 0396 64000000 		.4byte	.LFE111
 1937 039a 20000000 		.4byte	.LLST1
 1938 039e 01       		.byte	0x1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 66


 1939 039f DC030000 		.4byte	0x3dc
 1940 03a3 13       		.uleb128 0x13
 1941 03a4 4C000000 		.4byte	.LASF51
 1942 03a8 01       		.byte	0x1
 1943 03a9 EC       		.byte	0xec
 1944 03aa DC030000 		.4byte	0x3dc
 1945 03ae 01       		.byte	0x1
 1946 03af 50       		.byte	0x50
 1947 03b0 13       		.uleb128 0x13
 1948 03b1 C2010000 		.4byte	.LASF52
 1949 03b5 01       		.byte	0x1
 1950 03b6 EC       		.byte	0xec
 1951 03b7 E2030000 		.4byte	0x3e2
 1952 03bb 01       		.byte	0x1
 1953 03bc 51       		.byte	0x51
 1954 03bd 14       		.uleb128 0x14
 1955 03be 27030000 		.4byte	.LASF53
 1956 03c2 01       		.byte	0x1
 1957 03c3 EE       		.byte	0xee
 1958 03c4 69000000 		.4byte	0x69
 1959 03c8 40000000 		.4byte	.LLST2
 1960 03cc 14       		.uleb128 0x14
 1961 03cd 2F030000 		.4byte	.LASF54
 1962 03d1 01       		.byte	0x1
 1963 03d2 EF       		.byte	0xef
 1964 03d3 2C000000 		.4byte	0x2c
 1965 03d7 DE000000 		.4byte	.LLST3
 1966 03db 00       		.byte	0
 1967 03dc 15       		.uleb128 0x15
 1968 03dd 04       		.byte	0x4
 1969 03de 2C020000 		.4byte	0x22c
 1970 03e2 15       		.uleb128 0x15
 1971 03e3 04       		.byte	0x4
 1972 03e4 E6020000 		.4byte	0x2e6
 1973 03e8 16       		.uleb128 0x16
 1974 03e9 01       		.byte	0x1
 1975 03ea F0010000 		.4byte	.LASF55
 1976 03ee 01       		.byte	0x1
 1977 03ef 3701     		.2byte	0x137
 1978 03f1 01       		.byte	0x1
 1979 03f2 64000000 		.4byte	.LFB112
 1980 03f6 78000000 		.4byte	.LFE112
 1981 03fa 02       		.byte	0x2
 1982 03fb 7D       		.byte	0x7d
 1983 03fc 00       		.sleb128 0
 1984 03fd 01       		.byte	0x1
 1985 03fe 11040000 		.4byte	0x411
 1986 0402 17       		.uleb128 0x17
 1987 0403 C2010000 		.4byte	.LASF52
 1988 0407 01       		.byte	0x1
 1989 0408 3701     		.2byte	0x137
 1990 040a E2030000 		.4byte	0x3e2
 1991 040e 01       		.byte	0x1
 1992 040f 50       		.byte	0x50
 1993 0410 00       		.byte	0
 1994 0411 18       		.uleb128 0x18
 1995 0412 01       		.byte	0x1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 67


 1996 0413 3E060000 		.4byte	.LASF56
 1997 0417 01       		.byte	0x1
 1998 0418 5601     		.2byte	0x156
 1999 041a 01       		.byte	0x1
 2000 041b 78000000 		.4byte	.LFB113
 2001 041f A0000000 		.4byte	.LFE113
 2002 0423 03010000 		.4byte	.LLST4
 2003 0427 01       		.byte	0x1
 2004 0428 4D040000 		.4byte	0x44d
 2005 042c 19       		.uleb128 0x19
 2006 042d 32050000 		.4byte	.LASF57
 2007 0431 01       		.byte	0x1
 2008 0432 5601     		.2byte	0x156
 2009 0434 4D040000 		.4byte	0x44d
 2010 0438 23010000 		.4byte	.LLST5
 2011 043c 1A       		.uleb128 0x1a
 2012 043d 27030000 		.4byte	.LASF53
 2013 0441 01       		.byte	0x1
 2014 0442 5801     		.2byte	0x158
 2015 0444 69000000 		.4byte	0x69
 2016 0448 44010000 		.4byte	.LLST6
 2017 044c 00       		.byte	0
 2018 044d 15       		.uleb128 0x15
 2019 044e 04       		.byte	0x4
 2020 044f 32030000 		.4byte	0x332
 2021 0453 16       		.uleb128 0x16
 2022 0454 01       		.byte	0x1
 2023 0455 EB020000 		.4byte	.LASF58
 2024 0459 01       		.byte	0x1
 2025 045a 7A01     		.2byte	0x17a
 2026 045c 01       		.byte	0x1
 2027 045d A0000000 		.4byte	.LFB114
 2028 0461 AC000000 		.4byte	.LFE114
 2029 0465 02       		.byte	0x2
 2030 0466 7D       		.byte	0x7d
 2031 0467 00       		.sleb128 0
 2032 0468 01       		.byte	0x1
 2033 0469 7C040000 		.4byte	0x47c
 2034 046d 17       		.uleb128 0x17
 2035 046e 32050000 		.4byte	.LASF57
 2036 0472 01       		.byte	0x1
 2037 0473 7A01     		.2byte	0x17a
 2038 0475 4D040000 		.4byte	0x44d
 2039 0479 01       		.byte	0x1
 2040 047a 50       		.byte	0x50
 2041 047b 00       		.byte	0
 2042 047c 16       		.uleb128 0x16
 2043 047d 01       		.byte	0x1
 2044 047e 52010000 		.4byte	.LASF59
 2045 0482 01       		.byte	0x1
 2046 0483 9001     		.2byte	0x190
 2047 0485 01       		.byte	0x1
 2048 0486 AC000000 		.4byte	.LFB115
 2049 048a BE000000 		.4byte	.LFE115
 2050 048e 02       		.byte	0x2
 2051 048f 7D       		.byte	0x7d
 2052 0490 00       		.sleb128 0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 68


 2053 0491 01       		.byte	0x1
 2054 0492 B3040000 		.4byte	0x4b3
 2055 0496 17       		.uleb128 0x17
 2056 0497 4C000000 		.4byte	.LASF51
 2057 049b 01       		.byte	0x1
 2058 049c 9001     		.2byte	0x190
 2059 049e DC030000 		.4byte	0x3dc
 2060 04a2 01       		.byte	0x1
 2061 04a3 50       		.byte	0x50
 2062 04a4 17       		.uleb128 0x17
 2063 04a5 00000000 		.4byte	.LASF60
 2064 04a9 01       		.byte	0x1
 2065 04aa 9001     		.2byte	0x190
 2066 04ac EC000000 		.4byte	0xec
 2067 04b0 01       		.byte	0x1
 2068 04b1 51       		.byte	0x51
 2069 04b2 00       		.byte	0
 2070 04b3 16       		.uleb128 0x16
 2071 04b4 01       		.byte	0x1
 2072 04b5 BC060000 		.4byte	.LASF61
 2073 04b9 01       		.byte	0x1
 2074 04ba CA01     		.2byte	0x1ca
 2075 04bc 01       		.byte	0x1
 2076 04bd BE000000 		.4byte	.LFB116
 2077 04c1 CE000000 		.4byte	.LFE116
 2078 04c5 02       		.byte	0x2
 2079 04c6 7D       		.byte	0x7d
 2080 04c7 00       		.sleb128 0
 2081 04c8 01       		.byte	0x1
 2082 04c9 FC040000 		.4byte	0x4fc
 2083 04cd 17       		.uleb128 0x17
 2084 04ce 4C000000 		.4byte	.LASF51
 2085 04d2 01       		.byte	0x1
 2086 04d3 CA01     		.2byte	0x1ca
 2087 04d5 DC030000 		.4byte	0x3dc
 2088 04d9 01       		.byte	0x1
 2089 04da 50       		.byte	0x50
 2090 04db 19       		.uleb128 0x19
 2091 04dc 2D040000 		.4byte	.LASF62
 2092 04e0 01       		.byte	0x1
 2093 04e1 CA01     		.2byte	0x1ca
 2094 04e3 69000000 		.4byte	0x69
 2095 04e7 6E010000 		.4byte	.LLST7
 2096 04eb 1A       		.uleb128 0x1a
 2097 04ec 34010000 		.4byte	.LASF63
 2098 04f0 01       		.byte	0x1
 2099 04f1 CC01     		.2byte	0x1cc
 2100 04f3 69000000 		.4byte	0x69
 2101 04f7 8F010000 		.4byte	.LLST8
 2102 04fb 00       		.byte	0
 2103 04fc 16       		.uleb128 0x16
 2104 04fd 01       		.byte	0x1
 2105 04fe BF000000 		.4byte	.LASF64
 2106 0502 01       		.byte	0x1
 2107 0503 E701     		.2byte	0x1e7
 2108 0505 01       		.byte	0x1
 2109 0506 CE000000 		.4byte	.LFB117
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 69


 2110 050a D4000000 		.4byte	.LFE117
 2111 050e 02       		.byte	0x2
 2112 050f 7D       		.byte	0x7d
 2113 0510 00       		.sleb128 0
 2114 0511 01       		.byte	0x1
 2115 0512 41050000 		.4byte	0x541
 2116 0516 17       		.uleb128 0x17
 2117 0517 4C000000 		.4byte	.LASF51
 2118 051b 01       		.byte	0x1
 2119 051c E701     		.2byte	0x1e7
 2120 051e DC030000 		.4byte	0x3dc
 2121 0522 01       		.byte	0x1
 2122 0523 50       		.byte	0x50
 2123 0524 17       		.uleb128 0x17
 2124 0525 19030000 		.4byte	.LASF65
 2125 0529 01       		.byte	0x1
 2126 052a E701     		.2byte	0x1e7
 2127 052c 45000000 		.4byte	0x45
 2128 0530 01       		.byte	0x1
 2129 0531 51       		.byte	0x51
 2130 0532 17       		.uleb128 0x17
 2131 0533 25020000 		.4byte	.LASF66
 2132 0537 01       		.byte	0x1
 2133 0538 E801     		.2byte	0x1e8
 2134 053a 45000000 		.4byte	0x45
 2135 053e 01       		.byte	0x1
 2136 053f 52       		.byte	0x52
 2137 0540 00       		.byte	0
 2138 0541 16       		.uleb128 0x16
 2139 0542 01       		.byte	0x1
 2140 0543 FF010000 		.4byte	.LASF67
 2141 0547 01       		.byte	0x1
 2142 0548 1002     		.2byte	0x210
 2143 054a 01       		.byte	0x1
 2144 054b D4000000 		.4byte	.LFB118
 2145 054f E0000000 		.4byte	.LFE118
 2146 0553 02       		.byte	0x2
 2147 0554 7D       		.byte	0x7d
 2148 0555 00       		.sleb128 0
 2149 0556 01       		.byte	0x1
 2150 0557 8A050000 		.4byte	0x58a
 2151 055b 17       		.uleb128 0x17
 2152 055c 4C000000 		.4byte	.LASF51
 2153 0560 01       		.byte	0x1
 2154 0561 1002     		.2byte	0x210
 2155 0563 DC030000 		.4byte	0x3dc
 2156 0567 01       		.byte	0x1
 2157 0568 50       		.byte	0x50
 2158 0569 19       		.uleb128 0x19
 2159 056a BF040000 		.4byte	.LASF68
 2160 056e 01       		.byte	0x1
 2161 056f 1002     		.2byte	0x210
 2162 0571 2C000000 		.4byte	0x2c
 2163 0575 C4010000 		.4byte	.LLST9
 2164 0579 1A       		.uleb128 0x1a
 2165 057a 34010000 		.4byte	.LASF63
 2166 057e 01       		.byte	0x1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 70


 2167 057f 1202     		.2byte	0x212
 2168 0581 69000000 		.4byte	0x69
 2169 0585 E5010000 		.4byte	.LLST10
 2170 0589 00       		.byte	0
 2171 058a 16       		.uleb128 0x16
 2172 058b 01       		.byte	0x1
 2173 058c 8F020000 		.4byte	.LASF69
 2174 0590 01       		.byte	0x1
 2175 0591 5102     		.2byte	0x251
 2176 0593 01       		.byte	0x1
 2177 0594 E0000000 		.4byte	.LFB119
 2178 0598 F8000000 		.4byte	.LFE119
 2179 059c 02       		.byte	0x2
 2180 059d 7D       		.byte	0x7d
 2181 059e 00       		.sleb128 0
 2182 059f 01       		.byte	0x1
 2183 05a0 B3050000 		.4byte	0x5b3
 2184 05a4 17       		.uleb128 0x17
 2185 05a5 00000000 		.4byte	.LASF60
 2186 05a9 01       		.byte	0x1
 2187 05aa 5102     		.2byte	0x251
 2188 05ac EC000000 		.4byte	0xec
 2189 05b0 01       		.byte	0x1
 2190 05b1 50       		.byte	0x50
 2191 05b2 00       		.byte	0
 2192 05b3 16       		.uleb128 0x16
 2193 05b4 01       		.byte	0x1
 2194 05b5 6A070000 		.4byte	.LASF70
 2195 05b9 01       		.byte	0x1
 2196 05ba 6702     		.2byte	0x267
 2197 05bc 01       		.byte	0x1
 2198 05bd F8000000 		.4byte	.LFB120
 2199 05c1 10010000 		.4byte	.LFE120
 2200 05c5 02       		.byte	0x2
 2201 05c6 7D       		.byte	0x7d
 2202 05c7 00       		.sleb128 0
 2203 05c8 01       		.byte	0x1
 2204 05c9 DC050000 		.4byte	0x5dc
 2205 05cd 17       		.uleb128 0x17
 2206 05ce 00000000 		.4byte	.LASF60
 2207 05d2 01       		.byte	0x1
 2208 05d3 6702     		.2byte	0x267
 2209 05d5 EC000000 		.4byte	0xec
 2210 05d9 01       		.byte	0x1
 2211 05da 50       		.byte	0x50
 2212 05db 00       		.byte	0
 2213 05dc 18       		.uleb128 0x18
 2214 05dd 01       		.byte	0x1
 2215 05de 00030000 		.4byte	.LASF71
 2216 05e2 01       		.byte	0x1
 2217 05e3 CC02     		.2byte	0x2cc
 2218 05e5 01       		.byte	0x1
 2219 05e6 10010000 		.4byte	.LFB121
 2220 05ea B2010000 		.4byte	.LFE121
 2221 05ee 0F020000 		.4byte	.LLST11
 2222 05f2 01       		.byte	0x1
 2223 05f3 56060000 		.4byte	0x656
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 71


 2224 05f7 17       		.uleb128 0x17
 2225 05f8 4C000000 		.4byte	.LASF51
 2226 05fc 01       		.byte	0x1
 2227 05fd CC02     		.2byte	0x2cc
 2228 05ff DC030000 		.4byte	0x3dc
 2229 0603 01       		.byte	0x1
 2230 0604 50       		.byte	0x50
 2231 0605 19       		.uleb128 0x19
 2232 0606 BF040000 		.4byte	.LASF68
 2233 060a 01       		.byte	0x1
 2234 060b CC02     		.2byte	0x2cc
 2235 060d 2C000000 		.4byte	0x2c
 2236 0611 2F020000 		.4byte	.LLST12
 2237 0615 19       		.uleb128 0x19
 2238 0616 BA040000 		.4byte	.LASF72
 2239 061a 01       		.byte	0x1
 2240 061b CC02     		.2byte	0x2cc
 2241 061d 2C000000 		.4byte	0x2c
 2242 0621 82020000 		.4byte	.LLST13
 2243 0625 19       		.uleb128 0x19
 2244 0626 46040000 		.4byte	.LASF73
 2245 062a 01       		.byte	0x1
 2246 062b CC02     		.2byte	0x2cc
 2247 062d 2C000000 		.4byte	0x2c
 2248 0631 BC020000 		.4byte	.LLST14
 2249 0635 1A       		.uleb128 0x1a
 2250 0636 27030000 		.4byte	.LASF53
 2251 063a 01       		.byte	0x1
 2252 063b CE02     		.2byte	0x2ce
 2253 063d 69000000 		.4byte	0x69
 2254 0641 F6020000 		.4byte	.LLST15
 2255 0645 1A       		.uleb128 0x1a
 2256 0646 2F030000 		.4byte	.LASF54
 2257 064a 01       		.byte	0x1
 2258 064b CE02     		.2byte	0x2ce
 2259 064d 69000000 		.4byte	0x69
 2260 0651 B0030000 		.4byte	.LLST16
 2261 0655 00       		.byte	0
 2262 0656 16       		.uleb128 0x16
 2263 0657 01       		.byte	0x1
 2264 0658 3F070000 		.4byte	.LASF74
 2265 065c 01       		.byte	0x1
 2266 065d 4403     		.2byte	0x344
 2267 065f 01       		.byte	0x1
 2268 0660 B2010000 		.4byte	.LFB122
 2269 0664 BC010000 		.4byte	.LFE122
 2270 0668 02       		.byte	0x2
 2271 0669 7D       		.byte	0x7d
 2272 066a 00       		.sleb128 0
 2273 066b 01       		.byte	0x1
 2274 066c 7F060000 		.4byte	0x67f
 2275 0670 17       		.uleb128 0x17
 2276 0671 4C000000 		.4byte	.LASF51
 2277 0675 01       		.byte	0x1
 2278 0676 4403     		.2byte	0x344
 2279 0678 DC030000 		.4byte	0x3dc
 2280 067c 01       		.byte	0x1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 72


 2281 067d 50       		.byte	0x50
 2282 067e 00       		.byte	0
 2283 067f 1B       		.uleb128 0x1b
 2284 0680 01       		.byte	0x1
 2285 0681 5A060000 		.4byte	.LASF81
 2286 0685 01       		.byte	0x1
 2287 0686 5203     		.2byte	0x352
 2288 0688 01       		.byte	0x1
 2289 0689 BE000000 		.4byte	0xbe
 2290 068d BC010000 		.4byte	.LFB123
 2291 0691 C4010000 		.4byte	.LFE123
 2292 0695 02       		.byte	0x2
 2293 0696 7D       		.byte	0x7d
 2294 0697 00       		.sleb128 0
 2295 0698 01       		.byte	0x1
 2296 0699 BE060000 		.4byte	0x6be
 2297 069d 19       		.uleb128 0x19
 2298 069e 4C000000 		.4byte	.LASF51
 2299 06a2 01       		.byte	0x1
 2300 06a3 5203     		.2byte	0x352
 2301 06a5 DC030000 		.4byte	0x3dc
 2302 06a9 CA040000 		.4byte	.LLST17
 2303 06ad 1A       		.uleb128 0x1a
 2304 06ae 07070000 		.4byte	.LASF75
 2305 06b2 01       		.byte	0x1
 2306 06b3 5403     		.2byte	0x354
 2307 06b5 BE000000 		.4byte	0xbe
 2308 06b9 EB040000 		.4byte	.LLST18
 2309 06bd 00       		.byte	0
 2310 06be 16       		.uleb128 0x16
 2311 06bf 01       		.byte	0x1
 2312 06c0 11060000 		.4byte	.LASF76
 2313 06c4 01       		.byte	0x1
 2314 06c5 7003     		.2byte	0x370
 2315 06c7 01       		.byte	0x1
 2316 06c8 C4010000 		.4byte	.LFB124
 2317 06cc D6010000 		.4byte	.LFE124
 2318 06d0 02       		.byte	0x2
 2319 06d1 7D       		.byte	0x7d
 2320 06d2 00       		.sleb128 0
 2321 06d3 01       		.byte	0x1
 2322 06d4 F5060000 		.4byte	0x6f5
 2323 06d8 17       		.uleb128 0x17
 2324 06d9 4C000000 		.4byte	.LASF51
 2325 06dd 01       		.byte	0x1
 2326 06de 7003     		.2byte	0x370
 2327 06e0 DC030000 		.4byte	0x3dc
 2328 06e4 01       		.byte	0x1
 2329 06e5 50       		.byte	0x50
 2330 06e6 17       		.uleb128 0x17
 2331 06e7 00000000 		.4byte	.LASF60
 2332 06eb 01       		.byte	0x1
 2333 06ec 7003     		.2byte	0x370
 2334 06ee EC000000 		.4byte	0xec
 2335 06f2 01       		.byte	0x1
 2336 06f3 51       		.byte	0x51
 2337 06f4 00       		.byte	0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 73


 2338 06f5 16       		.uleb128 0x16
 2339 06f6 01       		.byte	0x1
 2340 06f7 4A030000 		.4byte	.LASF77
 2341 06fb 01       		.byte	0x1
 2342 06fc 8903     		.2byte	0x389
 2343 06fe 01       		.byte	0x1
 2344 06ff D6010000 		.4byte	.LFB125
 2345 0703 E8010000 		.4byte	.LFE125
 2346 0707 02       		.byte	0x2
 2347 0708 7D       		.byte	0x7d
 2348 0709 00       		.sleb128 0
 2349 070a 01       		.byte	0x1
 2350 070b 2C070000 		.4byte	0x72c
 2351 070f 17       		.uleb128 0x17
 2352 0710 4C000000 		.4byte	.LASF51
 2353 0714 01       		.byte	0x1
 2354 0715 8903     		.2byte	0x389
 2355 0717 DC030000 		.4byte	0x3dc
 2356 071b 01       		.byte	0x1
 2357 071c 50       		.byte	0x50
 2358 071d 17       		.uleb128 0x17
 2359 071e 00000000 		.4byte	.LASF60
 2360 0722 01       		.byte	0x1
 2361 0723 8903     		.2byte	0x389
 2362 0725 EC000000 		.4byte	0xec
 2363 0729 01       		.byte	0x1
 2364 072a 51       		.byte	0x51
 2365 072b 00       		.byte	0
 2366 072c 16       		.uleb128 0x16
 2367 072d 01       		.byte	0x1
 2368 072e D1010000 		.4byte	.LASF78
 2369 0732 01       		.byte	0x1
 2370 0733 A303     		.2byte	0x3a3
 2371 0735 01       		.byte	0x1
 2372 0736 E8010000 		.4byte	.LFB126
 2373 073a F8010000 		.4byte	.LFE126
 2374 073e 02       		.byte	0x2
 2375 073f 7D       		.byte	0x7d
 2376 0740 00       		.sleb128 0
 2377 0741 01       		.byte	0x1
 2378 0742 85070000 		.4byte	0x785
 2379 0746 17       		.uleb128 0x17
 2380 0747 4C000000 		.4byte	.LASF51
 2381 074b 01       		.byte	0x1
 2382 074c A303     		.2byte	0x3a3
 2383 074e DC030000 		.4byte	0x3dc
 2384 0752 01       		.byte	0x1
 2385 0753 50       		.byte	0x50
 2386 0754 19       		.uleb128 0x19
 2387 0755 A1030000 		.4byte	.LASF79
 2388 0759 01       		.byte	0x1
 2389 075a A303     		.2byte	0x3a3
 2390 075c 2C000000 		.4byte	0x2c
 2391 0760 12050000 		.4byte	.LLST19
 2392 0764 1A       		.uleb128 0x1a
 2393 0765 27030000 		.4byte	.LASF53
 2394 0769 01       		.byte	0x1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 74


 2395 076a A503     		.2byte	0x3a5
 2396 076c 69000000 		.4byte	0x69
 2397 0770 33050000 		.4byte	.LLST20
 2398 0774 1A       		.uleb128 0x1a
 2399 0775 2F030000 		.4byte	.LASF54
 2400 0779 01       		.byte	0x1
 2401 077a A603     		.2byte	0x3a6
 2402 077c 69000000 		.4byte	0x69
 2403 0780 52050000 		.4byte	.LLST21
 2404 0784 00       		.byte	0
 2405 0785 16       		.uleb128 0x16
 2406 0786 01       		.byte	0x1
 2407 0787 AC060000 		.4byte	.LASF80
 2408 078b 01       		.byte	0x1
 2409 078c C303     		.2byte	0x3c3
 2410 078e 01       		.byte	0x1
 2411 078f F8010000 		.4byte	.LFB127
 2412 0793 0A020000 		.4byte	.LFE127
 2413 0797 02       		.byte	0x2
 2414 0798 7D       		.byte	0x7d
 2415 0799 00       		.sleb128 0
 2416 079a 01       		.byte	0x1
 2417 079b BC070000 		.4byte	0x7bc
 2418 079f 17       		.uleb128 0x17
 2419 07a0 4C000000 		.4byte	.LASF51
 2420 07a4 01       		.byte	0x1
 2421 07a5 C303     		.2byte	0x3c3
 2422 07a7 DC030000 		.4byte	0x3dc
 2423 07ab 01       		.byte	0x1
 2424 07ac 50       		.byte	0x50
 2425 07ad 17       		.uleb128 0x17
 2426 07ae 00000000 		.4byte	.LASF60
 2427 07b2 01       		.byte	0x1
 2428 07b3 C303     		.2byte	0x3c3
 2429 07b5 EC000000 		.4byte	0xec
 2430 07b9 01       		.byte	0x1
 2431 07ba 51       		.byte	0x51
 2432 07bb 00       		.byte	0
 2433 07bc 1B       		.uleb128 0x1b
 2434 07bd 01       		.byte	0x1
 2435 07be 3B010000 		.4byte	.LASF82
 2436 07c2 01       		.byte	0x1
 2437 07c3 DA03     		.2byte	0x3da
 2438 07c5 01       		.byte	0x1
 2439 07c6 45000000 		.4byte	0x45
 2440 07ca 0A020000 		.4byte	.LFB128
 2441 07ce 10020000 		.4byte	.LFE128
 2442 07d2 02       		.byte	0x2
 2443 07d3 7D       		.byte	0x7d
 2444 07d4 00       		.sleb128 0
 2445 07d5 01       		.byte	0x1
 2446 07d6 EB070000 		.4byte	0x7eb
 2447 07da 19       		.uleb128 0x19
 2448 07db 4C000000 		.4byte	.LASF51
 2449 07df 01       		.byte	0x1
 2450 07e0 DA03     		.2byte	0x3da
 2451 07e2 DC030000 		.4byte	0x3dc
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 75


 2452 07e6 66050000 		.4byte	.LLST22
 2453 07ea 00       		.byte	0
 2454 07eb 1C       		.uleb128 0x1c
 2455 07ec 01       		.byte	0x1
 2456 07ed A8030000 		.4byte	.LASF114
 2457 07f1 01       		.byte	0x1
 2458 07f2 EF03     		.2byte	0x3ef
 2459 07f4 01       		.byte	0x1
 2460 07f5 69000000 		.4byte	0x69
 2461 07f9 10020000 		.4byte	.LFB129
 2462 07fd 1C020000 		.4byte	.LFE129
 2463 0801 02       		.byte	0x2
 2464 0802 7D       		.byte	0x7d
 2465 0803 00       		.sleb128 0
 2466 0804 01       		.byte	0x1
 2467 0805 16       		.uleb128 0x16
 2468 0806 01       		.byte	0x1
 2469 0807 D1030000 		.4byte	.LASF83
 2470 080b 01       		.byte	0x1
 2471 080c 2004     		.2byte	0x420
 2472 080e 01       		.byte	0x1
 2473 080f 1C020000 		.4byte	.LFB130
 2474 0813 2E020000 		.4byte	.LFE130
 2475 0817 02       		.byte	0x2
 2476 0818 7D       		.byte	0x7d
 2477 0819 00       		.sleb128 0
 2478 081a 01       		.byte	0x1
 2479 081b 3C080000 		.4byte	0x83c
 2480 081f 17       		.uleb128 0x17
 2481 0820 4C000000 		.4byte	.LASF51
 2482 0824 01       		.byte	0x1
 2483 0825 2004     		.2byte	0x420
 2484 0827 DC030000 		.4byte	0x3dc
 2485 082b 01       		.byte	0x1
 2486 082c 50       		.byte	0x50
 2487 082d 17       		.uleb128 0x17
 2488 082e 00000000 		.4byte	.LASF60
 2489 0832 01       		.byte	0x1
 2490 0833 2004     		.2byte	0x420
 2491 0835 EC000000 		.4byte	0xec
 2492 0839 01       		.byte	0x1
 2493 083a 51       		.byte	0x51
 2494 083b 00       		.byte	0
 2495 083c 16       		.uleb128 0x16
 2496 083d 01       		.byte	0x1
 2497 083e 83010000 		.4byte	.LASF84
 2498 0842 01       		.byte	0x1
 2499 0843 3804     		.2byte	0x438
 2500 0845 01       		.byte	0x1
 2501 0846 2E020000 		.4byte	.LFB131
 2502 084a 40020000 		.4byte	.LFE131
 2503 084e 02       		.byte	0x2
 2504 084f 7D       		.byte	0x7d
 2505 0850 00       		.sleb128 0
 2506 0851 01       		.byte	0x1
 2507 0852 73080000 		.4byte	0x873
 2508 0856 17       		.uleb128 0x17
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 76


 2509 0857 4C000000 		.4byte	.LASF51
 2510 085b 01       		.byte	0x1
 2511 085c 3804     		.2byte	0x438
 2512 085e DC030000 		.4byte	0x3dc
 2513 0862 01       		.byte	0x1
 2514 0863 50       		.byte	0x50
 2515 0864 17       		.uleb128 0x17
 2516 0865 00000000 		.4byte	.LASF60
 2517 0869 01       		.byte	0x1
 2518 086a 3804     		.2byte	0x438
 2519 086c EC000000 		.4byte	0xec
 2520 0870 01       		.byte	0x1
 2521 0871 51       		.byte	0x51
 2522 0872 00       		.byte	0
 2523 0873 16       		.uleb128 0x16
 2524 0874 01       		.byte	0x1
 2525 0875 79060000 		.4byte	.LASF85
 2526 0879 01       		.byte	0x1
 2527 087a 5304     		.2byte	0x453
 2528 087c 01       		.byte	0x1
 2529 087d 40020000 		.4byte	.LFB132
 2530 0881 58020000 		.4byte	.LFE132
 2531 0885 02       		.byte	0x2
 2532 0886 7D       		.byte	0x7d
 2533 0887 00       		.sleb128 0
 2534 0888 01       		.byte	0x1
 2535 0889 9C080000 		.4byte	0x89c
 2536 088d 17       		.uleb128 0x17
 2537 088e 00000000 		.4byte	.LASF60
 2538 0892 01       		.byte	0x1
 2539 0893 5304     		.2byte	0x453
 2540 0895 EC000000 		.4byte	0xec
 2541 0899 01       		.byte	0x1
 2542 089a 50       		.byte	0x50
 2543 089b 00       		.byte	0
 2544 089c 18       		.uleb128 0x18
 2545 089d 01       		.byte	0x1
 2546 089e 1A010000 		.4byte	.LASF86
 2547 08a2 01       		.byte	0x1
 2548 08a3 AA04     		.2byte	0x4aa
 2549 08a5 01       		.byte	0x1
 2550 08a6 58020000 		.4byte	.LFB133
 2551 08aa BC020000 		.4byte	.LFE133
 2552 08ae 87050000 		.4byte	.LLST23
 2553 08b2 01       		.byte	0x1
 2554 08b3 26090000 		.4byte	0x926
 2555 08b7 17       		.uleb128 0x17
 2556 08b8 4C000000 		.4byte	.LASF51
 2557 08bc 01       		.byte	0x1
 2558 08bd AA04     		.2byte	0x4aa
 2559 08bf DC030000 		.4byte	0x3dc
 2560 08c3 01       		.byte	0x1
 2561 08c4 50       		.byte	0x50
 2562 08c5 19       		.uleb128 0x19
 2563 08c6 BF040000 		.4byte	.LASF68
 2564 08ca 01       		.byte	0x1
 2565 08cb AA04     		.2byte	0x4aa
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 77


 2566 08cd 2C000000 		.4byte	0x2c
 2567 08d1 A7050000 		.4byte	.LLST24
 2568 08d5 19       		.uleb128 0x19
 2569 08d6 BA040000 		.4byte	.LASF72
 2570 08da 01       		.byte	0x1
 2571 08db AA04     		.2byte	0x4aa
 2572 08dd 2C000000 		.4byte	0x2c
 2573 08e1 C8050000 		.4byte	.LLST25
 2574 08e5 19       		.uleb128 0x19
 2575 08e6 46040000 		.4byte	.LASF73
 2576 08ea 01       		.byte	0x1
 2577 08eb AA04     		.2byte	0x4aa
 2578 08ed 2C000000 		.4byte	0x2c
 2579 08f1 E9050000 		.4byte	.LLST26
 2580 08f5 1A       		.uleb128 0x1a
 2581 08f6 27030000 		.4byte	.LASF53
 2582 08fa 01       		.byte	0x1
 2583 08fb AC04     		.2byte	0x4ac
 2584 08fd 69000000 		.4byte	0x69
 2585 0901 23060000 		.4byte	.LLST27
 2586 0905 1A       		.uleb128 0x1a
 2587 0906 2F030000 		.4byte	.LASF54
 2588 090a 01       		.byte	0x1
 2589 090b AC04     		.2byte	0x4ac
 2590 090d 69000000 		.4byte	0x69
 2591 0911 90060000 		.4byte	.LLST28
 2592 0915 1A       		.uleb128 0x1a
 2593 0916 37030000 		.4byte	.LASF87
 2594 091a 01       		.byte	0x1
 2595 091b AC04     		.2byte	0x4ac
 2596 091d 69000000 		.4byte	0x69
 2597 0921 50070000 		.4byte	.LLST29
 2598 0925 00       		.byte	0
 2599 0926 16       		.uleb128 0x16
 2600 0927 01       		.byte	0x1
 2601 0928 70050000 		.4byte	.LASF88
 2602 092c 01       		.byte	0x1
 2603 092d E904     		.2byte	0x4e9
 2604 092f 01       		.byte	0x1
 2605 0930 BC020000 		.4byte	.LFB134
 2606 0934 CC020000 		.4byte	.LFE134
 2607 0938 02       		.byte	0x2
 2608 0939 7D       		.byte	0x7d
 2609 093a 00       		.sleb128 0
 2610 093b 01       		.byte	0x1
 2611 093c 7F090000 		.4byte	0x97f
 2612 0940 17       		.uleb128 0x17
 2613 0941 4C000000 		.4byte	.LASF51
 2614 0945 01       		.byte	0x1
 2615 0946 E904     		.2byte	0x4e9
 2616 0948 DC030000 		.4byte	0x3dc
 2617 094c 01       		.byte	0x1
 2618 094d 50       		.byte	0x50
 2619 094e 19       		.uleb128 0x19
 2620 094f A5060000 		.4byte	.LASF89
 2621 0953 01       		.byte	0x1
 2622 0954 E904     		.2byte	0x4e9
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 78


 2623 0956 2C000000 		.4byte	0x2c
 2624 095a 77070000 		.4byte	.LLST30
 2625 095e 1A       		.uleb128 0x1a
 2626 095f 27030000 		.4byte	.LASF53
 2627 0963 01       		.byte	0x1
 2628 0964 EB04     		.2byte	0x4eb
 2629 0966 69000000 		.4byte	0x69
 2630 096a 98070000 		.4byte	.LLST31
 2631 096e 1A       		.uleb128 0x1a
 2632 096f 2F030000 		.4byte	.LASF54
 2633 0973 01       		.byte	0x1
 2634 0974 EC04     		.2byte	0x4ec
 2635 0976 69000000 		.4byte	0x69
 2636 097a B7070000 		.4byte	.LLST32
 2637 097e 00       		.byte	0
 2638 097f 18       		.uleb128 0x18
 2639 0980 01       		.byte	0x1
 2640 0981 78040000 		.4byte	.LASF90
 2641 0985 01       		.byte	0x1
 2642 0986 0C05     		.2byte	0x50c
 2643 0988 01       		.byte	0x1
 2644 0989 CC020000 		.4byte	.LFB135
 2645 098d E2020000 		.4byte	.LFE135
 2646 0991 CB070000 		.4byte	.LLST33
 2647 0995 01       		.byte	0x1
 2648 0996 D7090000 		.4byte	0x9d7
 2649 099a 17       		.uleb128 0x17
 2650 099b 4C000000 		.4byte	.LASF51
 2651 099f 01       		.byte	0x1
 2652 09a0 0C05     		.2byte	0x50c
 2653 09a2 DC030000 		.4byte	0x3dc
 2654 09a6 01       		.byte	0x1
 2655 09a7 50       		.byte	0x50
 2656 09a8 19       		.uleb128 0x19
 2657 09a9 D1040000 		.4byte	.LASF91
 2658 09ad 01       		.byte	0x1
 2659 09ae 0C05     		.2byte	0x50c
 2660 09b0 2C000000 		.4byte	0x2c
 2661 09b4 EB070000 		.4byte	.LLST34
 2662 09b8 17       		.uleb128 0x17
 2663 09b9 D2060000 		.4byte	.LASF92
 2664 09bd 01       		.byte	0x1
 2665 09be 0C05     		.2byte	0x50c
 2666 09c0 45000000 		.4byte	0x45
 2667 09c4 01       		.byte	0x1
 2668 09c5 52       		.byte	0x52
 2669 09c6 1D       		.uleb128 0x1d
 2670 09c7 746D7000 		.ascii	"tmp\000"
 2671 09cb 01       		.byte	0x1
 2672 09cc 0E05     		.2byte	0x50e
 2673 09ce 9E000000 		.4byte	0x9e
 2674 09d2 0C080000 		.4byte	.LLST35
 2675 09d6 00       		.byte	0
 2676 09d7 16       		.uleb128 0x16
 2677 09d8 01       		.byte	0x1
 2678 09d9 0F050000 		.4byte	.LASF93
 2679 09dd 01       		.byte	0x1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 79


 2680 09de 3205     		.2byte	0x532
 2681 09e0 01       		.byte	0x1
 2682 09e1 E2020000 		.4byte	.LFB136
 2683 09e5 EE020000 		.4byte	.LFE136
 2684 09e9 02       		.byte	0x2
 2685 09ea 7D       		.byte	0x7d
 2686 09eb 00       		.sleb128 0
 2687 09ec 01       		.byte	0x1
 2688 09ed 200A0000 		.4byte	0xa20
 2689 09f1 17       		.uleb128 0x17
 2690 09f2 4C000000 		.4byte	.LASF51
 2691 09f6 01       		.byte	0x1
 2692 09f7 3205     		.2byte	0x532
 2693 09f9 DC030000 		.4byte	0x3dc
 2694 09fd 01       		.byte	0x1
 2695 09fe 50       		.byte	0x50
 2696 09ff 19       		.uleb128 0x19
 2697 0a00 EF030000 		.4byte	.LASF94
 2698 0a04 01       		.byte	0x1
 2699 0a05 3205     		.2byte	0x532
 2700 0a07 69000000 		.4byte	0x69
 2701 0a0b 2B080000 		.4byte	.LLST36
 2702 0a0f 1A       		.uleb128 0x1a
 2703 0a10 34010000 		.4byte	.LASF63
 2704 0a14 01       		.byte	0x1
 2705 0a15 3405     		.2byte	0x534
 2706 0a17 69000000 		.4byte	0x69
 2707 0a1b 4C080000 		.4byte	.LLST37
 2708 0a1f 00       		.byte	0
 2709 0a20 16       		.uleb128 0x16
 2710 0a21 01       		.byte	0x1
 2711 0a22 7A030000 		.4byte	.LASF95
 2712 0a26 01       		.byte	0x1
 2713 0a27 5405     		.2byte	0x554
 2714 0a29 01       		.byte	0x1
 2715 0a2a EE020000 		.4byte	.LFB137
 2716 0a2e FA020000 		.4byte	.LFE137
 2717 0a32 02       		.byte	0x2
 2718 0a33 7D       		.byte	0x7d
 2719 0a34 00       		.sleb128 0
 2720 0a35 01       		.byte	0x1
 2721 0a36 690A0000 		.4byte	0xa69
 2722 0a3a 17       		.uleb128 0x17
 2723 0a3b 4C000000 		.4byte	.LASF51
 2724 0a3f 01       		.byte	0x1
 2725 0a40 5405     		.2byte	0x554
 2726 0a42 DC030000 		.4byte	0x3dc
 2727 0a46 01       		.byte	0x1
 2728 0a47 50       		.byte	0x50
 2729 0a48 19       		.uleb128 0x19
 2730 0a49 FC000000 		.4byte	.LASF96
 2731 0a4d 01       		.byte	0x1
 2732 0a4e 5405     		.2byte	0x554
 2733 0a50 69000000 		.4byte	0x69
 2734 0a54 76080000 		.4byte	.LLST38
 2735 0a58 1A       		.uleb128 0x1a
 2736 0a59 34010000 		.4byte	.LASF63
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 80


 2737 0a5d 01       		.byte	0x1
 2738 0a5e 5605     		.2byte	0x556
 2739 0a60 69000000 		.4byte	0x69
 2740 0a64 97080000 		.4byte	.LLST39
 2741 0a68 00       		.byte	0
 2742 0a69 16       		.uleb128 0x16
 2743 0a6a 01       		.byte	0x1
 2744 0a6b BA020000 		.4byte	.LASF97
 2745 0a6f 01       		.byte	0x1
 2746 0a70 6905     		.2byte	0x569
 2747 0a72 01       		.byte	0x1
 2748 0a73 FA020000 		.4byte	.LFB138
 2749 0a77 04030000 		.4byte	.LFE138
 2750 0a7b 02       		.byte	0x2
 2751 0a7c 7D       		.byte	0x7d
 2752 0a7d 00       		.sleb128 0
 2753 0a7e 01       		.byte	0x1
 2754 0a7f 920A0000 		.4byte	0xa92
 2755 0a83 17       		.uleb128 0x17
 2756 0a84 4C000000 		.4byte	.LASF51
 2757 0a88 01       		.byte	0x1
 2758 0a89 6905     		.2byte	0x569
 2759 0a8b DC030000 		.4byte	0x3dc
 2760 0a8f 01       		.byte	0x1
 2761 0a90 50       		.byte	0x50
 2762 0a91 00       		.byte	0
 2763 0a92 1B       		.uleb128 0x1b
 2764 0a93 01       		.byte	0x1
 2765 0a94 E5040000 		.4byte	.LASF98
 2766 0a98 01       		.byte	0x1
 2767 0a99 7605     		.2byte	0x576
 2768 0a9b 01       		.byte	0x1
 2769 0a9c BE000000 		.4byte	0xbe
 2770 0aa0 04030000 		.4byte	.LFB139
 2771 0aa4 0C030000 		.4byte	.LFE139
 2772 0aa8 02       		.byte	0x2
 2773 0aa9 7D       		.byte	0x7d
 2774 0aaa 00       		.sleb128 0
 2775 0aab 01       		.byte	0x1
 2776 0aac D10A0000 		.4byte	0xad1
 2777 0ab0 19       		.uleb128 0x19
 2778 0ab1 4C000000 		.4byte	.LASF51
 2779 0ab5 01       		.byte	0x1
 2780 0ab6 7605     		.2byte	0x576
 2781 0ab8 DC030000 		.4byte	0x3dc
 2782 0abc C1080000 		.4byte	.LLST40
 2783 0ac0 1A       		.uleb128 0x1a
 2784 0ac1 07070000 		.4byte	.LASF75
 2785 0ac5 01       		.byte	0x1
 2786 0ac6 7805     		.2byte	0x578
 2787 0ac8 BE000000 		.4byte	0xbe
 2788 0acc E2080000 		.4byte	.LLST41
 2789 0ad0 00       		.byte	0
 2790 0ad1 16       		.uleb128 0x16
 2791 0ad2 01       		.byte	0x1
 2792 0ad3 F9050000 		.4byte	.LASF99
 2793 0ad7 01       		.byte	0x1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 81


 2794 0ad8 9305     		.2byte	0x593
 2795 0ada 01       		.byte	0x1
 2796 0adb 0C030000 		.4byte	.LFB140
 2797 0adf 1E030000 		.4byte	.LFE140
 2798 0ae3 02       		.byte	0x2
 2799 0ae4 7D       		.byte	0x7d
 2800 0ae5 00       		.sleb128 0
 2801 0ae6 01       		.byte	0x1
 2802 0ae7 080B0000 		.4byte	0xb08
 2803 0aeb 17       		.uleb128 0x17
 2804 0aec 4C000000 		.4byte	.LASF51
 2805 0af0 01       		.byte	0x1
 2806 0af1 9305     		.2byte	0x593
 2807 0af3 DC030000 		.4byte	0x3dc
 2808 0af7 01       		.byte	0x1
 2809 0af8 50       		.byte	0x50
 2810 0af9 17       		.uleb128 0x17
 2811 0afa 00000000 		.4byte	.LASF60
 2812 0afe 01       		.byte	0x1
 2813 0aff 9305     		.2byte	0x593
 2814 0b01 EC000000 		.4byte	0xec
 2815 0b05 01       		.byte	0x1
 2816 0b06 51       		.byte	0x51
 2817 0b07 00       		.byte	0
 2818 0b08 16       		.uleb128 0x16
 2819 0b09 01       		.byte	0x1
 2820 0b0a 4B020000 		.4byte	.LASF100
 2821 0b0e 01       		.byte	0x1
 2822 0b0f AD05     		.2byte	0x5ad
 2823 0b11 01       		.byte	0x1
 2824 0b12 1E030000 		.4byte	.LFB141
 2825 0b16 30030000 		.4byte	.LFE141
 2826 0b1a 02       		.byte	0x2
 2827 0b1b 7D       		.byte	0x7d
 2828 0b1c 00       		.sleb128 0
 2829 0b1d 01       		.byte	0x1
 2830 0b1e 3F0B0000 		.4byte	0xb3f
 2831 0b22 17       		.uleb128 0x17
 2832 0b23 4C000000 		.4byte	.LASF51
 2833 0b27 01       		.byte	0x1
 2834 0b28 AD05     		.2byte	0x5ad
 2835 0b2a DC030000 		.4byte	0x3dc
 2836 0b2e 01       		.byte	0x1
 2837 0b2f 50       		.byte	0x50
 2838 0b30 17       		.uleb128 0x17
 2839 0b31 00000000 		.4byte	.LASF60
 2840 0b35 01       		.byte	0x1
 2841 0b36 AD05     		.2byte	0x5ad
 2842 0b38 EC000000 		.4byte	0xec
 2843 0b3c 01       		.byte	0x1
 2844 0b3d 51       		.byte	0x51
 2845 0b3e 00       		.byte	0
 2846 0b3f 1E       		.uleb128 0x1e
 2847 0b40 01       		.byte	0x1
 2848 0b41 20070000 		.4byte	.LASF101
 2849 0b45 01       		.byte	0x1
 2850 0b46 C905     		.2byte	0x5c9
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 82


 2851 0b48 01       		.byte	0x1
 2852 0b49 45000000 		.4byte	0x45
 2853 0b4d 30030000 		.4byte	.LFB142
 2854 0b51 4A030000 		.4byte	.LFE142
 2855 0b55 09090000 		.4byte	.LLST42
 2856 0b59 01       		.byte	0x1
 2857 0b5a 8F0B0000 		.4byte	0xb8f
 2858 0b5e 19       		.uleb128 0x19
 2859 0b5f 4C000000 		.4byte	.LASF51
 2860 0b63 01       		.byte	0x1
 2861 0b64 C905     		.2byte	0x5c9
 2862 0b66 DC030000 		.4byte	0x3dc
 2863 0b6a 29090000 		.4byte	.LLST43
 2864 0b6e 19       		.uleb128 0x19
 2865 0b6f D1040000 		.4byte	.LASF91
 2866 0b73 01       		.byte	0x1
 2867 0b74 C905     		.2byte	0x5c9
 2868 0b76 2C000000 		.4byte	0x2c
 2869 0b7a 48090000 		.4byte	.LLST44
 2870 0b7e 1D       		.uleb128 0x1d
 2871 0b7f 746D7000 		.ascii	"tmp\000"
 2872 0b83 01       		.byte	0x1
 2873 0b84 CB05     		.2byte	0x5cb
 2874 0b86 9E000000 		.4byte	0x9e
 2875 0b8a 69090000 		.4byte	.LLST45
 2876 0b8e 00       		.byte	0
 2877 0b8f 16       		.uleb128 0x16
 2878 0b90 01       		.byte	0x1
 2879 0b91 70020000 		.4byte	.LASF102
 2880 0b95 01       		.byte	0x1
 2881 0b96 3506     		.2byte	0x635
 2882 0b98 01       		.byte	0x1
 2883 0b99 4A030000 		.4byte	.LFB143
 2884 0b9d 62030000 		.4byte	.LFE143
 2885 0ba1 02       		.byte	0x2
 2886 0ba2 7D       		.byte	0x7d
 2887 0ba3 00       		.sleb128 0
 2888 0ba4 01       		.byte	0x1
 2889 0ba5 E60B0000 		.4byte	0xbe6
 2890 0ba9 17       		.uleb128 0x17
 2891 0baa 4C000000 		.4byte	.LASF51
 2892 0bae 01       		.byte	0x1
 2893 0baf 3506     		.2byte	0x635
 2894 0bb1 DC030000 		.4byte	0x3dc
 2895 0bb5 01       		.byte	0x1
 2896 0bb6 50       		.byte	0x50
 2897 0bb7 19       		.uleb128 0x19
 2898 0bb8 09000000 		.4byte	.LASF103
 2899 0bbc 01       		.byte	0x1
 2900 0bbd 3506     		.2byte	0x635
 2901 0bbf 45000000 		.4byte	0x45
 2902 0bc3 88090000 		.4byte	.LLST46
 2903 0bc7 17       		.uleb128 0x17
 2904 0bc8 00000000 		.4byte	.LASF60
 2905 0bcc 01       		.byte	0x1
 2906 0bcd 3506     		.2byte	0x635
 2907 0bcf EC000000 		.4byte	0xec
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 83


 2908 0bd3 01       		.byte	0x1
 2909 0bd4 52       		.byte	0x52
 2910 0bd5 1A       		.uleb128 0x1a
 2911 0bd6 9D040000 		.4byte	.LASF104
 2912 0bda 01       		.byte	0x1
 2913 0bdb 3706     		.2byte	0x637
 2914 0bdd 69000000 		.4byte	0x69
 2915 0be1 A9090000 		.4byte	.LLST47
 2916 0be5 00       		.byte	0
 2917 0be6 1B       		.uleb128 0x1b
 2918 0be7 01       		.byte	0x1
 2919 0be8 E1060000 		.4byte	.LASF105
 2920 0bec 01       		.byte	0x1
 2921 0bed 5A06     		.2byte	0x65a
 2922 0bef 01       		.byte	0x1
 2923 0bf0 BE000000 		.4byte	0xbe
 2924 0bf4 62030000 		.4byte	.LFB144
 2925 0bf8 6E030000 		.4byte	.LFE144
 2926 0bfc 02       		.byte	0x2
 2927 0bfd 7D       		.byte	0x7d
 2928 0bfe 00       		.sleb128 0
 2929 0bff 01       		.byte	0x1
 2930 0c00 330C0000 		.4byte	0xc33
 2931 0c04 19       		.uleb128 0x19
 2932 0c05 4C000000 		.4byte	.LASF51
 2933 0c09 01       		.byte	0x1
 2934 0c0a 5A06     		.2byte	0x65a
 2935 0c0c DC030000 		.4byte	0x3dc
 2936 0c10 FD090000 		.4byte	.LLST48
 2937 0c14 17       		.uleb128 0x17
 2938 0c15 7A010000 		.4byte	.LASF106
 2939 0c19 01       		.byte	0x1
 2940 0c1a 5A06     		.2byte	0x65a
 2941 0c1c 2C000000 		.4byte	0x2c
 2942 0c20 01       		.byte	0x1
 2943 0c21 51       		.byte	0x51
 2944 0c22 1A       		.uleb128 0x1a
 2945 0c23 07070000 		.4byte	.LASF75
 2946 0c27 01       		.byte	0x1
 2947 0c28 5C06     		.2byte	0x65c
 2948 0c2a BE000000 		.4byte	0xbe
 2949 0c2e 1E0A0000 		.4byte	.LLST49
 2950 0c32 00       		.byte	0
 2951 0c33 16       		.uleb128 0x16
 2952 0c34 01       		.byte	0x1
 2953 0c35 60030000 		.4byte	.LASF107
 2954 0c39 01       		.byte	0x1
 2955 0c3a 7D06     		.2byte	0x67d
 2956 0c3c 01       		.byte	0x1
 2957 0c3d 6E030000 		.4byte	.LFB145
 2958 0c41 74030000 		.4byte	.LFE145
 2959 0c45 02       		.byte	0x2
 2960 0c46 7D       		.byte	0x7d
 2961 0c47 00       		.sleb128 0
 2962 0c48 01       		.byte	0x1
 2963 0c49 6C0C0000 		.4byte	0xc6c
 2964 0c4d 17       		.uleb128 0x17
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 84


 2965 0c4e 4C000000 		.4byte	.LASF51
 2966 0c52 01       		.byte	0x1
 2967 0c53 7D06     		.2byte	0x67d
 2968 0c55 DC030000 		.4byte	0x3dc
 2969 0c59 01       		.byte	0x1
 2970 0c5a 50       		.byte	0x50
 2971 0c5b 19       		.uleb128 0x19
 2972 0c5c 7A010000 		.4byte	.LASF106
 2973 0c60 01       		.byte	0x1
 2974 0c61 7D06     		.2byte	0x67d
 2975 0c63 2C000000 		.4byte	0x2c
 2976 0c67 470A0000 		.4byte	.LLST50
 2977 0c6b 00       		.byte	0
 2978 0c6c 1B       		.uleb128 0x1b
 2979 0c6d 01       		.byte	0x1
 2980 0c6e D2050000 		.4byte	.LASF108
 2981 0c72 01       		.byte	0x1
 2982 0c73 9206     		.2byte	0x692
 2983 0c75 01       		.byte	0x1
 2984 0c76 CA000000 		.4byte	0xca
 2985 0c7a 74030000 		.4byte	.LFB146
 2986 0c7e 90030000 		.4byte	.LFE146
 2987 0c82 02       		.byte	0x2
 2988 0c83 7D       		.byte	0x7d
 2989 0c84 00       		.sleb128 0
 2990 0c85 01       		.byte	0x1
 2991 0c86 DB0C0000 		.4byte	0xcdb
 2992 0c8a 19       		.uleb128 0x19
 2993 0c8b 4C000000 		.4byte	.LASF51
 2994 0c8f 01       		.byte	0x1
 2995 0c90 9206     		.2byte	0x692
 2996 0c92 DC030000 		.4byte	0x3dc
 2997 0c96 680A0000 		.4byte	.LLST51
 2998 0c9a 19       		.uleb128 0x19
 2999 0c9b 09000000 		.4byte	.LASF103
 3000 0c9f 01       		.byte	0x1
 3001 0ca0 9206     		.2byte	0x692
 3002 0ca2 45000000 		.4byte	0x45
 3003 0ca6 890A0000 		.4byte	.LLST52
 3004 0caa 1A       		.uleb128 0x1a
 3005 0cab 07070000 		.4byte	.LASF75
 3006 0caf 01       		.byte	0x1
 3007 0cb0 9406     		.2byte	0x694
 3008 0cb2 CA000000 		.4byte	0xca
 3009 0cb6 AA0A0000 		.4byte	.LLST53
 3010 0cba 1A       		.uleb128 0x1a
 3011 0cbb 9D040000 		.4byte	.LASF104
 3012 0cbf 01       		.byte	0x1
 3013 0cc0 9506     		.2byte	0x695
 3014 0cc2 69000000 		.4byte	0x69
 3015 0cc6 C90A0000 		.4byte	.LLST54
 3016 0cca 1A       		.uleb128 0x1a
 3017 0ccb 4D060000 		.4byte	.LASF109
 3018 0ccf 01       		.byte	0x1
 3019 0cd0 9506     		.2byte	0x695
 3020 0cd2 69000000 		.4byte	0x69
 3021 0cd6 E40A0000 		.4byte	.LLST55
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 85


 3022 0cda 00       		.byte	0
 3023 0cdb 16       		.uleb128 0x16
 3024 0cdc 01       		.byte	0x1
 3025 0cdd A4040000 		.4byte	.LASF110
 3026 0ce1 01       		.byte	0x1
 3027 0ce2 BB06     		.2byte	0x6bb
 3028 0ce4 01       		.byte	0x1
 3029 0ce5 90030000 		.4byte	.LFB147
 3030 0ce9 98030000 		.4byte	.LFE147
 3031 0ced 02       		.byte	0x2
 3032 0cee 7D       		.byte	0x7d
 3033 0cef 00       		.sleb128 0
 3034 0cf0 01       		.byte	0x1
 3035 0cf1 240D0000 		.4byte	0xd24
 3036 0cf5 17       		.uleb128 0x17
 3037 0cf6 4C000000 		.4byte	.LASF51
 3038 0cfa 01       		.byte	0x1
 3039 0cfb BB06     		.2byte	0x6bb
 3040 0cfd DC030000 		.4byte	0x3dc
 3041 0d01 01       		.byte	0x1
 3042 0d02 50       		.byte	0x50
 3043 0d03 19       		.uleb128 0x19
 3044 0d04 09000000 		.4byte	.LASF103
 3045 0d08 01       		.byte	0x1
 3046 0d09 BB06     		.2byte	0x6bb
 3047 0d0b 45000000 		.4byte	0x45
 3048 0d0f 0D0B0000 		.4byte	.LLST56
 3049 0d13 1A       		.uleb128 0x1a
 3050 0d14 9D040000 		.4byte	.LASF104
 3051 0d18 01       		.byte	0x1
 3052 0d19 BD06     		.2byte	0x6bd
 3053 0d1b 2C000000 		.4byte	0x2c
 3054 0d1f 2E0B0000 		.4byte	.LLST57
 3055 0d23 00       		.byte	0
 3056 0d24 1F       		.uleb128 0x1f
 3057 0d25 93000000 		.4byte	.LASF115
 3058 0d29 05       		.byte	0x5
 3059 0d2a 1A05     		.2byte	0x51a
 3060 0d2c A3000000 		.4byte	0xa3
 3061 0d30 01       		.byte	0x1
 3062 0d31 01       		.byte	0x1
 3063 0d32 20       		.uleb128 0x20
 3064 0d33 01       		.byte	0x1
 3065 0d34 61040000 		.4byte	.LASF116
 3066 0d38 06       		.byte	0x6
 3067 0d39 E701     		.2byte	0x1e7
 3068 0d3b 01       		.byte	0x1
 3069 0d3c 01       		.byte	0x1
 3070 0d3d 21       		.uleb128 0x21
 3071 0d3e 69000000 		.4byte	0x69
 3072 0d42 21       		.uleb128 0x21
 3073 0d43 EC000000 		.4byte	0xec
 3074 0d47 00       		.byte	0
 3075 0d48 00       		.byte	0
 3076              		.section	.debug_abbrev,"",%progbits
 3077              	.Ldebug_abbrev0:
 3078 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 86


 3079 0001 11       		.uleb128 0x11
 3080 0002 01       		.byte	0x1
 3081 0003 25       		.uleb128 0x25
 3082 0004 0E       		.uleb128 0xe
 3083 0005 13       		.uleb128 0x13
 3084 0006 0B       		.uleb128 0xb
 3085 0007 03       		.uleb128 0x3
 3086 0008 0E       		.uleb128 0xe
 3087 0009 1B       		.uleb128 0x1b
 3088 000a 0E       		.uleb128 0xe
 3089 000b 11       		.uleb128 0x11
 3090 000c 01       		.uleb128 0x1
 3091 000d 12       		.uleb128 0x12
 3092 000e 01       		.uleb128 0x1
 3093 000f 10       		.uleb128 0x10
 3094 0010 06       		.uleb128 0x6
 3095 0011 00       		.byte	0
 3096 0012 00       		.byte	0
 3097 0013 02       		.uleb128 0x2
 3098 0014 24       		.uleb128 0x24
 3099 0015 00       		.byte	0
 3100 0016 0B       		.uleb128 0xb
 3101 0017 0B       		.uleb128 0xb
 3102 0018 3E       		.uleb128 0x3e
 3103 0019 0B       		.uleb128 0xb
 3104 001a 03       		.uleb128 0x3
 3105 001b 0E       		.uleb128 0xe
 3106 001c 00       		.byte	0
 3107 001d 00       		.byte	0
 3108 001e 03       		.uleb128 0x3
 3109 001f 16       		.uleb128 0x16
 3110 0020 00       		.byte	0
 3111 0021 03       		.uleb128 0x3
 3112 0022 0E       		.uleb128 0xe
 3113 0023 3A       		.uleb128 0x3a
 3114 0024 0B       		.uleb128 0xb
 3115 0025 3B       		.uleb128 0x3b
 3116 0026 0B       		.uleb128 0xb
 3117 0027 49       		.uleb128 0x49
 3118 0028 13       		.uleb128 0x13
 3119 0029 00       		.byte	0
 3120 002a 00       		.byte	0
 3121 002b 04       		.uleb128 0x4
 3122 002c 24       		.uleb128 0x24
 3123 002d 00       		.byte	0
 3124 002e 0B       		.uleb128 0xb
 3125 002f 0B       		.uleb128 0xb
 3126 0030 3E       		.uleb128 0x3e
 3127 0031 0B       		.uleb128 0xb
 3128 0032 03       		.uleb128 0x3
 3129 0033 08       		.uleb128 0x8
 3130 0034 00       		.byte	0
 3131 0035 00       		.byte	0
 3132 0036 05       		.uleb128 0x5
 3133 0037 35       		.uleb128 0x35
 3134 0038 00       		.byte	0
 3135 0039 49       		.uleb128 0x49
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 87


 3136 003a 13       		.uleb128 0x13
 3137 003b 00       		.byte	0
 3138 003c 00       		.byte	0
 3139 003d 06       		.uleb128 0x6
 3140 003e 04       		.uleb128 0x4
 3141 003f 01       		.byte	0x1
 3142 0040 0B       		.uleb128 0xb
 3143 0041 0B       		.uleb128 0xb
 3144 0042 3A       		.uleb128 0x3a
 3145 0043 0B       		.uleb128 0xb
 3146 0044 3B       		.uleb128 0x3b
 3147 0045 05       		.uleb128 0x5
 3148 0046 01       		.uleb128 0x1
 3149 0047 13       		.uleb128 0x13
 3150 0048 00       		.byte	0
 3151 0049 00       		.byte	0
 3152 004a 07       		.uleb128 0x7
 3153 004b 28       		.uleb128 0x28
 3154 004c 00       		.byte	0
 3155 004d 03       		.uleb128 0x3
 3156 004e 0E       		.uleb128 0xe
 3157 004f 1C       		.uleb128 0x1c
 3158 0050 0D       		.uleb128 0xd
 3159 0051 00       		.byte	0
 3160 0052 00       		.byte	0
 3161 0053 08       		.uleb128 0x8
 3162 0054 28       		.uleb128 0x28
 3163 0055 00       		.byte	0
 3164 0056 03       		.uleb128 0x3
 3165 0057 08       		.uleb128 0x8
 3166 0058 1C       		.uleb128 0x1c
 3167 0059 0D       		.uleb128 0xd
 3168 005a 00       		.byte	0
 3169 005b 00       		.byte	0
 3170 005c 09       		.uleb128 0x9
 3171 005d 16       		.uleb128 0x16
 3172 005e 00       		.byte	0
 3173 005f 03       		.uleb128 0x3
 3174 0060 0E       		.uleb128 0xe
 3175 0061 3A       		.uleb128 0x3a
 3176 0062 0B       		.uleb128 0xb
 3177 0063 3B       		.uleb128 0x3b
 3178 0064 05       		.uleb128 0x5
 3179 0065 49       		.uleb128 0x49
 3180 0066 13       		.uleb128 0x13
 3181 0067 00       		.byte	0
 3182 0068 00       		.byte	0
 3183 0069 0A       		.uleb128 0xa
 3184 006a 13       		.uleb128 0x13
 3185 006b 01       		.byte	0x1
 3186 006c 0B       		.uleb128 0xb
 3187 006d 0B       		.uleb128 0xb
 3188 006e 3A       		.uleb128 0x3a
 3189 006f 0B       		.uleb128 0xb
 3190 0070 3B       		.uleb128 0x3b
 3191 0071 05       		.uleb128 0x5
 3192 0072 01       		.uleb128 0x1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 88


 3193 0073 13       		.uleb128 0x13
 3194 0074 00       		.byte	0
 3195 0075 00       		.byte	0
 3196 0076 0B       		.uleb128 0xb
 3197 0077 0D       		.uleb128 0xd
 3198 0078 00       		.byte	0
 3199 0079 03       		.uleb128 0x3
 3200 007a 08       		.uleb128 0x8
 3201 007b 3A       		.uleb128 0x3a
 3202 007c 0B       		.uleb128 0xb
 3203 007d 3B       		.uleb128 0x3b
 3204 007e 05       		.uleb128 0x5
 3205 007f 49       		.uleb128 0x49
 3206 0080 13       		.uleb128 0x13
 3207 0081 38       		.uleb128 0x38
 3208 0082 0A       		.uleb128 0xa
 3209 0083 00       		.byte	0
 3210 0084 00       		.byte	0
 3211 0085 0C       		.uleb128 0xc
 3212 0086 0D       		.uleb128 0xd
 3213 0087 00       		.byte	0
 3214 0088 03       		.uleb128 0x3
 3215 0089 0E       		.uleb128 0xe
 3216 008a 3A       		.uleb128 0x3a
 3217 008b 0B       		.uleb128 0xb
 3218 008c 3B       		.uleb128 0x3b
 3219 008d 05       		.uleb128 0x5
 3220 008e 49       		.uleb128 0x49
 3221 008f 13       		.uleb128 0x13
 3222 0090 38       		.uleb128 0x38
 3223 0091 0A       		.uleb128 0xa
 3224 0092 00       		.byte	0
 3225 0093 00       		.byte	0
 3226 0094 0D       		.uleb128 0xd
 3227 0095 13       		.uleb128 0x13
 3228 0096 01       		.byte	0x1
 3229 0097 0B       		.uleb128 0xb
 3230 0098 0B       		.uleb128 0xb
 3231 0099 3A       		.uleb128 0x3a
 3232 009a 0B       		.uleb128 0xb
 3233 009b 3B       		.uleb128 0x3b
 3234 009c 0B       		.uleb128 0xb
 3235 009d 01       		.uleb128 0x1
 3236 009e 13       		.uleb128 0x13
 3237 009f 00       		.byte	0
 3238 00a0 00       		.byte	0
 3239 00a1 0E       		.uleb128 0xe
 3240 00a2 0D       		.uleb128 0xd
 3241 00a3 00       		.byte	0
 3242 00a4 03       		.uleb128 0x3
 3243 00a5 0E       		.uleb128 0xe
 3244 00a6 3A       		.uleb128 0x3a
 3245 00a7 0B       		.uleb128 0xb
 3246 00a8 3B       		.uleb128 0x3b
 3247 00a9 0B       		.uleb128 0xb
 3248 00aa 49       		.uleb128 0x49
 3249 00ab 13       		.uleb128 0x13
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 89


 3250 00ac 38       		.uleb128 0x38
 3251 00ad 0A       		.uleb128 0xa
 3252 00ae 00       		.byte	0
 3253 00af 00       		.byte	0
 3254 00b0 0F       		.uleb128 0xf
 3255 00b1 2E       		.uleb128 0x2e
 3256 00b2 01       		.byte	0x1
 3257 00b3 3F       		.uleb128 0x3f
 3258 00b4 0C       		.uleb128 0xc
 3259 00b5 03       		.uleb128 0x3
 3260 00b6 0E       		.uleb128 0xe
 3261 00b7 3A       		.uleb128 0x3a
 3262 00b8 0B       		.uleb128 0xb
 3263 00b9 3B       		.uleb128 0x3b
 3264 00ba 0B       		.uleb128 0xb
 3265 00bb 27       		.uleb128 0x27
 3266 00bc 0C       		.uleb128 0xc
 3267 00bd 11       		.uleb128 0x11
 3268 00be 01       		.uleb128 0x1
 3269 00bf 12       		.uleb128 0x12
 3270 00c0 01       		.uleb128 0x1
 3271 00c1 40       		.uleb128 0x40
 3272 00c2 06       		.uleb128 0x6
 3273 00c3 9742     		.uleb128 0x2117
 3274 00c5 0C       		.uleb128 0xc
 3275 00c6 01       		.uleb128 0x1
 3276 00c7 13       		.uleb128 0x13
 3277 00c8 00       		.byte	0
 3278 00c9 00       		.byte	0
 3279 00ca 10       		.uleb128 0x10
 3280 00cb 898201   		.uleb128 0x4109
 3281 00ce 01       		.byte	0x1
 3282 00cf 11       		.uleb128 0x11
 3283 00d0 01       		.uleb128 0x1
 3284 00d1 31       		.uleb128 0x31
 3285 00d2 13       		.uleb128 0x13
 3286 00d3 01       		.uleb128 0x1
 3287 00d4 13       		.uleb128 0x13
 3288 00d5 00       		.byte	0
 3289 00d6 00       		.byte	0
 3290 00d7 11       		.uleb128 0x11
 3291 00d8 8A8201   		.uleb128 0x410a
 3292 00db 00       		.byte	0
 3293 00dc 02       		.uleb128 0x2
 3294 00dd 0A       		.uleb128 0xa
 3295 00de 9142     		.uleb128 0x2111
 3296 00e0 0A       		.uleb128 0xa
 3297 00e1 00       		.byte	0
 3298 00e2 00       		.byte	0
 3299 00e3 12       		.uleb128 0x12
 3300 00e4 898201   		.uleb128 0x4109
 3301 00e7 01       		.byte	0x1
 3302 00e8 11       		.uleb128 0x11
 3303 00e9 01       		.uleb128 0x1
 3304 00ea 9542     		.uleb128 0x2115
 3305 00ec 0C       		.uleb128 0xc
 3306 00ed 31       		.uleb128 0x31
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 90


 3307 00ee 13       		.uleb128 0x13
 3308 00ef 00       		.byte	0
 3309 00f0 00       		.byte	0
 3310 00f1 13       		.uleb128 0x13
 3311 00f2 05       		.uleb128 0x5
 3312 00f3 00       		.byte	0
 3313 00f4 03       		.uleb128 0x3
 3314 00f5 0E       		.uleb128 0xe
 3315 00f6 3A       		.uleb128 0x3a
 3316 00f7 0B       		.uleb128 0xb
 3317 00f8 3B       		.uleb128 0x3b
 3318 00f9 0B       		.uleb128 0xb
 3319 00fa 49       		.uleb128 0x49
 3320 00fb 13       		.uleb128 0x13
 3321 00fc 02       		.uleb128 0x2
 3322 00fd 0A       		.uleb128 0xa
 3323 00fe 00       		.byte	0
 3324 00ff 00       		.byte	0
 3325 0100 14       		.uleb128 0x14
 3326 0101 34       		.uleb128 0x34
 3327 0102 00       		.byte	0
 3328 0103 03       		.uleb128 0x3
 3329 0104 0E       		.uleb128 0xe
 3330 0105 3A       		.uleb128 0x3a
 3331 0106 0B       		.uleb128 0xb
 3332 0107 3B       		.uleb128 0x3b
 3333 0108 0B       		.uleb128 0xb
 3334 0109 49       		.uleb128 0x49
 3335 010a 13       		.uleb128 0x13
 3336 010b 02       		.uleb128 0x2
 3337 010c 06       		.uleb128 0x6
 3338 010d 00       		.byte	0
 3339 010e 00       		.byte	0
 3340 010f 15       		.uleb128 0x15
 3341 0110 0F       		.uleb128 0xf
 3342 0111 00       		.byte	0
 3343 0112 0B       		.uleb128 0xb
 3344 0113 0B       		.uleb128 0xb
 3345 0114 49       		.uleb128 0x49
 3346 0115 13       		.uleb128 0x13
 3347 0116 00       		.byte	0
 3348 0117 00       		.byte	0
 3349 0118 16       		.uleb128 0x16
 3350 0119 2E       		.uleb128 0x2e
 3351 011a 01       		.byte	0x1
 3352 011b 3F       		.uleb128 0x3f
 3353 011c 0C       		.uleb128 0xc
 3354 011d 03       		.uleb128 0x3
 3355 011e 0E       		.uleb128 0xe
 3356 011f 3A       		.uleb128 0x3a
 3357 0120 0B       		.uleb128 0xb
 3358 0121 3B       		.uleb128 0x3b
 3359 0122 05       		.uleb128 0x5
 3360 0123 27       		.uleb128 0x27
 3361 0124 0C       		.uleb128 0xc
 3362 0125 11       		.uleb128 0x11
 3363 0126 01       		.uleb128 0x1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 91


 3364 0127 12       		.uleb128 0x12
 3365 0128 01       		.uleb128 0x1
 3366 0129 40       		.uleb128 0x40
 3367 012a 0A       		.uleb128 0xa
 3368 012b 9742     		.uleb128 0x2117
 3369 012d 0C       		.uleb128 0xc
 3370 012e 01       		.uleb128 0x1
 3371 012f 13       		.uleb128 0x13
 3372 0130 00       		.byte	0
 3373 0131 00       		.byte	0
 3374 0132 17       		.uleb128 0x17
 3375 0133 05       		.uleb128 0x5
 3376 0134 00       		.byte	0
 3377 0135 03       		.uleb128 0x3
 3378 0136 0E       		.uleb128 0xe
 3379 0137 3A       		.uleb128 0x3a
 3380 0138 0B       		.uleb128 0xb
 3381 0139 3B       		.uleb128 0x3b
 3382 013a 05       		.uleb128 0x5
 3383 013b 49       		.uleb128 0x49
 3384 013c 13       		.uleb128 0x13
 3385 013d 02       		.uleb128 0x2
 3386 013e 0A       		.uleb128 0xa
 3387 013f 00       		.byte	0
 3388 0140 00       		.byte	0
 3389 0141 18       		.uleb128 0x18
 3390 0142 2E       		.uleb128 0x2e
 3391 0143 01       		.byte	0x1
 3392 0144 3F       		.uleb128 0x3f
 3393 0145 0C       		.uleb128 0xc
 3394 0146 03       		.uleb128 0x3
 3395 0147 0E       		.uleb128 0xe
 3396 0148 3A       		.uleb128 0x3a
 3397 0149 0B       		.uleb128 0xb
 3398 014a 3B       		.uleb128 0x3b
 3399 014b 05       		.uleb128 0x5
 3400 014c 27       		.uleb128 0x27
 3401 014d 0C       		.uleb128 0xc
 3402 014e 11       		.uleb128 0x11
 3403 014f 01       		.uleb128 0x1
 3404 0150 12       		.uleb128 0x12
 3405 0151 01       		.uleb128 0x1
 3406 0152 40       		.uleb128 0x40
 3407 0153 06       		.uleb128 0x6
 3408 0154 9742     		.uleb128 0x2117
 3409 0156 0C       		.uleb128 0xc
 3410 0157 01       		.uleb128 0x1
 3411 0158 13       		.uleb128 0x13
 3412 0159 00       		.byte	0
 3413 015a 00       		.byte	0
 3414 015b 19       		.uleb128 0x19
 3415 015c 05       		.uleb128 0x5
 3416 015d 00       		.byte	0
 3417 015e 03       		.uleb128 0x3
 3418 015f 0E       		.uleb128 0xe
 3419 0160 3A       		.uleb128 0x3a
 3420 0161 0B       		.uleb128 0xb
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 92


 3421 0162 3B       		.uleb128 0x3b
 3422 0163 05       		.uleb128 0x5
 3423 0164 49       		.uleb128 0x49
 3424 0165 13       		.uleb128 0x13
 3425 0166 02       		.uleb128 0x2
 3426 0167 06       		.uleb128 0x6
 3427 0168 00       		.byte	0
 3428 0169 00       		.byte	0
 3429 016a 1A       		.uleb128 0x1a
 3430 016b 34       		.uleb128 0x34
 3431 016c 00       		.byte	0
 3432 016d 03       		.uleb128 0x3
 3433 016e 0E       		.uleb128 0xe
 3434 016f 3A       		.uleb128 0x3a
 3435 0170 0B       		.uleb128 0xb
 3436 0171 3B       		.uleb128 0x3b
 3437 0172 05       		.uleb128 0x5
 3438 0173 49       		.uleb128 0x49
 3439 0174 13       		.uleb128 0x13
 3440 0175 02       		.uleb128 0x2
 3441 0176 06       		.uleb128 0x6
 3442 0177 00       		.byte	0
 3443 0178 00       		.byte	0
 3444 0179 1B       		.uleb128 0x1b
 3445 017a 2E       		.uleb128 0x2e
 3446 017b 01       		.byte	0x1
 3447 017c 3F       		.uleb128 0x3f
 3448 017d 0C       		.uleb128 0xc
 3449 017e 03       		.uleb128 0x3
 3450 017f 0E       		.uleb128 0xe
 3451 0180 3A       		.uleb128 0x3a
 3452 0181 0B       		.uleb128 0xb
 3453 0182 3B       		.uleb128 0x3b
 3454 0183 05       		.uleb128 0x5
 3455 0184 27       		.uleb128 0x27
 3456 0185 0C       		.uleb128 0xc
 3457 0186 49       		.uleb128 0x49
 3458 0187 13       		.uleb128 0x13
 3459 0188 11       		.uleb128 0x11
 3460 0189 01       		.uleb128 0x1
 3461 018a 12       		.uleb128 0x12
 3462 018b 01       		.uleb128 0x1
 3463 018c 40       		.uleb128 0x40
 3464 018d 0A       		.uleb128 0xa
 3465 018e 9742     		.uleb128 0x2117
 3466 0190 0C       		.uleb128 0xc
 3467 0191 01       		.uleb128 0x1
 3468 0192 13       		.uleb128 0x13
 3469 0193 00       		.byte	0
 3470 0194 00       		.byte	0
 3471 0195 1C       		.uleb128 0x1c
 3472 0196 2E       		.uleb128 0x2e
 3473 0197 00       		.byte	0
 3474 0198 3F       		.uleb128 0x3f
 3475 0199 0C       		.uleb128 0xc
 3476 019a 03       		.uleb128 0x3
 3477 019b 0E       		.uleb128 0xe
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 93


 3478 019c 3A       		.uleb128 0x3a
 3479 019d 0B       		.uleb128 0xb
 3480 019e 3B       		.uleb128 0x3b
 3481 019f 05       		.uleb128 0x5
 3482 01a0 27       		.uleb128 0x27
 3483 01a1 0C       		.uleb128 0xc
 3484 01a2 49       		.uleb128 0x49
 3485 01a3 13       		.uleb128 0x13
 3486 01a4 11       		.uleb128 0x11
 3487 01a5 01       		.uleb128 0x1
 3488 01a6 12       		.uleb128 0x12
 3489 01a7 01       		.uleb128 0x1
 3490 01a8 40       		.uleb128 0x40
 3491 01a9 0A       		.uleb128 0xa
 3492 01aa 9742     		.uleb128 0x2117
 3493 01ac 0C       		.uleb128 0xc
 3494 01ad 00       		.byte	0
 3495 01ae 00       		.byte	0
 3496 01af 1D       		.uleb128 0x1d
 3497 01b0 34       		.uleb128 0x34
 3498 01b1 00       		.byte	0
 3499 01b2 03       		.uleb128 0x3
 3500 01b3 08       		.uleb128 0x8
 3501 01b4 3A       		.uleb128 0x3a
 3502 01b5 0B       		.uleb128 0xb
 3503 01b6 3B       		.uleb128 0x3b
 3504 01b7 05       		.uleb128 0x5
 3505 01b8 49       		.uleb128 0x49
 3506 01b9 13       		.uleb128 0x13
 3507 01ba 02       		.uleb128 0x2
 3508 01bb 06       		.uleb128 0x6
 3509 01bc 00       		.byte	0
 3510 01bd 00       		.byte	0
 3511 01be 1E       		.uleb128 0x1e
 3512 01bf 2E       		.uleb128 0x2e
 3513 01c0 01       		.byte	0x1
 3514 01c1 3F       		.uleb128 0x3f
 3515 01c2 0C       		.uleb128 0xc
 3516 01c3 03       		.uleb128 0x3
 3517 01c4 0E       		.uleb128 0xe
 3518 01c5 3A       		.uleb128 0x3a
 3519 01c6 0B       		.uleb128 0xb
 3520 01c7 3B       		.uleb128 0x3b
 3521 01c8 05       		.uleb128 0x5
 3522 01c9 27       		.uleb128 0x27
 3523 01ca 0C       		.uleb128 0xc
 3524 01cb 49       		.uleb128 0x49
 3525 01cc 13       		.uleb128 0x13
 3526 01cd 11       		.uleb128 0x11
 3527 01ce 01       		.uleb128 0x1
 3528 01cf 12       		.uleb128 0x12
 3529 01d0 01       		.uleb128 0x1
 3530 01d1 40       		.uleb128 0x40
 3531 01d2 06       		.uleb128 0x6
 3532 01d3 9742     		.uleb128 0x2117
 3533 01d5 0C       		.uleb128 0xc
 3534 01d6 01       		.uleb128 0x1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 94


 3535 01d7 13       		.uleb128 0x13
 3536 01d8 00       		.byte	0
 3537 01d9 00       		.byte	0
 3538 01da 1F       		.uleb128 0x1f
 3539 01db 34       		.uleb128 0x34
 3540 01dc 00       		.byte	0
 3541 01dd 03       		.uleb128 0x3
 3542 01de 0E       		.uleb128 0xe
 3543 01df 3A       		.uleb128 0x3a
 3544 01e0 0B       		.uleb128 0xb
 3545 01e1 3B       		.uleb128 0x3b
 3546 01e2 05       		.uleb128 0x5
 3547 01e3 49       		.uleb128 0x49
 3548 01e4 13       		.uleb128 0x13
 3549 01e5 3F       		.uleb128 0x3f
 3550 01e6 0C       		.uleb128 0xc
 3551 01e7 3C       		.uleb128 0x3c
 3552 01e8 0C       		.uleb128 0xc
 3553 01e9 00       		.byte	0
 3554 01ea 00       		.byte	0
 3555 01eb 20       		.uleb128 0x20
 3556 01ec 2E       		.uleb128 0x2e
 3557 01ed 01       		.byte	0x1
 3558 01ee 3F       		.uleb128 0x3f
 3559 01ef 0C       		.uleb128 0xc
 3560 01f0 03       		.uleb128 0x3
 3561 01f1 0E       		.uleb128 0xe
 3562 01f2 3A       		.uleb128 0x3a
 3563 01f3 0B       		.uleb128 0xb
 3564 01f4 3B       		.uleb128 0x3b
 3565 01f5 05       		.uleb128 0x5
 3566 01f6 27       		.uleb128 0x27
 3567 01f7 0C       		.uleb128 0xc
 3568 01f8 3C       		.uleb128 0x3c
 3569 01f9 0C       		.uleb128 0xc
 3570 01fa 00       		.byte	0
 3571 01fb 00       		.byte	0
 3572 01fc 21       		.uleb128 0x21
 3573 01fd 05       		.uleb128 0x5
 3574 01fe 00       		.byte	0
 3575 01ff 49       		.uleb128 0x49
 3576 0200 13       		.uleb128 0x13
 3577 0201 00       		.byte	0
 3578 0202 00       		.byte	0
 3579 0203 00       		.byte	0
 3580              		.section	.debug_loc,"",%progbits
 3581              	.Ldebug_loc0:
 3582              	.LLST0:
 3583 0000 00000000 		.4byte	.LFB110-.Ltext0
 3584 0004 02000000 		.4byte	.LCFI0-.Ltext0
 3585 0008 0200     		.2byte	0x2
 3586 000a 7D       		.byte	0x7d
 3587 000b 00       		.sleb128 0
 3588 000c 02000000 		.4byte	.LCFI0-.Ltext0
 3589 0010 1A000000 		.4byte	.LFE110-.Ltext0
 3590 0014 0200     		.2byte	0x2
 3591 0016 7D       		.byte	0x7d
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 95


 3592 0017 08       		.sleb128 8
 3593 0018 00000000 		.4byte	0
 3594 001c 00000000 		.4byte	0
 3595              	.LLST1:
 3596 0020 1A000000 		.4byte	.LFB111-.Ltext0
 3597 0024 3A000000 		.4byte	.LCFI1-.Ltext0
 3598 0028 0200     		.2byte	0x2
 3599 002a 7D       		.byte	0x7d
 3600 002b 00       		.sleb128 0
 3601 002c 3A000000 		.4byte	.LCFI1-.Ltext0
 3602 0030 64000000 		.4byte	.LFE111-.Ltext0
 3603 0034 0200     		.2byte	0x2
 3604 0036 7D       		.byte	0x7d
 3605 0037 08       		.sleb128 8
 3606 0038 00000000 		.4byte	0
 3607 003c 00000000 		.4byte	0
 3608              	.LLST2:
 3609 0040 1A000000 		.4byte	.LVL2-.Ltext0
 3610 0044 1C000000 		.4byte	.LVL3-.Ltext0
 3611 0048 0200     		.2byte	0x2
 3612 004a 30       		.byte	0x30
 3613 004b 9F       		.byte	0x9f
 3614 004c 1C000000 		.4byte	.LVL3-.Ltext0
 3615 0050 22000000 		.4byte	.LVL4-.Ltext0
 3616 0054 0900     		.2byte	0x9
 3617 0056 72       		.byte	0x72
 3618 0057 00       		.sleb128 0
 3619 0058 11       		.byte	0x11
 3620 0059 FFFDFF67 		.sleb128 -50331905
 3621 005d 1A       		.byte	0x1a
 3622 005e 9F       		.byte	0x9f
 3623 005f 2E000000 		.4byte	.LVL5-.Ltext0
 3624 0063 34000000 		.4byte	.LVL6-.Ltext0
 3625 0067 0100     		.2byte	0x1
 3626 0069 53       		.byte	0x53
 3627 006a 34000000 		.4byte	.LVL6-.Ltext0
 3628 006e 3E000000 		.4byte	.LVL7-.Ltext0
 3629 0072 0200     		.2byte	0x2
 3630 0074 70       		.byte	0x70
 3631 0075 04       		.sleb128 4
 3632 0076 3E000000 		.4byte	.LVL7-.Ltext0
 3633 007a 42000000 		.4byte	.LVL8-.Ltext0
 3634 007e 0A00     		.2byte	0xa
 3635 0080 74       		.byte	0x74
 3636 0081 00       		.sleb128 0
 3637 0082 11       		.byte	0x11
 3638 0083 FDEFFF87 		.sleb128 -1056966659
 3638      7C
 3639 0088 1A       		.byte	0x1a
 3640 0089 9F       		.byte	0x9f
 3641 008a 42000000 		.4byte	.LVL8-.Ltext0
 3642 008e 44000000 		.4byte	.LVL9-.Ltext0
 3643 0092 0100     		.2byte	0x1
 3644 0094 53       		.byte	0x53
 3645 0095 44000000 		.4byte	.LVL9-.Ltext0
 3646 0099 4A000000 		.4byte	.LVL10-.Ltext0
 3647 009d 0A00     		.2byte	0xa
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 96


 3648 009f 74       		.byte	0x74
 3649 00a0 00       		.sleb128 0
 3650 00a1 11       		.byte	0x11
 3651 00a2 FDEFFF87 		.sleb128 -1056966659
 3651      7C
 3652 00a7 1A       		.byte	0x1a
 3653 00a8 9F       		.byte	0x9f
 3654 00a9 4A000000 		.4byte	.LVL10-.Ltext0
 3655 00ad 4E000000 		.4byte	.LVL11-.Ltext0
 3656 00b1 0100     		.2byte	0x1
 3657 00b3 53       		.byte	0x53
 3658 00b4 4E000000 		.4byte	.LVL11-.Ltext0
 3659 00b8 50000000 		.4byte	.LVL12-.Ltext0
 3660 00bc 0200     		.2byte	0x2
 3661 00be 70       		.byte	0x70
 3662 00bf 08       		.sleb128 8
 3663 00c0 50000000 		.4byte	.LVL12-.Ltext0
 3664 00c4 5C000000 		.4byte	.LVL14-.Ltext0
 3665 00c8 0100     		.2byte	0x1
 3666 00ca 52       		.byte	0x52
 3667 00cb 5C000000 		.4byte	.LVL14-.Ltext0
 3668 00cf 64000000 		.4byte	.LFE111-.Ltext0
 3669 00d3 0100     		.2byte	0x1
 3670 00d5 53       		.byte	0x53
 3671 00d6 00000000 		.4byte	0
 3672 00da 00000000 		.4byte	0
 3673              	.LLST3:
 3674 00de 1A000000 		.4byte	.LVL2-.Ltext0
 3675 00e2 56000000 		.4byte	.LVL13-.Ltext0
 3676 00e6 0200     		.2byte	0x2
 3677 00e8 30       		.byte	0x30
 3678 00e9 9F       		.byte	0x9f
 3679 00ea 56000000 		.4byte	.LVL13-.Ltext0
 3680 00ee 64000000 		.4byte	.LFE111-.Ltext0
 3681 00f2 0700     		.2byte	0x7
 3682 00f4 71       		.byte	0x71
 3683 00f5 14       		.sleb128 20
 3684 00f6 94       		.byte	0x94
 3685 00f7 01       		.byte	0x1
 3686 00f8 31       		.byte	0x31
 3687 00f9 1C       		.byte	0x1c
 3688 00fa 9F       		.byte	0x9f
 3689 00fb 00000000 		.4byte	0
 3690 00ff 00000000 		.4byte	0
 3691              	.LLST4:
 3692 0103 78000000 		.4byte	.LFB113-.Ltext0
 3693 0107 80000000 		.4byte	.LCFI2-.Ltext0
 3694 010b 0200     		.2byte	0x2
 3695 010d 7D       		.byte	0x7d
 3696 010e 00       		.sleb128 0
 3697 010f 80000000 		.4byte	.LCFI2-.Ltext0
 3698 0113 A0000000 		.4byte	.LFE113-.Ltext0
 3699 0117 0200     		.2byte	0x2
 3700 0119 7D       		.byte	0x7d
 3701 011a 08       		.sleb128 8
 3702 011b 00000000 		.4byte	0
 3703 011f 00000000 		.4byte	0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 97


 3704              	.LLST5:
 3705 0123 78000000 		.4byte	.LVL16-.Ltext0
 3706 0127 8C000000 		.4byte	.LVL19-.Ltext0
 3707 012b 0100     		.2byte	0x1
 3708 012d 50       		.byte	0x50
 3709 012e 8C000000 		.4byte	.LVL19-.Ltext0
 3710 0132 A0000000 		.4byte	.LFE113-.Ltext0
 3711 0136 0400     		.2byte	0x4
 3712 0138 F3       		.byte	0xf3
 3713 0139 01       		.uleb128 0x1
 3714 013a 50       		.byte	0x50
 3715 013b 9F       		.byte	0x9f
 3716 013c 00000000 		.4byte	0
 3717 0140 00000000 		.4byte	0
 3718              	.LLST6:
 3719 0144 78000000 		.4byte	.LVL16-.Ltext0
 3720 0148 7E000000 		.4byte	.LVL17-.Ltext0
 3721 014c 0200     		.2byte	0x2
 3722 014e 30       		.byte	0x30
 3723 014f 9F       		.byte	0x9f
 3724 0150 7E000000 		.4byte	.LVL17-.Ltext0
 3725 0154 82000000 		.4byte	.LVL18-.Ltext0
 3726 0158 0100     		.2byte	0x1
 3727 015a 51       		.byte	0x51
 3728 015b 82000000 		.4byte	.LVL18-.Ltext0
 3729 015f A0000000 		.4byte	.LFE113-.Ltext0
 3730 0163 0100     		.2byte	0x1
 3731 0165 53       		.byte	0x53
 3732 0166 00000000 		.4byte	0
 3733 016a 00000000 		.4byte	0
 3734              	.LLST7:
 3735 016e BE000000 		.4byte	.LVL23-.Ltext0
 3736 0172 CA000000 		.4byte	.LVL27-.Ltext0
 3737 0176 0100     		.2byte	0x1
 3738 0178 51       		.byte	0x51
 3739 0179 CA000000 		.4byte	.LVL27-.Ltext0
 3740 017d CE000000 		.4byte	.LFE116-.Ltext0
 3741 0181 0400     		.2byte	0x4
 3742 0183 F3       		.byte	0xf3
 3743 0184 01       		.uleb128 0x1
 3744 0185 51       		.byte	0x51
 3745 0186 9F       		.byte	0x9f
 3746 0187 00000000 		.4byte	0
 3747 018b 00000000 		.4byte	0
 3748              	.LLST8:
 3749 018f BE000000 		.4byte	.LVL23-.Ltext0
 3750 0193 C0000000 		.4byte	.LVL24-.Ltext0
 3751 0197 0200     		.2byte	0x2
 3752 0199 30       		.byte	0x30
 3753 019a 9F       		.byte	0x9f
 3754 019b C0000000 		.4byte	.LVL24-.Ltext0
 3755 019f C4000000 		.4byte	.LVL25-.Ltext0
 3756 01a3 0100     		.2byte	0x1
 3757 01a5 53       		.byte	0x53
 3758 01a6 C8000000 		.4byte	.LVL26-.Ltext0
 3759 01aa CA000000 		.4byte	.LVL27-.Ltext0
 3760 01ae 0100     		.2byte	0x1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 98


 3761 01b0 53       		.byte	0x53
 3762 01b1 CA000000 		.4byte	.LVL27-.Ltext0
 3763 01b5 CE000000 		.4byte	.LFE116-.Ltext0
 3764 01b9 0100     		.2byte	0x1
 3765 01bb 51       		.byte	0x51
 3766 01bc 00000000 		.4byte	0
 3767 01c0 00000000 		.4byte	0
 3768              	.LLST9:
 3769 01c4 D4000000 		.4byte	.LVL29-.Ltext0
 3770 01c8 DC000000 		.4byte	.LVL32-.Ltext0
 3771 01cc 0100     		.2byte	0x1
 3772 01ce 51       		.byte	0x51
 3773 01cf DC000000 		.4byte	.LVL32-.Ltext0
 3774 01d3 E0000000 		.4byte	.LFE118-.Ltext0
 3775 01d7 0400     		.2byte	0x4
 3776 01d9 F3       		.byte	0xf3
 3777 01da 01       		.uleb128 0x1
 3778 01db 51       		.byte	0x51
 3779 01dc 9F       		.byte	0x9f
 3780 01dd 00000000 		.4byte	0
 3781 01e1 00000000 		.4byte	0
 3782              	.LLST10:
 3783 01e5 D4000000 		.4byte	.LVL29-.Ltext0
 3784 01e9 D6000000 		.4byte	.LVL30-.Ltext0
 3785 01ed 0200     		.2byte	0x2
 3786 01ef 30       		.byte	0x30
 3787 01f0 9F       		.byte	0x9f
 3788 01f1 D6000000 		.4byte	.LVL30-.Ltext0
 3789 01f5 DC000000 		.4byte	.LVL32-.Ltext0
 3790 01f9 0100     		.2byte	0x1
 3791 01fb 53       		.byte	0x53
 3792 01fc DC000000 		.4byte	.LVL32-.Ltext0
 3793 0200 E0000000 		.4byte	.LFE118-.Ltext0
 3794 0204 0100     		.2byte	0x1
 3795 0206 51       		.byte	0x51
 3796 0207 00000000 		.4byte	0
 3797 020b 00000000 		.4byte	0
 3798              	.LLST11:
 3799 020f 10010000 		.4byte	.LFB121-.Ltext0
 3800 0213 14010000 		.4byte	.LCFI3-.Ltext0
 3801 0217 0200     		.2byte	0x2
 3802 0219 7D       		.byte	0x7d
 3803 021a 00       		.sleb128 0
 3804 021b 14010000 		.4byte	.LCFI3-.Ltext0
 3805 021f B2010000 		.4byte	.LFE121-.Ltext0
 3806 0223 0200     		.2byte	0x2
 3807 0225 7D       		.byte	0x7d
 3808 0226 10       		.sleb128 16
 3809 0227 00000000 		.4byte	0
 3810 022b 00000000 		.4byte	0
 3811              	.LLST12:
 3812 022f 10010000 		.4byte	.LVL35-.Ltext0
 3813 0233 68010000 		.4byte	.LVL53-.Ltext0
 3814 0237 0100     		.2byte	0x1
 3815 0239 51       		.byte	0x51
 3816 023a 68010000 		.4byte	.LVL53-.Ltext0
 3817 023e 70010000 		.4byte	.LVL55-.Ltext0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 99


 3818 0242 0400     		.2byte	0x4
 3819 0244 F3       		.byte	0xf3
 3820 0245 01       		.uleb128 0x1
 3821 0246 51       		.byte	0x51
 3822 0247 9F       		.byte	0x9f
 3823 0248 70010000 		.4byte	.LVL55-.Ltext0
 3824 024c 8C010000 		.4byte	.LVL60-.Ltext0
 3825 0250 0100     		.2byte	0x1
 3826 0252 51       		.byte	0x51
 3827 0253 8C010000 		.4byte	.LVL60-.Ltext0
 3828 0257 94010000 		.4byte	.LVL62-.Ltext0
 3829 025b 0400     		.2byte	0x4
 3830 025d F3       		.byte	0xf3
 3831 025e 01       		.uleb128 0x1
 3832 025f 51       		.byte	0x51
 3833 0260 9F       		.byte	0x9f
 3834 0261 94010000 		.4byte	.LVL62-.Ltext0
 3835 0265 AA010000 		.4byte	.LVL66-.Ltext0
 3836 0269 0100     		.2byte	0x1
 3837 026b 51       		.byte	0x51
 3838 026c AA010000 		.4byte	.LVL66-.Ltext0
 3839 0270 B2010000 		.4byte	.LFE121-.Ltext0
 3840 0274 0400     		.2byte	0x4
 3841 0276 F3       		.byte	0xf3
 3842 0277 01       		.uleb128 0x1
 3843 0278 51       		.byte	0x51
 3844 0279 9F       		.byte	0x9f
 3845 027a 00000000 		.4byte	0
 3846 027e 00000000 		.4byte	0
 3847              	.LLST13:
 3848 0282 10010000 		.4byte	.LVL35-.Ltext0
 3849 0286 56010000 		.4byte	.LVL49-.Ltext0
 3850 028a 0100     		.2byte	0x1
 3851 028c 52       		.byte	0x52
 3852 028d 56010000 		.4byte	.LVL49-.Ltext0
 3853 0291 70010000 		.4byte	.LVL55-.Ltext0
 3854 0295 0400     		.2byte	0x4
 3855 0297 F3       		.byte	0xf3
 3856 0298 01       		.uleb128 0x1
 3857 0299 52       		.byte	0x52
 3858 029a 9F       		.byte	0x9f
 3859 029b 70010000 		.4byte	.LVL55-.Ltext0
 3860 029f 74010000 		.4byte	.LVL56-.Ltext0
 3861 02a3 0100     		.2byte	0x1
 3862 02a5 52       		.byte	0x52
 3863 02a6 74010000 		.4byte	.LVL56-.Ltext0
 3864 02aa B2010000 		.4byte	.LFE121-.Ltext0
 3865 02ae 0400     		.2byte	0x4
 3866 02b0 F3       		.byte	0xf3
 3867 02b1 01       		.uleb128 0x1
 3868 02b2 52       		.byte	0x52
 3869 02b3 9F       		.byte	0x9f
 3870 02b4 00000000 		.4byte	0
 3871 02b8 00000000 		.4byte	0
 3872              	.LLST14:
 3873 02bc 10010000 		.4byte	.LVL35-.Ltext0
 3874 02c0 2E010000 		.4byte	.LVL39-.Ltext0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 100


 3875 02c4 0100     		.2byte	0x1
 3876 02c6 53       		.byte	0x53
 3877 02c7 2E010000 		.4byte	.LVL39-.Ltext0
 3878 02cb 36010000 		.4byte	.LVL41-.Ltext0
 3879 02cf 0400     		.2byte	0x4
 3880 02d1 F3       		.byte	0xf3
 3881 02d2 01       		.uleb128 0x1
 3882 02d3 53       		.byte	0x53
 3883 02d4 9F       		.byte	0x9f
 3884 02d5 36010000 		.4byte	.LVL41-.Ltext0
 3885 02d9 4E010000 		.4byte	.LVL48-.Ltext0
 3886 02dd 0100     		.2byte	0x1
 3887 02df 53       		.byte	0x53
 3888 02e0 4E010000 		.4byte	.LVL48-.Ltext0
 3889 02e4 B2010000 		.4byte	.LFE121-.Ltext0
 3890 02e8 0400     		.2byte	0x4
 3891 02ea F3       		.byte	0xf3
 3892 02eb 01       		.uleb128 0x1
 3893 02ec 53       		.byte	0x53
 3894 02ed 9F       		.byte	0x9f
 3895 02ee 00000000 		.4byte	0
 3896 02f2 00000000 		.4byte	0
 3897              	.LLST15:
 3898 02f6 10010000 		.4byte	.LVL35-.Ltext0
 3899 02fa 20010000 		.4byte	.LVL36-.Ltext0
 3900 02fe 0200     		.2byte	0x2
 3901 0300 30       		.byte	0x30
 3902 0301 9F       		.byte	0x9f
 3903 0302 20010000 		.4byte	.LVL36-.Ltext0
 3904 0306 2A010000 		.4byte	.LVL38-.Ltext0
 3905 030a 0100     		.2byte	0x1
 3906 030c 56       		.byte	0x56
 3907 030d 2A010000 		.4byte	.LVL38-.Ltext0
 3908 0311 32010000 		.4byte	.LVL40-.Ltext0
 3909 0315 0100     		.2byte	0x1
 3910 0317 55       		.byte	0x55
 3911 0318 32010000 		.4byte	.LVL40-.Ltext0
 3912 031c 36010000 		.4byte	.LVL41-.Ltext0
 3913 0320 0100     		.2byte	0x1
 3914 0322 54       		.byte	0x54
 3915 0323 36010000 		.4byte	.LVL41-.Ltext0
 3916 0327 38010000 		.4byte	.LVL42-.Ltext0
 3917 032b 0200     		.2byte	0x2
 3918 032d 30       		.byte	0x30
 3919 032e 9F       		.byte	0x9f
 3920 032f 38010000 		.4byte	.LVL42-.Ltext0
 3921 0333 46010000 		.4byte	.LVL45-.Ltext0
 3922 0337 0100     		.2byte	0x1
 3923 0339 56       		.byte	0x56
 3924 033a 46010000 		.4byte	.LVL45-.Ltext0
 3925 033e 4C010000 		.4byte	.LVL47-.Ltext0
 3926 0342 0100     		.2byte	0x1
 3927 0344 55       		.byte	0x55
 3928 0345 4C010000 		.4byte	.LVL47-.Ltext0
 3929 0349 64010000 		.4byte	.LVL52-.Ltext0
 3930 034d 0100     		.2byte	0x1
 3931 034f 54       		.byte	0x54
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 101


 3932 0350 64010000 		.4byte	.LVL52-.Ltext0
 3933 0354 6C010000 		.4byte	.LVL54-.Ltext0
 3934 0358 0100     		.2byte	0x1
 3935 035a 53       		.byte	0x53
 3936 035b 6C010000 		.4byte	.LVL54-.Ltext0
 3937 035f 70010000 		.4byte	.LVL55-.Ltext0
 3938 0363 0100     		.2byte	0x1
 3939 0365 52       		.byte	0x52
 3940 0366 70010000 		.4byte	.LVL55-.Ltext0
 3941 036a 88010000 		.4byte	.LVL59-.Ltext0
 3942 036e 0100     		.2byte	0x1
 3943 0370 54       		.byte	0x54
 3944 0371 88010000 		.4byte	.LVL59-.Ltext0
 3945 0375 90010000 		.4byte	.LVL61-.Ltext0
 3946 0379 0100     		.2byte	0x1
 3947 037b 53       		.byte	0x53
 3948 037c 90010000 		.4byte	.LVL61-.Ltext0
 3949 0380 94010000 		.4byte	.LVL62-.Ltext0
 3950 0384 0100     		.2byte	0x1
 3951 0386 52       		.byte	0x52
 3952 0387 94010000 		.4byte	.LVL62-.Ltext0
 3953 038b A6010000 		.4byte	.LVL65-.Ltext0
 3954 038f 0100     		.2byte	0x1
 3955 0391 54       		.byte	0x54
 3956 0392 A6010000 		.4byte	.LVL65-.Ltext0
 3957 0396 AE010000 		.4byte	.LVL67-.Ltext0
 3958 039a 0100     		.2byte	0x1
 3959 039c 53       		.byte	0x53
 3960 039d AE010000 		.4byte	.LVL67-.Ltext0
 3961 03a1 B2010000 		.4byte	.LFE121-.Ltext0
 3962 03a5 0100     		.2byte	0x1
 3963 03a7 52       		.byte	0x52
 3964 03a8 00000000 		.4byte	0
 3965 03ac 00000000 		.4byte	0
 3966              	.LLST16:
 3967 03b0 10010000 		.4byte	.LVL35-.Ltext0
 3968 03b4 20010000 		.4byte	.LVL36-.Ltext0
 3969 03b8 0200     		.2byte	0x2
 3970 03ba 30       		.byte	0x30
 3971 03bb 9F       		.byte	0x9f
 3972 03bc 20010000 		.4byte	.LVL36-.Ltext0
 3973 03c0 26010000 		.4byte	.LVL37-.Ltext0
 3974 03c4 0500     		.2byte	0x5
 3975 03c6 37       		.byte	0x37
 3976 03c7 74       		.byte	0x74
 3977 03c8 00       		.sleb128 0
 3978 03c9 24       		.byte	0x24
 3979 03ca 9F       		.byte	0x9f
 3980 03cb 26010000 		.4byte	.LVL37-.Ltext0
 3981 03cf 2A010000 		.4byte	.LVL38-.Ltext0
 3982 03d3 0100     		.2byte	0x1
 3983 03d5 55       		.byte	0x55
 3984 03d6 2A010000 		.4byte	.LVL38-.Ltext0
 3985 03da 2E010000 		.4byte	.LVL39-.Ltext0
 3986 03de 0900     		.2byte	0x9
 3987 03e0 73       		.byte	0x73
 3988 03e1 00       		.sleb128 0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 102


 3989 03e2 08       		.byte	0x8
 3990 03e3 FF       		.byte	0xff
 3991 03e4 1A       		.byte	0x1a
 3992 03e5 74       		.byte	0x74
 3993 03e6 00       		.sleb128 0
 3994 03e7 24       		.byte	0x24
 3995 03e8 9F       		.byte	0x9f
 3996 03e9 36010000 		.4byte	.LVL41-.Ltext0
 3997 03ed 3C010000 		.4byte	.LVL43-.Ltext0
 3998 03f1 0200     		.2byte	0x2
 3999 03f3 30       		.byte	0x30
 4000 03f4 9F       		.byte	0x9f
 4001 03f5 3C010000 		.4byte	.LVL43-.Ltext0
 4002 03f9 42010000 		.4byte	.LVL44-.Ltext0
 4003 03fd 0500     		.2byte	0x5
 4004 03ff 37       		.byte	0x37
 4005 0400 74       		.byte	0x74
 4006 0401 00       		.sleb128 0
 4007 0402 24       		.byte	0x24
 4008 0403 9F       		.byte	0x9f
 4009 0404 42010000 		.4byte	.LVL44-.Ltext0
 4010 0408 46010000 		.4byte	.LVL45-.Ltext0
 4011 040c 0100     		.2byte	0x1
 4012 040e 55       		.byte	0x55
 4013 040f 46010000 		.4byte	.LVL45-.Ltext0
 4014 0413 4A010000 		.4byte	.LVL46-.Ltext0
 4015 0417 0900     		.2byte	0x9
 4016 0419 73       		.byte	0x73
 4017 041a 00       		.sleb128 0
 4018 041b 08       		.byte	0x8
 4019 041c FF       		.byte	0xff
 4020 041d 1A       		.byte	0x1a
 4021 041e 74       		.byte	0x74
 4022 041f 00       		.sleb128 0
 4023 0420 24       		.byte	0x24
 4024 0421 9F       		.byte	0x9f
 4025 0422 4A010000 		.4byte	.LVL46-.Ltext0
 4026 0426 4E010000 		.4byte	.LVL48-.Ltext0
 4027 042a 0F00     		.2byte	0xf
 4028 042c 73       		.byte	0x73
 4029 042d 00       		.sleb128 0
 4030 042e 08       		.byte	0x8
 4031 042f FF       		.byte	0xff
 4032 0430 1A       		.byte	0x1a
 4033 0431 71       		.byte	0x71
 4034 0432 00       		.sleb128 0
 4035 0433 40       		.byte	0x40
 4036 0434 24       		.byte	0x24
 4037 0435 40       		.byte	0x40
 4038 0436 26       		.byte	0x26
 4039 0437 33       		.byte	0x33
 4040 0438 1E       		.byte	0x1e
 4041 0439 24       		.byte	0x24
 4042 043a 9F       		.byte	0x9f
 4043 043b 5A010000 		.4byte	.LVL50-.Ltext0
 4044 043f 60010000 		.4byte	.LVL51-.Ltext0
 4045 0443 0500     		.2byte	0x5
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 103


 4046 0445 4F       		.byte	0x4f
 4047 0446 72       		.byte	0x72
 4048 0447 00       		.sleb128 0
 4049 0448 24       		.byte	0x24
 4050 0449 9F       		.byte	0x9f
 4051 044a 60010000 		.4byte	.LVL51-.Ltext0
 4052 044e 64010000 		.4byte	.LVL52-.Ltext0
 4053 0452 0100     		.2byte	0x1
 4054 0454 53       		.byte	0x53
 4055 0455 64010000 		.4byte	.LVL52-.Ltext0
 4056 0459 68010000 		.4byte	.LVL53-.Ltext0
 4057 045d 0900     		.2byte	0x9
 4058 045f 71       		.byte	0x71
 4059 0460 00       		.sleb128 0
 4060 0461 08       		.byte	0x8
 4061 0462 FF       		.byte	0xff
 4062 0463 1A       		.byte	0x1a
 4063 0464 72       		.byte	0x72
 4064 0465 00       		.sleb128 0
 4065 0466 24       		.byte	0x24
 4066 0467 9F       		.byte	0x9f
 4067 0468 7E010000 		.4byte	.LVL57-.Ltext0
 4068 046c 84010000 		.4byte	.LVL58-.Ltext0
 4069 0470 0500     		.2byte	0x5
 4070 0472 4F       		.byte	0x4f
 4071 0473 72       		.byte	0x72
 4072 0474 00       		.sleb128 0
 4073 0475 24       		.byte	0x24
 4074 0476 9F       		.byte	0x9f
 4075 0477 84010000 		.4byte	.LVL58-.Ltext0
 4076 047b 88010000 		.4byte	.LVL59-.Ltext0
 4077 047f 0100     		.2byte	0x1
 4078 0481 53       		.byte	0x53
 4079 0482 88010000 		.4byte	.LVL59-.Ltext0
 4080 0486 8C010000 		.4byte	.LVL60-.Ltext0
 4081 048a 0900     		.2byte	0x9
 4082 048c 71       		.byte	0x71
 4083 048d 00       		.sleb128 0
 4084 048e 08       		.byte	0x8
 4085 048f FF       		.byte	0xff
 4086 0490 1A       		.byte	0x1a
 4087 0491 72       		.byte	0x72
 4088 0492 00       		.sleb128 0
 4089 0493 24       		.byte	0x24
 4090 0494 9F       		.byte	0x9f
 4091 0495 9C010000 		.4byte	.LVL63-.Ltext0
 4092 0499 A2010000 		.4byte	.LVL64-.Ltext0
 4093 049d 0500     		.2byte	0x5
 4094 049f 4F       		.byte	0x4f
 4095 04a0 72       		.byte	0x72
 4096 04a1 00       		.sleb128 0
 4097 04a2 24       		.byte	0x24
 4098 04a3 9F       		.byte	0x9f
 4099 04a4 A2010000 		.4byte	.LVL64-.Ltext0
 4100 04a8 A6010000 		.4byte	.LVL65-.Ltext0
 4101 04ac 0100     		.2byte	0x1
 4102 04ae 53       		.byte	0x53
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 104


 4103 04af A6010000 		.4byte	.LVL65-.Ltext0
 4104 04b3 AA010000 		.4byte	.LVL66-.Ltext0
 4105 04b7 0900     		.2byte	0x9
 4106 04b9 71       		.byte	0x71
 4107 04ba 00       		.sleb128 0
 4108 04bb 08       		.byte	0x8
 4109 04bc FF       		.byte	0xff
 4110 04bd 1A       		.byte	0x1a
 4111 04be 72       		.byte	0x72
 4112 04bf 00       		.sleb128 0
 4113 04c0 24       		.byte	0x24
 4114 04c1 9F       		.byte	0x9f
 4115 04c2 00000000 		.4byte	0
 4116 04c6 00000000 		.4byte	0
 4117              	.LLST17:
 4118 04ca BC010000 		.4byte	.LVL69-.Ltext0
 4119 04ce BE010000 		.4byte	.LVL70-.Ltext0
 4120 04d2 0100     		.2byte	0x1
 4121 04d4 50       		.byte	0x50
 4122 04d5 BE010000 		.4byte	.LVL70-.Ltext0
 4123 04d9 C4010000 		.4byte	.LFE123-.Ltext0
 4124 04dd 0400     		.2byte	0x4
 4125 04df F3       		.byte	0xf3
 4126 04e0 01       		.uleb128 0x1
 4127 04e1 50       		.byte	0x50
 4128 04e2 9F       		.byte	0x9f
 4129 04e3 00000000 		.4byte	0
 4130 04e7 00000000 		.4byte	0
 4131              	.LLST18:
 4132 04eb BC010000 		.4byte	.LVL69-.Ltext0
 4133 04ef BE010000 		.4byte	.LVL70-.Ltext0
 4134 04f3 0200     		.2byte	0x2
 4135 04f5 30       		.byte	0x30
 4136 04f6 9F       		.byte	0x9f
 4137 04f7 BE010000 		.4byte	.LVL70-.Ltext0
 4138 04fb C2010000 		.4byte	.LVL71-.Ltext0
 4139 04ff 0900     		.2byte	0x9
 4140 0501 70       		.byte	0x70
 4141 0502 00       		.sleb128 0
 4142 0503 40       		.byte	0x40
 4143 0504 42       		.byte	0x42
 4144 0505 24       		.byte	0x24
 4145 0506 1A       		.byte	0x1a
 4146 0507 30       		.byte	0x30
 4147 0508 2E       		.byte	0x2e
 4148 0509 9F       		.byte	0x9f
 4149 050a 00000000 		.4byte	0
 4150 050e 00000000 		.4byte	0
 4151              	.LLST19:
 4152 0512 E8010000 		.4byte	.LVL74-.Ltext0
 4153 0516 EC010000 		.4byte	.LVL76-.Ltext0
 4154 051a 0100     		.2byte	0x1
 4155 051c 51       		.byte	0x51
 4156 051d EC010000 		.4byte	.LVL76-.Ltext0
 4157 0521 F8010000 		.4byte	.LFE126-.Ltext0
 4158 0525 0400     		.2byte	0x4
 4159 0527 F3       		.byte	0xf3
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 105


 4160 0528 01       		.uleb128 0x1
 4161 0529 51       		.byte	0x51
 4162 052a 9F       		.byte	0x9f
 4163 052b 00000000 		.4byte	0
 4164 052f 00000000 		.4byte	0
 4165              	.LLST20:
 4166 0533 E8010000 		.4byte	.LVL74-.Ltext0
 4167 0537 EA010000 		.4byte	.LVL75-.Ltext0
 4168 053b 0200     		.2byte	0x2
 4169 053d 30       		.byte	0x30
 4170 053e 9F       		.byte	0x9f
 4171 053f EA010000 		.4byte	.LVL75-.Ltext0
 4172 0543 F8010000 		.4byte	.LFE126-.Ltext0
 4173 0547 0100     		.2byte	0x1
 4174 0549 53       		.byte	0x53
 4175 054a 00000000 		.4byte	0
 4176 054e 00000000 		.4byte	0
 4177              	.LLST21:
 4178 0552 E8010000 		.4byte	.LVL74-.Ltext0
 4179 0556 F0010000 		.4byte	.LVL77-.Ltext0
 4180 055a 0200     		.2byte	0x2
 4181 055c 30       		.byte	0x30
 4182 055d 9F       		.byte	0x9f
 4183 055e 00000000 		.4byte	0
 4184 0562 00000000 		.4byte	0
 4185              	.LLST22:
 4186 0566 0A020000 		.4byte	.LVL80-.Ltext0
 4187 056a 0C020000 		.4byte	.LVL81-.Ltext0
 4188 056e 0100     		.2byte	0x1
 4189 0570 50       		.byte	0x50
 4190 0571 0C020000 		.4byte	.LVL81-.Ltext0
 4191 0575 10020000 		.4byte	.LFE128-.Ltext0
 4192 0579 0400     		.2byte	0x4
 4193 057b F3       		.byte	0xf3
 4194 057c 01       		.uleb128 0x1
 4195 057d 50       		.byte	0x50
 4196 057e 9F       		.byte	0x9f
 4197 057f 00000000 		.4byte	0
 4198 0583 00000000 		.4byte	0
 4199              	.LLST23:
 4200 0587 58020000 		.4byte	.LFB133-.Ltext0
 4201 058b 5C020000 		.4byte	.LCFI4-.Ltext0
 4202 058f 0200     		.2byte	0x2
 4203 0591 7D       		.byte	0x7d
 4204 0592 00       		.sleb128 0
 4205 0593 5C020000 		.4byte	.LCFI4-.Ltext0
 4206 0597 BC020000 		.4byte	.LFE133-.Ltext0
 4207 059b 0200     		.2byte	0x2
 4208 059d 7D       		.byte	0x7d
 4209 059e 10       		.sleb128 16
 4210 059f 00000000 		.4byte	0
 4211 05a3 00000000 		.4byte	0
 4212              	.LLST24:
 4213 05a7 58020000 		.4byte	.LVL85-.Ltext0
 4214 05ab B4020000 		.4byte	.LVL104-.Ltext0
 4215 05af 0100     		.2byte	0x1
 4216 05b1 51       		.byte	0x51
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 106


 4217 05b2 B4020000 		.4byte	.LVL104-.Ltext0
 4218 05b6 BC020000 		.4byte	.LFE133-.Ltext0
 4219 05ba 0400     		.2byte	0x4
 4220 05bc F3       		.byte	0xf3
 4221 05bd 01       		.uleb128 0x1
 4222 05be 51       		.byte	0x51
 4223 05bf 9F       		.byte	0x9f
 4224 05c0 00000000 		.4byte	0
 4225 05c4 00000000 		.4byte	0
 4226              	.LLST25:
 4227 05c8 58020000 		.4byte	.LVL85-.Ltext0
 4228 05cc A8020000 		.4byte	.LVL101-.Ltext0
 4229 05d0 0100     		.2byte	0x1
 4230 05d2 52       		.byte	0x52
 4231 05d3 A8020000 		.4byte	.LVL101-.Ltext0
 4232 05d7 BC020000 		.4byte	.LFE133-.Ltext0
 4233 05db 0400     		.2byte	0x4
 4234 05dd F3       		.byte	0xf3
 4235 05de 01       		.uleb128 0x1
 4236 05df 52       		.byte	0x52
 4237 05e0 9F       		.byte	0x9f
 4238 05e1 00000000 		.4byte	0
 4239 05e5 00000000 		.4byte	0
 4240              	.LLST26:
 4241 05e9 58020000 		.4byte	.LVL85-.Ltext0
 4242 05ed 76020000 		.4byte	.LVL89-.Ltext0
 4243 05f1 0100     		.2byte	0x1
 4244 05f3 53       		.byte	0x53
 4245 05f4 76020000 		.4byte	.LVL89-.Ltext0
 4246 05f8 7E020000 		.4byte	.LVL91-.Ltext0
 4247 05fc 0400     		.2byte	0x4
 4248 05fe F3       		.byte	0xf3
 4249 05ff 01       		.uleb128 0x1
 4250 0600 53       		.byte	0x53
 4251 0601 9F       		.byte	0x9f
 4252 0602 7E020000 		.4byte	.LVL91-.Ltext0
 4253 0606 96020000 		.4byte	.LVL98-.Ltext0
 4254 060a 0100     		.2byte	0x1
 4255 060c 53       		.byte	0x53
 4256 060d 96020000 		.4byte	.LVL98-.Ltext0
 4257 0611 BC020000 		.4byte	.LFE133-.Ltext0
 4258 0615 0400     		.2byte	0x4
 4259 0617 F3       		.byte	0xf3
 4260 0618 01       		.uleb128 0x1
 4261 0619 53       		.byte	0x53
 4262 061a 9F       		.byte	0x9f
 4263 061b 00000000 		.4byte	0
 4264 061f 00000000 		.4byte	0
 4265              	.LLST27:
 4266 0623 58020000 		.4byte	.LVL85-.Ltext0
 4267 0627 68020000 		.4byte	.LVL86-.Ltext0
 4268 062b 0200     		.2byte	0x2
 4269 062d 30       		.byte	0x30
 4270 062e 9F       		.byte	0x9f
 4271 062f 68020000 		.4byte	.LVL86-.Ltext0
 4272 0633 72020000 		.4byte	.LVL88-.Ltext0
 4273 0637 0100     		.2byte	0x1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 107


 4274 0639 56       		.byte	0x56
 4275 063a 72020000 		.4byte	.LVL88-.Ltext0
 4276 063e 7A020000 		.4byte	.LVL90-.Ltext0
 4277 0642 0100     		.2byte	0x1
 4278 0644 55       		.byte	0x55
 4279 0645 7A020000 		.4byte	.LVL90-.Ltext0
 4280 0649 7E020000 		.4byte	.LVL91-.Ltext0
 4281 064d 0100     		.2byte	0x1
 4282 064f 54       		.byte	0x54
 4283 0650 7E020000 		.4byte	.LVL91-.Ltext0
 4284 0654 80020000 		.4byte	.LVL92-.Ltext0
 4285 0658 0200     		.2byte	0x2
 4286 065a 30       		.byte	0x30
 4287 065b 9F       		.byte	0x9f
 4288 065c 80020000 		.4byte	.LVL92-.Ltext0
 4289 0660 8E020000 		.4byte	.LVL95-.Ltext0
 4290 0664 0100     		.2byte	0x1
 4291 0666 56       		.byte	0x56
 4292 0667 8E020000 		.4byte	.LVL95-.Ltext0
 4293 066b 94020000 		.4byte	.LVL97-.Ltext0
 4294 066f 0100     		.2byte	0x1
 4295 0671 55       		.byte	0x55
 4296 0672 94020000 		.4byte	.LVL97-.Ltext0
 4297 0676 B8020000 		.4byte	.LVL105-.Ltext0
 4298 067a 0100     		.2byte	0x1
 4299 067c 54       		.byte	0x54
 4300 067d B8020000 		.4byte	.LVL105-.Ltext0
 4301 0681 BC020000 		.4byte	.LFE133-.Ltext0
 4302 0685 0100     		.2byte	0x1
 4303 0687 53       		.byte	0x53
 4304 0688 00000000 		.4byte	0
 4305 068c 00000000 		.4byte	0
 4306              	.LLST28:
 4307 0690 58020000 		.4byte	.LVL85-.Ltext0
 4308 0694 68020000 		.4byte	.LVL86-.Ltext0
 4309 0698 0200     		.2byte	0x2
 4310 069a 30       		.byte	0x30
 4311 069b 9F       		.byte	0x9f
 4312 069c 68020000 		.4byte	.LVL86-.Ltext0
 4313 06a0 6E020000 		.4byte	.LVL87-.Ltext0
 4314 06a4 0500     		.2byte	0x5
 4315 06a6 37       		.byte	0x37
 4316 06a7 74       		.byte	0x74
 4317 06a8 00       		.sleb128 0
 4318 06a9 24       		.byte	0x24
 4319 06aa 9F       		.byte	0x9f
 4320 06ab 6E020000 		.4byte	.LVL87-.Ltext0
 4321 06af 72020000 		.4byte	.LVL88-.Ltext0
 4322 06b3 0100     		.2byte	0x1
 4323 06b5 55       		.byte	0x55
 4324 06b6 72020000 		.4byte	.LVL88-.Ltext0
 4325 06ba 76020000 		.4byte	.LVL89-.Ltext0
 4326 06be 0900     		.2byte	0x9
 4327 06c0 73       		.byte	0x73
 4328 06c1 00       		.sleb128 0
 4329 06c2 08       		.byte	0x8
 4330 06c3 FF       		.byte	0xff
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 108


 4331 06c4 1A       		.byte	0x1a
 4332 06c5 74       		.byte	0x74
 4333 06c6 00       		.sleb128 0
 4334 06c7 24       		.byte	0x24
 4335 06c8 9F       		.byte	0x9f
 4336 06c9 7E020000 		.4byte	.LVL91-.Ltext0
 4337 06cd 84020000 		.4byte	.LVL93-.Ltext0
 4338 06d1 0200     		.2byte	0x2
 4339 06d3 30       		.byte	0x30
 4340 06d4 9F       		.byte	0x9f
 4341 06d5 84020000 		.4byte	.LVL93-.Ltext0
 4342 06d9 8A020000 		.4byte	.LVL94-.Ltext0
 4343 06dd 0500     		.2byte	0x5
 4344 06df 37       		.byte	0x37
 4345 06e0 74       		.byte	0x74
 4346 06e1 00       		.sleb128 0
 4347 06e2 24       		.byte	0x24
 4348 06e3 9F       		.byte	0x9f
 4349 06e4 8A020000 		.4byte	.LVL94-.Ltext0
 4350 06e8 8E020000 		.4byte	.LVL95-.Ltext0
 4351 06ec 0100     		.2byte	0x1
 4352 06ee 55       		.byte	0x55
 4353 06ef 8E020000 		.4byte	.LVL95-.Ltext0
 4354 06f3 92020000 		.4byte	.LVL96-.Ltext0
 4355 06f7 0900     		.2byte	0x9
 4356 06f9 73       		.byte	0x73
 4357 06fa 00       		.sleb128 0
 4358 06fb 08       		.byte	0x8
 4359 06fc FF       		.byte	0xff
 4360 06fd 1A       		.byte	0x1a
 4361 06fe 74       		.byte	0x74
 4362 06ff 00       		.sleb128 0
 4363 0700 24       		.byte	0x24
 4364 0701 9F       		.byte	0x9f
 4365 0702 92020000 		.4byte	.LVL96-.Ltext0
 4366 0706 96020000 		.4byte	.LVL98-.Ltext0
 4367 070a 0F00     		.2byte	0xf
 4368 070c 73       		.byte	0x73
 4369 070d 00       		.sleb128 0
 4370 070e 08       		.byte	0x8
 4371 070f FF       		.byte	0xff
 4372 0710 1A       		.byte	0x1a
 4373 0711 71       		.byte	0x71
 4374 0712 00       		.sleb128 0
 4375 0713 40       		.byte	0x40
 4376 0714 24       		.byte	0x24
 4377 0715 40       		.byte	0x40
 4378 0716 26       		.byte	0x26
 4379 0717 33       		.byte	0x33
 4380 0718 1E       		.byte	0x1e
 4381 0719 24       		.byte	0x24
 4382 071a 9F       		.byte	0x9f
 4383 071b A6020000 		.4byte	.LVL100-.Ltext0
 4384 071f AC020000 		.4byte	.LVL102-.Ltext0
 4385 0723 0500     		.2byte	0x5
 4386 0725 4F       		.byte	0x4f
 4387 0726 73       		.byte	0x73
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 109


 4388 0727 00       		.sleb128 0
 4389 0728 24       		.byte	0x24
 4390 0729 9F       		.byte	0x9f
 4391 072a AC020000 		.4byte	.LVL102-.Ltext0
 4392 072e B0020000 		.4byte	.LVL103-.Ltext0
 4393 0732 0100     		.2byte	0x1
 4394 0734 52       		.byte	0x52
 4395 0735 B0020000 		.4byte	.LVL103-.Ltext0
 4396 0739 B4020000 		.4byte	.LVL104-.Ltext0
 4397 073d 0900     		.2byte	0x9
 4398 073f 71       		.byte	0x71
 4399 0740 00       		.sleb128 0
 4400 0741 08       		.byte	0x8
 4401 0742 FF       		.byte	0xff
 4402 0743 1A       		.byte	0x1a
 4403 0744 73       		.byte	0x73
 4404 0745 00       		.sleb128 0
 4405 0746 24       		.byte	0x24
 4406 0747 9F       		.byte	0x9f
 4407 0748 00000000 		.4byte	0
 4408 074c 00000000 		.4byte	0
 4409              	.LLST29:
 4410 0750 58020000 		.4byte	.LVL85-.Ltext0
 4411 0754 98020000 		.4byte	.LVL99-.Ltext0
 4412 0758 0200     		.2byte	0x2
 4413 075a 30       		.byte	0x30
 4414 075b 9F       		.byte	0x9f
 4415 075c 98020000 		.4byte	.LVL99-.Ltext0
 4416 0760 B0020000 		.4byte	.LVL103-.Ltext0
 4417 0764 0900     		.2byte	0x9
 4418 0766 74       		.byte	0x74
 4419 0767 00       		.sleb128 0
 4420 0768 48       		.byte	0x48
 4421 0769 41       		.byte	0x41
 4422 076a 24       		.byte	0x24
 4423 076b 1A       		.byte	0x1a
 4424 076c 44       		.byte	0x44
 4425 076d 25       		.byte	0x25
 4426 076e 9F       		.byte	0x9f
 4427 076f 00000000 		.4byte	0
 4428 0773 00000000 		.4byte	0
 4429              	.LLST30:
 4430 0777 BC020000 		.4byte	.LVL106-.Ltext0
 4431 077b C0020000 		.4byte	.LVL108-.Ltext0
 4432 077f 0100     		.2byte	0x1
 4433 0781 51       		.byte	0x51
 4434 0782 C0020000 		.4byte	.LVL108-.Ltext0
 4435 0786 CC020000 		.4byte	.LFE134-.Ltext0
 4436 078a 0400     		.2byte	0x4
 4437 078c F3       		.byte	0xf3
 4438 078d 01       		.uleb128 0x1
 4439 078e 51       		.byte	0x51
 4440 078f 9F       		.byte	0x9f
 4441 0790 00000000 		.4byte	0
 4442 0794 00000000 		.4byte	0
 4443              	.LLST31:
 4444 0798 BC020000 		.4byte	.LVL106-.Ltext0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 110


 4445 079c BE020000 		.4byte	.LVL107-.Ltext0
 4446 07a0 0200     		.2byte	0x2
 4447 07a2 30       		.byte	0x30
 4448 07a3 9F       		.byte	0x9f
 4449 07a4 BE020000 		.4byte	.LVL107-.Ltext0
 4450 07a8 CC020000 		.4byte	.LFE134-.Ltext0
 4451 07ac 0100     		.2byte	0x1
 4452 07ae 53       		.byte	0x53
 4453 07af 00000000 		.4byte	0
 4454 07b3 00000000 		.4byte	0
 4455              	.LLST32:
 4456 07b7 BC020000 		.4byte	.LVL106-.Ltext0
 4457 07bb C4020000 		.4byte	.LVL109-.Ltext0
 4458 07bf 0200     		.2byte	0x2
 4459 07c1 30       		.byte	0x30
 4460 07c2 9F       		.byte	0x9f
 4461 07c3 00000000 		.4byte	0
 4462 07c7 00000000 		.4byte	0
 4463              	.LLST33:
 4464 07cb CC020000 		.4byte	.LFB135-.Ltext0
 4465 07cf CE020000 		.4byte	.LCFI5-.Ltext0
 4466 07d3 0200     		.2byte	0x2
 4467 07d5 7D       		.byte	0x7d
 4468 07d6 00       		.sleb128 0
 4469 07d7 CE020000 		.4byte	.LCFI5-.Ltext0
 4470 07db E2020000 		.4byte	.LFE135-.Ltext0
 4471 07df 0200     		.2byte	0x2
 4472 07e1 7D       		.byte	0x7d
 4473 07e2 08       		.sleb128 8
 4474 07e3 00000000 		.4byte	0
 4475 07e7 00000000 		.4byte	0
 4476              	.LLST34:
 4477 07eb CC020000 		.4byte	.LVL111-.Ltext0
 4478 07ef D8020000 		.4byte	.LVL113-.Ltext0
 4479 07f3 0100     		.2byte	0x1
 4480 07f5 51       		.byte	0x51
 4481 07f6 D8020000 		.4byte	.LVL113-.Ltext0
 4482 07fa E2020000 		.4byte	.LFE135-.Ltext0
 4483 07fe 0400     		.2byte	0x4
 4484 0800 F3       		.byte	0xf3
 4485 0801 01       		.uleb128 0x1
 4486 0802 51       		.byte	0x51
 4487 0803 9F       		.byte	0x9f
 4488 0804 00000000 		.4byte	0
 4489 0808 00000000 		.4byte	0
 4490              	.LLST35:
 4491 080c D2020000 		.4byte	.LVL112-.Ltext0
 4492 0810 D8020000 		.4byte	.LVL113-.Ltext0
 4493 0814 0200     		.2byte	0x2
 4494 0816 91       		.byte	0x91
 4495 0817 7C       		.sleb128 -4
 4496 0818 DA020000 		.4byte	.LVL114-.Ltext0
 4497 081c E2020000 		.4byte	.LFE135-.Ltext0
 4498 0820 0100     		.2byte	0x1
 4499 0822 51       		.byte	0x51
 4500 0823 00000000 		.4byte	0
 4501 0827 00000000 		.4byte	0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 111


 4502              	.LLST36:
 4503 082b E2020000 		.4byte	.LVL115-.Ltext0
 4504 082f EA020000 		.4byte	.LVL118-.Ltext0
 4505 0833 0100     		.2byte	0x1
 4506 0835 51       		.byte	0x51
 4507 0836 EA020000 		.4byte	.LVL118-.Ltext0
 4508 083a EE020000 		.4byte	.LFE136-.Ltext0
 4509 083e 0400     		.2byte	0x4
 4510 0840 F3       		.byte	0xf3
 4511 0841 01       		.uleb128 0x1
 4512 0842 51       		.byte	0x51
 4513 0843 9F       		.byte	0x9f
 4514 0844 00000000 		.4byte	0
 4515 0848 00000000 		.4byte	0
 4516              	.LLST37:
 4517 084c E2020000 		.4byte	.LVL115-.Ltext0
 4518 0850 E4020000 		.4byte	.LVL116-.Ltext0
 4519 0854 0200     		.2byte	0x2
 4520 0856 30       		.byte	0x30
 4521 0857 9F       		.byte	0x9f
 4522 0858 E4020000 		.4byte	.LVL116-.Ltext0
 4523 085c EA020000 		.4byte	.LVL118-.Ltext0
 4524 0860 0100     		.2byte	0x1
 4525 0862 53       		.byte	0x53
 4526 0863 EA020000 		.4byte	.LVL118-.Ltext0
 4527 0867 EE020000 		.4byte	.LFE136-.Ltext0
 4528 086b 0100     		.2byte	0x1
 4529 086d 51       		.byte	0x51
 4530 086e 00000000 		.4byte	0
 4531 0872 00000000 		.4byte	0
 4532              	.LLST38:
 4533 0876 EE020000 		.4byte	.LVL119-.Ltext0
 4534 087a F6020000 		.4byte	.LVL122-.Ltext0
 4535 087e 0100     		.2byte	0x1
 4536 0880 51       		.byte	0x51
 4537 0881 F6020000 		.4byte	.LVL122-.Ltext0
 4538 0885 FA020000 		.4byte	.LFE137-.Ltext0
 4539 0889 0400     		.2byte	0x4
 4540 088b F3       		.byte	0xf3
 4541 088c 01       		.uleb128 0x1
 4542 088d 51       		.byte	0x51
 4543 088e 9F       		.byte	0x9f
 4544 088f 00000000 		.4byte	0
 4545 0893 00000000 		.4byte	0
 4546              	.LLST39:
 4547 0897 EE020000 		.4byte	.LVL119-.Ltext0
 4548 089b F0020000 		.4byte	.LVL120-.Ltext0
 4549 089f 0200     		.2byte	0x2
 4550 08a1 30       		.byte	0x30
 4551 08a2 9F       		.byte	0x9f
 4552 08a3 F0020000 		.4byte	.LVL120-.Ltext0
 4553 08a7 F6020000 		.4byte	.LVL122-.Ltext0
 4554 08ab 0100     		.2byte	0x1
 4555 08ad 53       		.byte	0x53
 4556 08ae F6020000 		.4byte	.LVL122-.Ltext0
 4557 08b2 FA020000 		.4byte	.LFE137-.Ltext0
 4558 08b6 0100     		.2byte	0x1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 112


 4559 08b8 51       		.byte	0x51
 4560 08b9 00000000 		.4byte	0
 4561 08bd 00000000 		.4byte	0
 4562              	.LLST40:
 4563 08c1 04030000 		.4byte	.LVL124-.Ltext0
 4564 08c5 06030000 		.4byte	.LVL125-.Ltext0
 4565 08c9 0100     		.2byte	0x1
 4566 08cb 50       		.byte	0x50
 4567 08cc 06030000 		.4byte	.LVL125-.Ltext0
 4568 08d0 0C030000 		.4byte	.LFE139-.Ltext0
 4569 08d4 0400     		.2byte	0x4
 4570 08d6 F3       		.byte	0xf3
 4571 08d7 01       		.uleb128 0x1
 4572 08d8 50       		.byte	0x50
 4573 08d9 9F       		.byte	0x9f
 4574 08da 00000000 		.4byte	0
 4575 08de 00000000 		.4byte	0
 4576              	.LLST41:
 4577 08e2 04030000 		.4byte	.LVL124-.Ltext0
 4578 08e6 06030000 		.4byte	.LVL125-.Ltext0
 4579 08ea 0200     		.2byte	0x2
 4580 08ec 30       		.byte	0x30
 4581 08ed 9F       		.byte	0x9f
 4582 08ee 06030000 		.4byte	.LVL125-.Ltext0
 4583 08f2 0A030000 		.4byte	.LVL126-.Ltext0
 4584 08f6 0900     		.2byte	0x9
 4585 08f8 70       		.byte	0x70
 4586 08f9 00       		.sleb128 0
 4587 08fa 40       		.byte	0x40
 4588 08fb 42       		.byte	0x42
 4589 08fc 24       		.byte	0x24
 4590 08fd 1A       		.byte	0x1a
 4591 08fe 30       		.byte	0x30
 4592 08ff 2E       		.byte	0x2e
 4593 0900 9F       		.byte	0x9f
 4594 0901 00000000 		.4byte	0
 4595 0905 00000000 		.4byte	0
 4596              	.LLST42:
 4597 0909 30030000 		.4byte	.LFB142-.Ltext0
 4598 090d 32030000 		.4byte	.LCFI6-.Ltext0
 4599 0911 0200     		.2byte	0x2
 4600 0913 7D       		.byte	0x7d
 4601 0914 00       		.sleb128 0
 4602 0915 32030000 		.4byte	.LCFI6-.Ltext0
 4603 0919 4A030000 		.4byte	.LFE142-.Ltext0
 4604 091d 0200     		.2byte	0x2
 4605 091f 7D       		.byte	0x7d
 4606 0920 08       		.sleb128 8
 4607 0921 00000000 		.4byte	0
 4608 0925 00000000 		.4byte	0
 4609              	.LLST43:
 4610 0929 30030000 		.4byte	.LVL129-.Ltext0
 4611 092d 44030000 		.4byte	.LVL133-.Ltext0
 4612 0931 0100     		.2byte	0x1
 4613 0933 50       		.byte	0x50
 4614 0934 44030000 		.4byte	.LVL133-.Ltext0
 4615 0938 4A030000 		.4byte	.LFE142-.Ltext0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 113


 4616 093c 0200     		.2byte	0x2
 4617 093e 91       		.byte	0x91
 4618 093f 7C       		.sleb128 -4
 4619 0940 00000000 		.4byte	0
 4620 0944 00000000 		.4byte	0
 4621              	.LLST44:
 4622 0948 30030000 		.4byte	.LVL129-.Ltext0
 4623 094c 3E030000 		.4byte	.LVL131-.Ltext0
 4624 0950 0100     		.2byte	0x1
 4625 0952 51       		.byte	0x51
 4626 0953 3E030000 		.4byte	.LVL131-.Ltext0
 4627 0957 4A030000 		.4byte	.LFE142-.Ltext0
 4628 095b 0400     		.2byte	0x4
 4629 095d F3       		.byte	0xf3
 4630 095e 01       		.uleb128 0x1
 4631 095f 51       		.byte	0x51
 4632 0960 9F       		.byte	0x9f
 4633 0961 00000000 		.4byte	0
 4634 0965 00000000 		.4byte	0
 4635              	.LLST45:
 4636 0969 36030000 		.4byte	.LVL130-.Ltext0
 4637 096d 3E030000 		.4byte	.LVL131-.Ltext0
 4638 0971 0200     		.2byte	0x2
 4639 0973 91       		.byte	0x91
 4640 0974 7C       		.sleb128 -4
 4641 0975 40030000 		.4byte	.LVL132-.Ltext0
 4642 0979 4A030000 		.4byte	.LFE142-.Ltext0
 4643 097d 0100     		.2byte	0x1
 4644 097f 51       		.byte	0x51
 4645 0980 00000000 		.4byte	0
 4646 0984 00000000 		.4byte	0
 4647              	.LLST46:
 4648 0988 4A030000 		.4byte	.LVL134-.Ltext0
 4649 098c 4E030000 		.4byte	.LVL135-.Ltext0
 4650 0990 0100     		.2byte	0x1
 4651 0992 51       		.byte	0x51
 4652 0993 4E030000 		.4byte	.LVL135-.Ltext0
 4653 0997 62030000 		.4byte	.LFE143-.Ltext0
 4654 099b 0400     		.2byte	0x4
 4655 099d F3       		.byte	0xf3
 4656 099e 01       		.uleb128 0x1
 4657 099f 51       		.byte	0x51
 4658 09a0 9F       		.byte	0x9f
 4659 09a1 00000000 		.4byte	0
 4660 09a5 00000000 		.4byte	0
 4661              	.LLST47:
 4662 09a9 4A030000 		.4byte	.LVL134-.Ltext0
 4663 09ad 4E030000 		.4byte	.LVL135-.Ltext0
 4664 09b1 0600     		.2byte	0x6
 4665 09b3 71       		.byte	0x71
 4666 09b4 00       		.sleb128 0
 4667 09b5 08       		.byte	0x8
 4668 09b6 FF       		.byte	0xff
 4669 09b7 1A       		.byte	0x1a
 4670 09b8 9F       		.byte	0x9f
 4671 09b9 4E030000 		.4byte	.LVL135-.Ltext0
 4672 09bd 58030000 		.4byte	.LVL137-.Ltext0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 114


 4673 09c1 0100     		.2byte	0x1
 4674 09c3 51       		.byte	0x51
 4675 09c4 58030000 		.4byte	.LVL137-.Ltext0
 4676 09c8 5A030000 		.4byte	.LVL138-.Ltext0
 4677 09cc 0900     		.2byte	0x9
 4678 09ce 31       		.byte	0x31
 4679 09cf F3       		.byte	0xf3
 4680 09d0 01       		.uleb128 0x1
 4681 09d1 51       		.byte	0x51
 4682 09d2 08       		.byte	0x8
 4683 09d3 FF       		.byte	0xff
 4684 09d4 1A       		.byte	0x1a
 4685 09d5 24       		.byte	0x24
 4686 09d6 9F       		.byte	0x9f
 4687 09d7 5A030000 		.4byte	.LVL138-.Ltext0
 4688 09db 5E030000 		.4byte	.LVL139-.Ltext0
 4689 09df 0100     		.2byte	0x1
 4690 09e1 51       		.byte	0x51
 4691 09e2 5E030000 		.4byte	.LVL139-.Ltext0
 4692 09e6 62030000 		.4byte	.LFE143-.Ltext0
 4693 09ea 0900     		.2byte	0x9
 4694 09ec 31       		.byte	0x31
 4695 09ed F3       		.byte	0xf3
 4696 09ee 01       		.uleb128 0x1
 4697 09ef 51       		.byte	0x51
 4698 09f0 08       		.byte	0x8
 4699 09f1 FF       		.byte	0xff
 4700 09f2 1A       		.byte	0x1a
 4701 09f3 24       		.byte	0x24
 4702 09f4 9F       		.byte	0x9f
 4703 09f5 00000000 		.4byte	0
 4704 09f9 00000000 		.4byte	0
 4705              	.LLST48:
 4706 09fd 62030000 		.4byte	.LVL140-.Ltext0
 4707 0a01 6C030000 		.4byte	.LVL142-.Ltext0
 4708 0a05 0100     		.2byte	0x1
 4709 0a07 50       		.byte	0x50
 4710 0a08 6C030000 		.4byte	.LVL142-.Ltext0
 4711 0a0c 6E030000 		.4byte	.LFE144-.Ltext0
 4712 0a10 0400     		.2byte	0x4
 4713 0a12 F3       		.byte	0xf3
 4714 0a13 01       		.uleb128 0x1
 4715 0a14 50       		.byte	0x50
 4716 0a15 9F       		.byte	0x9f
 4717 0a16 00000000 		.4byte	0
 4718 0a1a 00000000 		.4byte	0
 4719              	.LLST49:
 4720 0a1e 62030000 		.4byte	.LVL140-.Ltext0
 4721 0a22 64030000 		.4byte	.LVL141-.Ltext0
 4722 0a26 0200     		.2byte	0x2
 4723 0a28 30       		.byte	0x30
 4724 0a29 9F       		.byte	0x9f
 4725 0a2a 64030000 		.4byte	.LVL141-.Ltext0
 4726 0a2e 6E030000 		.4byte	.LFE144-.Ltext0
 4727 0a32 0B00     		.2byte	0xb
 4728 0a34 71       		.byte	0x71
 4729 0a35 00       		.sleb128 0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 115


 4730 0a36 08       		.byte	0x8
 4731 0a37 FF       		.byte	0xff
 4732 0a38 1A       		.byte	0x1a
 4733 0a39 73       		.byte	0x73
 4734 0a3a 00       		.sleb128 0
 4735 0a3b 1A       		.byte	0x1a
 4736 0a3c 30       		.byte	0x30
 4737 0a3d 2E       		.byte	0x2e
 4738 0a3e 9F       		.byte	0x9f
 4739 0a3f 00000000 		.4byte	0
 4740 0a43 00000000 		.4byte	0
 4741              	.LLST50:
 4742 0a47 6E030000 		.4byte	.LVL143-.Ltext0
 4743 0a4b 70030000 		.4byte	.LVL144-.Ltext0
 4744 0a4f 0100     		.2byte	0x1
 4745 0a51 51       		.byte	0x51
 4746 0a52 70030000 		.4byte	.LVL144-.Ltext0
 4747 0a56 74030000 		.4byte	.LFE145-.Ltext0
 4748 0a5a 0400     		.2byte	0x4
 4749 0a5c F3       		.byte	0xf3
 4750 0a5d 01       		.uleb128 0x1
 4751 0a5e 51       		.byte	0x51
 4752 0a5f 9F       		.byte	0x9f
 4753 0a60 00000000 		.4byte	0
 4754 0a64 00000000 		.4byte	0
 4755              	.LLST51:
 4756 0a68 74030000 		.4byte	.LVL145-.Ltext0
 4757 0a6c 78030000 		.4byte	.LVL147-.Ltext0
 4758 0a70 0100     		.2byte	0x1
 4759 0a72 50       		.byte	0x50
 4760 0a73 78030000 		.4byte	.LVL147-.Ltext0
 4761 0a77 90030000 		.4byte	.LFE146-.Ltext0
 4762 0a7b 0400     		.2byte	0x4
 4763 0a7d F3       		.byte	0xf3
 4764 0a7e 01       		.uleb128 0x1
 4765 0a7f 50       		.byte	0x50
 4766 0a80 9F       		.byte	0x9f
 4767 0a81 00000000 		.4byte	0
 4768 0a85 00000000 		.4byte	0
 4769              	.LLST52:
 4770 0a89 74030000 		.4byte	.LVL145-.Ltext0
 4771 0a8d 82030000 		.4byte	.LVL148-.Ltext0
 4772 0a91 0100     		.2byte	0x1
 4773 0a93 51       		.byte	0x51
 4774 0a94 82030000 		.4byte	.LVL148-.Ltext0
 4775 0a98 90030000 		.4byte	.LFE146-.Ltext0
 4776 0a9c 0400     		.2byte	0x4
 4777 0a9e F3       		.byte	0xf3
 4778 0a9f 01       		.uleb128 0x1
 4779 0aa0 51       		.byte	0x51
 4780 0aa1 9F       		.byte	0x9f
 4781 0aa2 00000000 		.4byte	0
 4782 0aa6 00000000 		.4byte	0
 4783              	.LLST53:
 4784 0aaa 74030000 		.4byte	.LVL145-.Ltext0
 4785 0aae 8E030000 		.4byte	.LVL149-.Ltext0
 4786 0ab2 0200     		.2byte	0x2
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 116


 4787 0ab4 30       		.byte	0x30
 4788 0ab5 9F       		.byte	0x9f
 4789 0ab6 8E030000 		.4byte	.LVL149-.Ltext0
 4790 0aba 90030000 		.4byte	.LFE146-.Ltext0
 4791 0abe 0100     		.2byte	0x1
 4792 0ac0 50       		.byte	0x50
 4793 0ac1 00000000 		.4byte	0
 4794 0ac5 00000000 		.4byte	0
 4795              	.LLST54:
 4796 0ac9 74030000 		.4byte	.LVL145-.Ltext0
 4797 0acd 82030000 		.4byte	.LVL148-.Ltext0
 4798 0ad1 0900     		.2byte	0x9
 4799 0ad3 71       		.byte	0x71
 4800 0ad4 00       		.sleb128 0
 4801 0ad5 38       		.byte	0x38
 4802 0ad6 25       		.byte	0x25
 4803 0ad7 0A       		.byte	0xa
 4804 0ad8 FFFF     		.2byte	0xffff
 4805 0ada 1A       		.byte	0x1a
 4806 0adb 9F       		.byte	0x9f
 4807 0adc 00000000 		.4byte	0
 4808 0ae0 00000000 		.4byte	0
 4809              	.LLST55:
 4810 0ae4 74030000 		.4byte	.LVL145-.Ltext0
 4811 0ae8 76030000 		.4byte	.LVL146-.Ltext0
 4812 0aec 0200     		.2byte	0x2
 4813 0aee 30       		.byte	0x30
 4814 0aef 9F       		.byte	0x9f
 4815 0af0 76030000 		.4byte	.LVL146-.Ltext0
 4816 0af4 82030000 		.4byte	.LVL148-.Ltext0
 4817 0af8 0B00     		.2byte	0xb
 4818 0afa 31       		.byte	0x31
 4819 0afb 71       		.byte	0x71
 4820 0afc 00       		.sleb128 0
 4821 0afd 08       		.byte	0x8
 4822 0afe FF       		.byte	0xff
 4823 0aff 1A       		.byte	0x1a
 4824 0b00 24       		.byte	0x24
 4825 0b01 73       		.byte	0x73
 4826 0b02 00       		.sleb128 0
 4827 0b03 1A       		.byte	0x1a
 4828 0b04 9F       		.byte	0x9f
 4829 0b05 00000000 		.4byte	0
 4830 0b09 00000000 		.4byte	0
 4831              	.LLST56:
 4832 0b0d 90030000 		.4byte	.LVL150-.Ltext0
 4833 0b11 94030000 		.4byte	.LVL151-.Ltext0
 4834 0b15 0100     		.2byte	0x1
 4835 0b17 51       		.byte	0x51
 4836 0b18 94030000 		.4byte	.LVL151-.Ltext0
 4837 0b1c 98030000 		.4byte	.LFE147-.Ltext0
 4838 0b20 0400     		.2byte	0x4
 4839 0b22 F3       		.byte	0xf3
 4840 0b23 01       		.uleb128 0x1
 4841 0b24 51       		.byte	0x51
 4842 0b25 9F       		.byte	0x9f
 4843 0b26 00000000 		.4byte	0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 117


 4844 0b2a 00000000 		.4byte	0
 4845              	.LLST57:
 4846 0b2e 90030000 		.4byte	.LVL150-.Ltext0
 4847 0b32 94030000 		.4byte	.LVL151-.Ltext0
 4848 0b36 0500     		.2byte	0x5
 4849 0b38 71       		.byte	0x71
 4850 0b39 00       		.sleb128 0
 4851 0b3a 38       		.byte	0x38
 4852 0b3b 25       		.byte	0x25
 4853 0b3c 9F       		.byte	0x9f
 4854 0b3d 94030000 		.4byte	.LVL151-.Ltext0
 4855 0b41 98030000 		.4byte	.LFE147-.Ltext0
 4856 0b45 0600     		.2byte	0x6
 4857 0b47 F3       		.byte	0xf3
 4858 0b48 01       		.uleb128 0x1
 4859 0b49 51       		.byte	0x51
 4860 0b4a 38       		.byte	0x38
 4861 0b4b 25       		.byte	0x25
 4862 0b4c 9F       		.byte	0x9f
 4863 0b4d 00000000 		.4byte	0
 4864 0b51 00000000 		.4byte	0
 4865              		.section	.debug_aranges,"",%progbits
 4866 0000 1C000000 		.4byte	0x1c
 4867 0004 0200     		.2byte	0x2
 4868 0006 00000000 		.4byte	.Ldebug_info0
 4869 000a 04       		.byte	0x4
 4870 000b 00       		.byte	0
 4871 000c 0000     		.2byte	0
 4872 000e 0000     		.2byte	0
 4873 0010 00000000 		.4byte	.Ltext0
 4874 0014 98030000 		.4byte	.Letext0-.Ltext0
 4875 0018 00000000 		.4byte	0
 4876 001c 00000000 		.4byte	0
 4877              		.section	.debug_line,"",%progbits
 4878              	.Ldebug_line0:
 4879 0000 93020000 		.section	.debug_str,"MS",%progbits,1
 4879      0200FB00 
 4879      00000201 
 4879      FB0E0D00 
 4879      01010101 
 4880              	.LASF60:
 4881 0000 4E657753 		.ascii	"NewState\000"
 4881      74617465 
 4881      00
 4882              	.LASF103:
 4883 0009 4144435F 		.ascii	"ADC_IT\000"
 4883      495400
 4884              	.LASF40:
 4885 0010 4144435F 		.ascii	"ADC_ExternalTrigConv\000"
 4885      45787465 
 4885      726E616C 
 4885      54726967 
 4885      436F6E76 
 4886              	.LASF15:
 4887 0025 466C6167 		.ascii	"FlagStatus\000"
 4887      53746174 
 4887      757300
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 118


 4888              	.LASF48:
 4889 0030 4144435F 		.ascii	"ADC_CommonInitTypeDef\000"
 4889      436F6D6D 
 4889      6F6E496E 
 4889      69745479 
 4889      70654465 
 4890              	.LASF21:
 4891 0046 534D5052 		.ascii	"SMPR2\000"
 4891      3200
 4892              	.LASF51:
 4893 004c 41444378 		.ascii	"ADCx\000"
 4893      00
 4894              	.LASF50:
 4895 0051 4144435F 		.ascii	"ADC_Init\000"
 4895      496E6974 
 4895      00
 4896              	.LASF17:
 4897 005a 44495341 		.ascii	"DISABLE\000"
 4897      424C4500 
 4898              	.LASF11:
 4899 0062 6C6F6E67 		.ascii	"long long unsigned int\000"
 4899      206C6F6E 
 4899      6720756E 
 4899      7369676E 
 4899      65642069 
 4900              	.LASF22:
 4901 0079 4A4F4652 		.ascii	"JOFR1\000"
 4901      3100
 4902              	.LASF42:
 4903 007f 4144435F 		.ascii	"ADC_NbrOfConversion\000"
 4903      4E62724F 
 4903      66436F6E 
 4903      76657273 
 4903      696F6E00 
 4904              	.LASF115:
 4905 0093 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4905      52784275 
 4905      66666572 
 4905      00
 4906              	.LASF29:
 4907 00a0 4A535152 		.ascii	"JSQR\000"
 4907      00
 4908              	.LASF10:
 4909 00a5 6C6F6E67 		.ascii	"long long int\000"
 4909      206C6F6E 
 4909      6720696E 
 4909      7400
 4910              	.LASF0:
 4911 00b3 7369676E 		.ascii	"signed char\000"
 4911      65642063 
 4911      68617200 
 4912              	.LASF64:
 4913 00bf 4144435F 		.ascii	"ADC_AnalogWatchdogThresholdsConfig\000"
 4913      416E616C 
 4913      6F675761 
 4913      74636864 
 4913      6F675468 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 119


 4914              	.LASF113:
 4915 00e2 443A5C4E 		.ascii	"D:\\NiVek\\Firmware\\NiVek32\000"
 4915      6956656B 
 4915      5C466972 
 4915      6D776172 
 4915      655C4E69 
 4916              	.LASF96:
 4917 00fc 4144435F 		.ascii	"ADC_ExternalTrigInjecConvEdge\000"
 4917      45787465 
 4917      726E616C 
 4917      54726967 
 4917      496E6A65 
 4918              	.LASF86:
 4919 011a 4144435F 		.ascii	"ADC_InjectedChannelConfig\000"
 4919      496E6A65 
 4919      63746564 
 4919      4368616E 
 4919      6E656C43 
 4920              	.LASF63:
 4921 0134 746D7072 		.ascii	"tmpreg\000"
 4921      656700
 4922              	.LASF82:
 4923 013b 4144435F 		.ascii	"ADC_GetConversionValue\000"
 4923      47657443 
 4923      6F6E7665 
 4923      7273696F 
 4923      6E56616C 
 4924              	.LASF59:
 4925 0152 4144435F 		.ascii	"ADC_Cmd\000"
 4925      436D6400 
 4926              	.LASF38:
 4927 015a 4144435F 		.ascii	"ADC_ContinuousConvMode\000"
 4927      436F6E74 
 4927      696E756F 
 4927      7573436F 
 4927      6E764D6F 
 4928              	.LASF7:
 4929 0171 6C6F6E67 		.ascii	"long int\000"
 4929      20696E74 
 4929      00
 4930              	.LASF106:
 4931 017a 4144435F 		.ascii	"ADC_FLAG\000"
 4931      464C4147 
 4931      00
 4932              	.LASF84:
 4933 0183 4144435F 		.ascii	"ADC_DMARequestAfterLastTransferCmd\000"
 4933      444D4152 
 4933      65717565 
 4933      73744166 
 4933      7465724C 
 4934              	.LASF18:
 4935 01a6 454E4142 		.ascii	"ENABLE\000"
 4935      4C4500
 4936              	.LASF4:
 4937 01ad 75696E74 		.ascii	"uint16_t\000"
 4937      31365F74 
 4937      00
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 120


 4938              	.LASF34:
 4939 01b6 4144435F 		.ascii	"ADC_TypeDef\000"
 4939      54797065 
 4939      44656600 
 4940              	.LASF52:
 4941 01c2 4144435F 		.ascii	"ADC_InitStruct\000"
 4941      496E6974 
 4941      53747275 
 4941      637400
 4942              	.LASF78:
 4943 01d1 4144435F 		.ascii	"ADC_DiscModeChannelCountConfig\000"
 4943      44697363 
 4943      4D6F6465 
 4943      4368616E 
 4943      6E656C43 
 4944              	.LASF55:
 4945 01f0 4144435F 		.ascii	"ADC_StructInit\000"
 4945      53747275 
 4945      6374496E 
 4945      697400
 4946              	.LASF67:
 4947 01ff 4144435F 		.ascii	"ADC_AnalogWatchdogSingleChannelConfig\000"
 4947      416E616C 
 4947      6F675761 
 4947      74636864 
 4947      6F675369 
 4948              	.LASF66:
 4949 0225 4C6F7754 		.ascii	"LowThreshold\000"
 4949      68726573 
 4949      686F6C64 
 4949      00
 4950              	.LASF19:
 4951 0232 46756E63 		.ascii	"FunctionalState\000"
 4951      74696F6E 
 4951      616C5374 
 4951      61746500 
 4952              	.LASF16:
 4953 0242 49545374 		.ascii	"ITStatus\000"
 4953      61747573 
 4953      00
 4954              	.LASF100:
 4955 024b 4144435F 		.ascii	"ADC_InjectedDiscModeCmd\000"
 4955      496E6A65 
 4955      63746564 
 4955      44697363 
 4955      4D6F6465 
 4956              	.LASF12:
 4957 0263 756E7369 		.ascii	"unsigned int\000"
 4957      676E6564 
 4957      20696E74 
 4957      00
 4958              	.LASF102:
 4959 0270 4144435F 		.ascii	"ADC_ITConfig\000"
 4959      4954436F 
 4959      6E666967 
 4959      00
 4960              	.LASF9:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 121


 4961 027d 6C6F6E67 		.ascii	"long unsigned int\000"
 4961      20756E73 
 4961      69676E65 
 4961      6420696E 
 4961      7400
 4962              	.LASF69:
 4963 028f 4144435F 		.ascii	"ADC_TempSensorVrefintCmd\000"
 4963      54656D70 
 4963      53656E73 
 4963      6F725672 
 4963      6566696E 
 4964              	.LASF46:
 4965 02a8 4144435F 		.ascii	"ADC_DMAAccessMode\000"
 4965      444D4141 
 4965      63636573 
 4965      734D6F64 
 4965      6500
 4966              	.LASF97:
 4967 02ba 4144435F 		.ascii	"ADC_SoftwareStartInjectedConv\000"
 4967      536F6674 
 4967      77617265 
 4967      53746172 
 4967      74496E6A 
 4968              	.LASF5:
 4969 02d8 73686F72 		.ascii	"short unsigned int\000"
 4969      7420756E 
 4969      7369676E 
 4969      65642069 
 4969      6E7400
 4970              	.LASF58:
 4971 02eb 4144435F 		.ascii	"ADC_CommonStructInit\000"
 4971      436F6D6D 
 4971      6F6E5374 
 4971      72756374 
 4971      496E6974 
 4972              	.LASF71:
 4973 0300 4144435F 		.ascii	"ADC_RegularChannelConfig\000"
 4973      52656775 
 4973      6C617243 
 4973      68616E6E 
 4973      656C436F 
 4974              	.LASF65:
 4975 0319 48696768 		.ascii	"HighThreshold\000"
 4975      54687265 
 4975      73686F6C 
 4975      6400
 4976              	.LASF53:
 4977 0327 746D7072 		.ascii	"tmpreg1\000"
 4977      65673100 
 4978              	.LASF54:
 4979 032f 746D7072 		.ascii	"tmpreg2\000"
 4979      65673200 
 4980              	.LASF87:
 4981 0337 746D7072 		.ascii	"tmpreg3\000"
 4981      65673300 
 4982              	.LASF49:
 4983 033f 4144435F 		.ascii	"ADC_DeInit\000"
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 122


 4983      4465496E 
 4983      697400
 4984              	.LASF77:
 4985 034a 4144435F 		.ascii	"ADC_ContinuousModeCmd\000"
 4985      436F6E74 
 4985      696E756F 
 4985      75734D6F 
 4985      6465436D 
 4986              	.LASF107:
 4987 0360 4144435F 		.ascii	"ADC_ClearFlag\000"
 4987      436C6561 
 4987      72466C61 
 4987      6700
 4988              	.LASF23:
 4989 036e 4A4F4652 		.ascii	"JOFR2\000"
 4989      3200
 4990              	.LASF24:
 4991 0374 4A4F4652 		.ascii	"JOFR3\000"
 4991      3300
 4992              	.LASF95:
 4993 037a 4144435F 		.ascii	"ADC_ExternalTrigInjectedConvEdgeConfig\000"
 4993      45787465 
 4993      726E616C 
 4993      54726967 
 4993      496E6A65 
 4994              	.LASF79:
 4995 03a1 4E756D62 		.ascii	"Number\000"
 4995      657200
 4996              	.LASF114:
 4997 03a8 4144435F 		.ascii	"ADC_GetMultiModeConversionValue\000"
 4997      4765744D 
 4997      756C7469 
 4997      4D6F6465 
 4997      436F6E76 
 4998              	.LASF13:
 4999 03c8 73697A65 		.ascii	"sizetype\000"
 4999      74797065 
 4999      00
 5000              	.LASF83:
 5001 03d1 4144435F 		.ascii	"ADC_DMACmd\000"
 5001      444D4143 
 5001      6D6400
 5002              	.LASF35:
 5003 03dc 4144435F 		.ascii	"ADC_Common_TypeDef\000"
 5003      436F6D6D 
 5003      6F6E5F54 
 5003      79706544 
 5003      656600
 5004              	.LASF94:
 5005 03ef 4144435F 		.ascii	"ADC_ExternalTrigInjecConv\000"
 5005      45787465 
 5005      726E616C 
 5005      54726967 
 5005      496E6A65 
 5006              	.LASF112:
 5007 0409 2E5C7374 		.ascii	".\\stm32f4periph\\src\\stm32f4xx_adc.c\000"
 5007      6D333266 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 123


 5007      34706572 
 5007      6970685C 
 5007      7372635C 
 5008              	.LASF62:
 5009 042d 4144435F 		.ascii	"ADC_AnalogWatchdog\000"
 5009      416E616C 
 5009      6F675761 
 5009      74636864 
 5009      6F6700
 5010              	.LASF20:
 5011 0440 534D5052 		.ascii	"SMPR1\000"
 5011      3100
 5012              	.LASF73:
 5013 0446 4144435F 		.ascii	"ADC_SampleTime\000"
 5013      53616D70 
 5013      6C655469 
 5013      6D6500
 5014              	.LASF111:
 5015 0455 474E5520 		.ascii	"GNU C 4.7.2\000"
 5015      4320342E 
 5015      372E3200 
 5016              	.LASF116:
 5017 0461 5243435F 		.ascii	"RCC_APB2PeriphResetCmd\000"
 5017      41504232 
 5017      50657269 
 5017      70685265 
 5017      73657443 
 5018              	.LASF90:
 5019 0478 4144435F 		.ascii	"ADC_SetInjectedOffset\000"
 5019      53657449 
 5019      6E6A6563 
 5019      7465644F 
 5019      66667365 
 5020              	.LASF26:
 5021 048e 53515231 		.ascii	"SQR1\000"
 5021      00
 5022              	.LASF27:
 5023 0493 53515232 		.ascii	"SQR2\000"
 5023      00
 5024              	.LASF28:
 5025 0498 53515233 		.ascii	"SQR3\000"
 5025      00
 5026              	.LASF104:
 5027 049d 69746D61 		.ascii	"itmask\000"
 5027      736B00
 5028              	.LASF110:
 5029 04a4 4144435F 		.ascii	"ADC_ClearITPendingBit\000"
 5029      436C6561 
 5029      72495450 
 5029      656E6469 
 5029      6E674269 
 5030              	.LASF72:
 5031 04ba 52616E6B 		.ascii	"Rank\000"
 5031      00
 5032              	.LASF68:
 5033 04bf 4144435F 		.ascii	"ADC_Channel\000"
 5033      4368616E 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 124


 5033      6E656C00 
 5034              	.LASF14:
 5035 04cb 52455345 		.ascii	"RESET\000"
 5035      5400
 5036              	.LASF91:
 5037 04d1 4144435F 		.ascii	"ADC_InjectedChannel\000"
 5037      496E6A65 
 5037      63746564 
 5037      4368616E 
 5037      6E656C00 
 5038              	.LASF98:
 5039 04e5 4144435F 		.ascii	"ADC_GetSoftwareStartInjectedConvCmdStatus\000"
 5039      47657453 
 5039      6F667477 
 5039      61726553 
 5039      74617274 
 5040              	.LASF93:
 5041 050f 4144435F 		.ascii	"ADC_ExternalTrigInjectedConvConfig\000"
 5041      45787465 
 5041      726E616C 
 5041      54726967 
 5041      496E6A65 
 5042              	.LASF57:
 5043 0532 4144435F 		.ascii	"ADC_CommonInitStruct\000"
 5043      436F6D6D 
 5043      6F6E496E 
 5043      69745374 
 5043      72756374 
 5044              	.LASF6:
 5045 0547 696E7433 		.ascii	"int32_t\000"
 5045      325F7400 
 5046              	.LASF1:
 5047 054f 756E7369 		.ascii	"unsigned char\000"
 5047      676E6564 
 5047      20636861 
 5047      7200
 5048              	.LASF2:
 5049 055d 73686F72 		.ascii	"short int\000"
 5049      7420696E 
 5049      7400
 5050              	.LASF44:
 5051 0567 4144435F 		.ascii	"ADC_Mode\000"
 5051      4D6F6465 
 5051      00
 5052              	.LASF88:
 5053 0570 4144435F 		.ascii	"ADC_InjectedSequencerLengthConfig\000"
 5053      496E6A65 
 5053      63746564 
 5053      53657175 
 5053      656E6365 
 5054              	.LASF39:
 5055 0592 4144435F 		.ascii	"ADC_ExternalTrigConvEdge\000"
 5055      45787465 
 5055      726E616C 
 5055      54726967 
 5055      436F6E76 
 5056              	.LASF37:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 125


 5057 05ab 4144435F 		.ascii	"ADC_ScanConvMode\000"
 5057      5363616E 
 5057      436F6E76 
 5057      4D6F6465 
 5057      00
 5058              	.LASF25:
 5059 05bc 4A4F4652 		.ascii	"JOFR4\000"
 5059      3400
 5060              	.LASF43:
 5061 05c2 4144435F 		.ascii	"ADC_InitTypeDef\000"
 5061      496E6974 
 5061      54797065 
 5061      44656600 
 5062              	.LASF108:
 5063 05d2 4144435F 		.ascii	"ADC_GetITStatus\000"
 5063      47657449 
 5063      54537461 
 5063      74757300 
 5064              	.LASF8:
 5065 05e2 75696E74 		.ascii	"uint32_t\000"
 5065      33325F74 
 5065      00
 5066              	.LASF41:
 5067 05eb 4144435F 		.ascii	"ADC_DataAlign\000"
 5067      44617461 
 5067      416C6967 
 5067      6E00
 5068              	.LASF99:
 5069 05f9 4144435F 		.ascii	"ADC_AutoInjectedConvCmd\000"
 5069      4175746F 
 5069      496E6A65 
 5069      63746564 
 5069      436F6E76 
 5070              	.LASF76:
 5071 0611 4144435F 		.ascii	"ADC_EOCOnEachRegularChannelCmd\000"
 5071      454F434F 
 5071      6E456163 
 5071      68526567 
 5071      756C6172 
 5072              	.LASF45:
 5073 0630 4144435F 		.ascii	"ADC_Prescaler\000"
 5073      50726573 
 5073      63616C65 
 5073      7200
 5074              	.LASF56:
 5075 063e 4144435F 		.ascii	"ADC_CommonInit\000"
 5075      436F6D6D 
 5075      6F6E496E 
 5075      697400
 5076              	.LASF109:
 5077 064d 656E6162 		.ascii	"enablestatus\000"
 5077      6C657374 
 5077      61747573 
 5077      00
 5078              	.LASF81:
 5079 065a 4144435F 		.ascii	"ADC_GetSoftwareStartConvStatus\000"
 5079      47657453 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 126


 5079      6F667477 
 5079      61726553 
 5079      74617274 
 5080              	.LASF85:
 5081 0679 4144435F 		.ascii	"ADC_MultiModeDMARequestAfterLastTransferCmd\000"
 5081      4D756C74 
 5081      694D6F64 
 5081      65444D41 
 5081      52657175 
 5082              	.LASF89:
 5083 06a5 4C656E67 		.ascii	"Length\000"
 5083      746800
 5084              	.LASF80:
 5085 06ac 4144435F 		.ascii	"ADC_DiscModeCmd\000"
 5085      44697363 
 5085      4D6F6465 
 5085      436D6400 
 5086              	.LASF61:
 5087 06bc 4144435F 		.ascii	"ADC_AnalogWatchdogCmd\000"
 5087      416E616C 
 5087      6F675761 
 5087      74636864 
 5087      6F67436D 
 5088              	.LASF92:
 5089 06d2 4F666673 		.ascii	"Offset\000"
 5089      657400
 5090              	.LASF3:
 5091 06d9 75696E74 		.ascii	"uint8_t\000"
 5091      385F7400 
 5092              	.LASF105:
 5093 06e1 4144435F 		.ascii	"ADC_GetFlagStatus\000"
 5093      47657446 
 5093      6C616753 
 5093      74617475 
 5093      7300
 5094              	.LASF30:
 5095 06f3 4A445231 		.ascii	"JDR1\000"
 5095      00
 5096              	.LASF31:
 5097 06f8 4A445232 		.ascii	"JDR2\000"
 5097      00
 5098              	.LASF32:
 5099 06fd 4A445233 		.ascii	"JDR3\000"
 5099      00
 5100              	.LASF33:
 5101 0702 4A445234 		.ascii	"JDR4\000"
 5101      00
 5102              	.LASF75:
 5103 0707 62697473 		.ascii	"bitstatus\000"
 5103      74617475 
 5103      7300
 5104              	.LASF36:
 5105 0711 4144435F 		.ascii	"ADC_Resolution\000"
 5105      5265736F 
 5105      6C757469 
 5105      6F6E00
 5106              	.LASF101:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 127


 5107 0720 4144435F 		.ascii	"ADC_GetInjectedConversionValue\000"
 5107      47657449 
 5107      6E6A6563 
 5107      74656443 
 5107      6F6E7665 
 5108              	.LASF74:
 5109 073f 4144435F 		.ascii	"ADC_SoftwareStartConv\000"
 5109      536F6674 
 5109      77617265 
 5109      53746172 
 5109      74436F6E 
 5110              	.LASF47:
 5111 0755 4144435F 		.ascii	"ADC_TwoSamplingDelay\000"
 5111      54776F53 
 5111      616D706C 
 5111      696E6744 
 5111      656C6179 
 5112              	.LASF70:
 5113 076a 4144435F 		.ascii	"ADC_VBATCmd\000"
 5113      56424154 
 5113      436D6400 
 5114              		.ident	"GCC: (Sourcery CodeBench Lite 2012.09-63) 4.7.2"
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 128


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_adc.c
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:70     .text:00000000 $t
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:75     .text:00000000 ADC_DeInit
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:108    .text:0000001a ADC_Init
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:184    .text:00000060 $d
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:188    .text:00000064 $t
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:193    .text:00000064 ADC_StructInit
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:226    .text:00000078 ADC_CommonInit
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:269    .text:00000098 $d
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:274    .text:000000a0 $t
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:279    .text:000000a0 ADC_CommonStructInit
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:305    .text:000000ac ADC_Cmd
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:334    .text:000000be ADC_AnalogWatchdogCmd
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:364    .text:000000ce ADC_AnalogWatchdogThresholdsConfig
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:385    .text:000000d4 ADC_AnalogWatchdogSingleChannelConfig
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:413    .text:000000e0 ADC_TempSensorVrefintCmd
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:438    .text:000000f4 $d
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:442    .text:000000f8 $t
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:447    .text:000000f8 ADC_VBATCmd
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:472    .text:0000010c $d
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:476    .text:00000110 $t
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:481    .text:00000110 ADC_RegularChannelConfig
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:635    .text:000001b2 ADC_SoftwareStartConv
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:656    .text:000001bc ADC_GetSoftwareStartConvStatus
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:679    .text:000001c4 ADC_EOCOnEachRegularChannelCmd
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:708    .text:000001d6 ADC_ContinuousModeCmd
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:737    .text:000001e8 ADC_DiscModeChannelCountConfig
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:768    .text:000001f8 ADC_DiscModeCmd
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:797    .text:0000020a ADC_GetConversionValue
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:819    .text:00000210 ADC_GetMultiModeConversionValue
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:834    .text:00000218 $d
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:838    .text:0000021c $t
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:843    .text:0000021c ADC_DMACmd
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:872    .text:0000022e ADC_DMARequestAfterLastTransferCmd
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:901    .text:00000240 ADC_MultiModeDMARequestAfterLastTransferCmd
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:926    .text:00000254 $d
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:930    .text:00000258 $t
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:935    .text:00000258 ADC_InjectedChannelConfig
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:1036   .text:000002bc ADC_InjectedSequencerLengthConfig
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:1067   .text:000002cc ADC_SetInjectedOffset
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:1104   .text:000002e2 ADC_ExternalTrigInjectedConvConfig
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:1132   .text:000002ee ADC_ExternalTrigInjectedConvEdgeConfig
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:1160   .text:000002fa ADC_SoftwareStartInjectedConv
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:1181   .text:00000304 ADC_GetSoftwareStartInjectedConvCmdStatus
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:1204   .text:0000030c ADC_AutoInjectedConvCmd
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:1233   .text:0000031e ADC_InjectedDiscModeCmd
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:1262   .text:00000330 ADC_GetInjectedConversionValue
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:1302   .text:0000034a ADC_ITConfig
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:1340   .text:00000362 ADC_GetFlagStatus
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:1366   .text:0000036e ADC_ClearFlag
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:1387   .text:00000374 ADC_GetITStatus
C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s:1426   .text:00000390 ADC_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccEAVc1F.s 			page 129


